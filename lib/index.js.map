{"version":3,"file":"index.js","sources":["../src/hooks/useEditorState.tsx"],"sourcesContent":["import type { Editor } from '@tiptap/core';\r\nimport { useEffect, useRef, useState } from 'react';\r\n\r\nexport interface UseEditorStateReturn {\r\n  isReady: boolean\r\n  editor: Editor | null\r\n  editorRef: React.MutableRefObject<{ editor: Editor | null }>\r\n}\r\n\r\nexport function useEditorState(): UseEditorStateReturn {\r\n  const editorRef = useRef<{ editor: Editor | null }>({ editor: null });\r\n  const [isReady, setIsReady] = useState(false);\r\n  const [editor, setEditor] = useState<Editor | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (editorRef.current?.editor) {\r\n      setIsReady(true);\r\n      setEditor(editorRef.current.editor);\r\n    }\r\n  }, [editorRef, editorRef.current?.editor]);\r\n\r\n  return { isReady, editor, editorRef };\r\n}\r\n"],"names":["useEditorState","editorRef","useRef","isReady","setIsReady","useState","editor","setEditor","useEffect","_a"],"mappings":";;;AASO,SAASA,IAAuC;;AACrD,QAAMC,IAAYC,EAAkC,EAAE,QAAQ,MAAM,GAC9D,CAACC,GAASC,CAAU,IAAIC,EAAS,EAAK,GACtC,CAACC,GAAQC,CAAS,IAAIF,EAAwB,IAAI;AAExD,SAAAG,EAAU,MAAM;;AACV,KAAAC,IAAAR,EAAU,YAAV,QAAAQ,EAAmB,WACrBL,EAAW,EAAI,GACLG,EAAAN,EAAU,QAAQ,MAAM;AAAA,KAEnC,CAACA,IAAWQ,IAAAR,EAAU,YAAV,gBAAAQ,EAAmB,MAAM,CAAC,GAElC,EAAE,SAAAN,GAAS,QAAAG,GAAQ,WAAAL,EAAU;AACtC;"}