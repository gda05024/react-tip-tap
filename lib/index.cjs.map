{"version":3,"file":"index.cjs","sources":["../src/hooks/useEditorState.tsx"],"sourcesContent":["import type { Editor } from '@tiptap/core';\r\nimport { useEffect, useRef, useState } from 'react';\r\n\r\nexport interface UseEditorStateReturn {\r\n  isReady: boolean\r\n  editor: Editor | null\r\n  editorRef: React.MutableRefObject<{ editor: Editor | null }>\r\n}\r\n\r\nexport function useEditorState(): UseEditorStateReturn {\r\n  const editorRef = useRef<{ editor: Editor | null }>({ editor: null });\r\n  const [isReady, setIsReady] = useState(false);\r\n  const [editor, setEditor] = useState<Editor | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (editorRef.current?.editor) {\r\n      setIsReady(true);\r\n      setEditor(editorRef.current.editor);\r\n    }\r\n  }, [editorRef, editorRef.current?.editor]);\r\n\r\n  return { isReady, editor, editorRef };\r\n}\r\n"],"names":["useEditorState","editorRef","useRef","isReady","setIsReady","useState","editor","setEditor","useEffect","_a"],"mappings":"mNASO,SAASA,GAAuC,OACrD,MAAMC,EAAYC,EAAA,OAAkC,CAAE,OAAQ,KAAM,EAC9D,CAACC,EAASC,CAAU,EAAIC,EAAAA,SAAS,EAAK,EACtC,CAACC,EAAQC,CAAS,EAAIF,EAAAA,SAAwB,IAAI,EAExDG,OAAAA,EAAAA,UAAU,IAAM,QACVC,EAAAR,EAAU,UAAV,MAAAQ,EAAmB,SACrBL,EAAW,EAAI,EACLG,EAAAN,EAAU,QAAQ,MAAM,IAEnC,CAACA,GAAWQ,EAAAR,EAAU,UAAV,YAAAQ,EAAmB,MAAM,CAAC,EAElC,CAAE,QAAAN,EAAS,OAAAG,EAAQ,UAAAL,CAAU,CACtC"}