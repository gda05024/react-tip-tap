{"version":3,"file":"extension-bundle.js","sources":["../src/components/ActionMenuButton.tsx","../src/extensions/Bold/Bold.ts","../src/extensions/Italic/Italic.ts","../src/extensions/UnderLine/Underline.ts","../src/extensions/Strike/Strike.ts","../src/extensions/Code/Code.ts","../src/extensions/CodeBlock/highlighter.ts","../src/extensions/CodeBlock/shiki-plugin.ts","../src/extensions/CodeBlock/components/CodeBlockActiveButton.tsx","../src/components/ui/select.tsx","../src/hooks/useCopy.tsx","../src/extensions/CodeBlock/components/NodeViewCodeBlock/NodeViewCodeBlock.tsx","../src/extensions/CodeBlock/CodeBlock.ts","../src/extensions/FontFamily/components/FontFamilyButton.tsx","../src/extensions/FontFamily/FontFamily.ts","../src/extensions/Heading/components/HeadingButton.tsx","../src/extensions/Heading/Heading.ts","../src/extensions/TextAlign/components/TextAlignMenuButton.tsx","../src/extensions/TextAlign/TextAlign.ts","../src/extensions/FontSize/components/FontSizeMenuButton.tsx","../src/extensions/FontSize/FontSize.ts","../src/extensions/Color/components/ColorActionButton.tsx","../src/extensions/Color/Color.ts","../src/extensions/Highlight/Highlight.ts","../src/extensions/BulletList/BulletList.ts","../src/extensions/Clear/Clear.ts","../src/extensions/OrderedList/OrderedList.ts","../src/extensions/TaskList/TaskList.ts","../src/extensions/Blockquote/Blockquote.ts","../src/extensions/Link/components/LinkEditPopover.tsx","../src/extensions/Link/Link.ts","../src/extensions/HorizontalRule/HorizontalRule.ts","../src/extensions/History/components/HistoryActionButton.tsx","../src/extensions/History/History.ts","../src/extensions/Document/Document.ts","../src/extensions/MultiColumn/components/ColumnActionButton.ts","../src/extensions/Selection/Selection.ts","../src/extensions/TextBubble/components/TextDropdown.tsx","../src/extensions/TextBubble/TextBubble.ts","../src/extensions/TrailingNode/TrailingNode.ts","../src/extensions/BaseKit.ts","../src/extensions/Subscript/Subscript.ts","../src/extensions/MoreMark/components/ActionMoreButton.tsx","../src/extensions/MoreMark/MoreMark.ts","../src/extensions/Indent/Indent.ts","../src/extensions/LineHeight/components/LineHeightDropdown.tsx","../src/utils/line-height.ts","../src/extensions/LineHeight/LineHeight.ts","../src/extensions/Video/store.ts","../src/extensions/SlashCommand/groups.ts","../src/extensions/SlashCommand/components/CommandsList.tsx","../src/extensions/SlashCommand/SlashCommand.ts","../src/extensions/Table/cell-background.ts","../src/utils/is-mobile.ts","../src/extensions/Table/components/CreateTablePopover.tsx","../src/extensions/Table/components/TableActionButton.tsx","../src/extensions/Table/Table.ts","../src/extensions/FormatPainter/FormatPainter.ts","../src/extensions/SearchAndReplace/components/SearchAndReplaceButton.tsx","../src/extensions/SearchAndReplace/SearchAndReplace.ts","../src/components/ui/emoji-picker.tsx","../src/extensions/Emoji/components/EmojiPicker/EmojiPicker.tsx","../src/extensions/Emoji/components/EmojiList/EmojiList.tsx","../src/extensions/Emoji/components/EmojiList/emojis.ts","../src/extensions/Emoji/Emoji.ts","../src/utils/pdf.ts","../src/extensions/ExportPdf/ExportPdf.ts","../src/extensions/ImportWord/components/ImportWordButton.tsx","../src/extensions/ImportWord/ImportWord.ts","../src/utils/download.ts","../src/extensions/ExportWord/ExportWord.ts","../src/extensions/TableOfContent/components/NodeViewTableOfContent.tsx","../src/hooks/useActive.tsx","../src/extensions/TableOfContent/components/TableOfContentActionButton.tsx","../src/utils/node.ts","../src/extensions/TableOfContent/TableOfContent.ts","../src/extensions/TextDirection/components/TextDirectionButton.tsx","../src/extensions/TextDirection/TextDirection.ts","../src/extensions/Mention/components/NodeViewMentionList/NodeViewMentionList.tsx","../src/extensions/Mention/Mention.ts","../src/extensions/Attachment/components/NodeViewAttachment/FileIconString.ts","../src/extensions/Attachment/components/NodeViewAttachment/FileIcon.tsx","../src/extensions/Attachment/components/NodeViewAttachment/NodeViewAttachment.tsx","../src/extensions/Attachment/Attachment.ts"],"sourcesContent":["/* eslint-disable react/display-name */\nimport React from 'react';\n\nimport { Slot } from '@radix-ui/react-slot';\n\nimport { Button, Tooltip, TooltipContent, TooltipTrigger, icons } from '@/components';\nimport type { ButtonViewReturnComponentProps } from '@/types';\nimport { getShortcutKeys } from '@/utils/plateform';\n\nexport interface ActionMenuButtonProps {\n  /** Icon name to display */\n  icon?: any\n  /** Button title text */\n  title?: string\n  /** Tooltip text */\n  tooltip?: string\n  /** Whether the button is disabled */\n  disabled?: boolean\n  /** Keyboard shortcut keys */\n  shortcutKeys?: string[]\n  /** Button color */\n  color?: string\n  /** Click action handler */\n  action?: ButtonViewReturnComponentProps['action']\n  /** Active state checker */\n  isActive?: ButtonViewReturnComponentProps['isActive']\n  /** Whether to render as child */\n  asChild?: boolean\n}\n\nconst ActionMenuButton = React.forwardRef<HTMLButtonElement, ActionMenuButtonProps>(\n  ({ asChild, ...props }, ref) => {\n    const Icon = icons[props.icon];\n    const Comp = asChild ? Slot : Button;\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>\n          <Comp\n            className=\"richtext-h-[32px] richtext-min-w-24 richtext-overflow-hidden richtext-px-[5px]  richtext-py-0\"\n            disabled={props?.disabled}\n            ref={ref}\n            variant=\"ghost\"\n            {...props}\n          >\n            <div className=\"richtext-flex richtext-h-full richtext-items-center richtext-font-normal\">\n              {props?.title && (\n                <div className=\"richtext-grow richtext-truncate richtext-text-left richtext-text-sm\">\n                  {props?.title}\n                </div>\n              )}\n\n              {Icon && <Icon className=\"richtext-ml-1 richtext-size-3 richtext-shrink-0 richtext-text-zinc-500\" />}\n            </div>\n          </Comp>\n        </TooltipTrigger>\n\n        <TooltipContent>\n          <div className=\"richtext-flex richtext-max-w-24 richtext-flex-col richtext-items-center richtext-text-center\">\n            {props?.tooltip && <div>\n              {props?.tooltip}\n            </div>}\n\n            <div className=\"richtext-flex\">\n              {!!props?.shortcutKeys?.length && <span>\n                {getShortcutKeys(props?.shortcutKeys)}\n              </span>}\n            </div>\n          </div>\n        </TooltipContent>\n      </Tooltip>\n    );\n  },\n);\n\nexport { ActionMenuButton };\n","import type { BoldOptions as TiptapImageOptions } from '@tiptap/extension-bold';\nimport { Bold as TiptapBold } from '@tiptap/extension-bold';\n\nimport { ActionButton } from '@/components';\nimport type { GeneralOptions } from '@/types';\n\nexport interface BoldOptions extends TiptapImageOptions, GeneralOptions<BoldOptions> {}\n\nexport const Bold = TiptapBold.extend<BoldOptions>({\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      button: ({ editor, t }: any) => ({\n        component: ActionButton,\n        componentProps: {\n          action: () => editor.commands.toggleBold(),\n          isActive: () => editor.isActive('bold') || false,\n          disabled: !editor.can().toggleBold(),\n          icon: 'Bold',\n          shortcutKeys: ['mod', 'B'],\n          tooltip: t('editor.bold.tooltip'),\n        },\n      }),\n    };\n  },\n});\n","import type { Editor } from '@tiptap/core';\nimport type { ItalicOptions as TiptapItalicOptions } from '@tiptap/extension-italic';\nimport TiptapItalic from '@tiptap/extension-italic';\n\nimport { ActionButton } from '@/components';\nimport type { GeneralOptions } from '@/types';\n\nexport interface ItalicOptions extends TiptapItalicOptions, GeneralOptions<ItalicOptions> {}\n\nexport const Italic = TiptapItalic.extend<ItalicOptions>({\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      button({ editor, t }: { editor: Editor, t: (...args: any[]) => string }) {\n        return {\n          component: ActionButton,\n          componentProps: {\n            action: () => editor.commands.toggleItalic(),\n            isActive: () => editor.isActive('italic') || false,\n            disabled: !editor.can().toggleItalic(),\n            shortcutKeys: ['mod', 'I'],\n            icon: 'Italic',\n            tooltip: t('editor.italic.tooltip'),\n          },\n        };\n      },\n    };\n  },\n});\n","import type { UnderlineOptions as TiptapUnderlineOptions } from '@tiptap/extension-underline';\nimport TiptapUnderline from '@tiptap/extension-underline';\n\nimport { ActionButton } from '@/components';\nimport type { GeneralOptions } from '@/types';\n\nexport interface UnderlineOptions\n  extends TiptapUnderlineOptions,\n  GeneralOptions<UnderlineOptions> {}\n\nexport const Underline = TiptapUnderline.extend<UnderlineOptions>({\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      button({ editor, t }: any) {\n        return {\n          component: ActionButton,\n          componentProps: {\n            action: () => editor.commands.toggleUnderline(),\n            isActive: () => editor.isActive('underline') || false,\n            disabled: !editor.can().toggleUnderline(),\n            icon: 'Underline',\n            shortcutKeys: ['mod', 'U'],\n            tooltip: t('editor.underline.tooltip'),\n          },\n        };\n      },\n    };\n  },\n});\n","import type { StrikeOptions as TiptapStrikeOptions } from '@tiptap/extension-strike';\nimport { Strike as TiptapStrike } from '@tiptap/extension-strike';\n\nimport { ActionButton } from '@/components';\nimport type { GeneralOptions } from '@/types';\n\nexport interface StrikeOptions extends TiptapStrikeOptions, GeneralOptions<StrikeOptions> {}\n\nexport const Strike = TiptapStrike.extend<StrikeOptions>({\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      button: ({ editor, t }: any) => ({\n        component: ActionButton,\n        componentProps: {\n          action: () => editor.commands.toggleStrike(),\n          isActive: () => editor.isActive('strike') || false,\n          disabled: !editor.can().toggleStrike(),\n          icon: 'Strikethrough',\n          shortcutKeys: ['shift', 'mod', 'S'],\n          tooltip: t('editor.strike.tooltip'),\n        },\n      }),\n    };\n  },\n});\n","import type { CodeOptions as TiptapCodeOptions } from '@tiptap/extension-code';\nimport { Code as TiptapCode } from '@tiptap/extension-code';\n\nimport { ActionButton } from '@/components';\nimport type { GeneralOptions } from '@/types';\n\nexport interface CodeOptions extends TiptapCodeOptions, GeneralOptions<CodeOptions> {}\n\nexport const Code = TiptapCode.extend<CodeOptions>({\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      button: ({ editor, t }) => ({\n        component: ActionButton,\n        componentProps: {\n          action: () => editor.commands.toggleCode(),\n          isActive: () => editor.isActive('code') || false,\n          disabled: !editor.can().toggleCode(),\n          icon: 'Code',\n          shortcutKeys: ['mod', 'E'],\n          tooltip: t('editor.code.tooltip'),\n        },\n      }),\n    };\n  },\n});\n","import type {\n  BundledLanguage,\n  BundledTheme,\n  Highlighter,\n} from 'shiki';\nimport {\n  bundledLanguages,\n  bundledThemes,\n  createHighlighter,\n} from 'shiki';\nimport { findChildren } from '@tiptap/core';\nimport type { Node as ProsemirrorNode } from '@tiptap/pm/model';\n\nlet highlighter: Highlighter | undefined;\nlet highlighterPromise: Promise<void> | undefined;\nconst loadingLanguages = new Set<BundledLanguage>();\nconst loadingThemes = new Set<BundledTheme>();\n\ninterface HighlighterOptions {\n  themes: (BundledTheme | null | undefined)[]\n  languages: (BundledLanguage | null | undefined)[]\n}\n\nexport function resetHighlighter() {\n  highlighter = undefined;\n  highlighterPromise = undefined;\n  loadingLanguages.clear();\n  loadingThemes.clear();\n}\n\nexport function getShiki() {\n  return highlighter;\n}\n\n/**\n * Load the highlighter. Makes sure the highlighter is only loaded once.\n */\nexport function loadHighlighter(opts: HighlighterOptions) {\n  if (!highlighter && !highlighterPromise) {\n    const themes = opts.themes.filter(\n      (theme): theme is BundledTheme => !!theme && theme in bundledThemes,\n    );\n    const langs = opts.languages.filter(\n      (lang): lang is BundledLanguage => !!lang && lang in bundledLanguages,\n    );\n    highlighterPromise = createHighlighter({ themes, langs }).then((h) => {\n      highlighter = h;\n    });\n    return highlighterPromise;\n  }\n\n  if (highlighterPromise) {\n    return highlighterPromise;\n  }\n}\n\n/**\n * Loads a theme if it's valid and not yet loaded.\n * @returns true or false depending on if it got loaded.\n */\nexport async function loadTheme(theme: BundledTheme) {\n  if (\n    highlighter\n    && !highlighter.getLoadedThemes().includes(theme)\n    && !loadingThemes.has(theme)\n    && theme in bundledThemes\n  ) {\n    loadingThemes.add(theme);\n    await highlighter.loadTheme(theme);\n    loadingThemes.delete(theme);\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Loads a language if it's valid and not yet loaded\n * @returns true or false depending on if it got loaded.\n */\nexport async function loadLanguage(language: BundledLanguage) {\n  if (\n    highlighter\n    && !highlighter.getLoadedLanguages().includes(language)\n    && !loadingLanguages.has(language)\n    && language in bundledLanguages\n  ) {\n    loadingLanguages.add(language);\n    await highlighter.loadLanguage(language);\n    loadingLanguages.delete(language);\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Initializes the highlighter based on the prosemirror document,\n * with the themes and languages in the document.\n */\nexport async function initHighlighter({\n  doc,\n  name,\n  defaultTheme,\n  defaultLanguage,\n}: {\n  doc: ProsemirrorNode\n  name: string\n  defaultLanguage: BundledLanguage | null | undefined\n  defaultTheme: BundledTheme\n}) {\n  const codeBlocks = findChildren(doc, node => node.type.name === name);\n\n  const themes = [\n    ...codeBlocks.map(block => block.node.attrs.theme as BundledTheme),\n    defaultTheme,\n  ];\n  const languages = [\n    ...codeBlocks.map(block => block.node.attrs.language as BundledLanguage),\n    defaultLanguage,\n  ];\n\n  if (!highlighter) {\n    const loader = loadHighlighter({ languages, themes });\n    await loader;\n  } else {\n    await Promise.all([\n      ...themes.flatMap(theme => loadTheme(theme)),\n      ...languages.flatMap(language => !!language && loadLanguage(language)),\n    ]);\n  }\n}\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport { findChildren } from '@tiptap/core';\nimport type { Node as ProsemirrorNode } from '@tiptap/pm/model';\nimport type { PluginView } from '@tiptap/pm/state';\nimport { Plugin, PluginKey } from '@tiptap/pm/state';\nimport { Decoration, DecorationSet } from '@tiptap/pm/view';\nimport type { BundledLanguage, BundledTheme } from 'shiki';\n\nimport {\n  getShiki,\n  initHighlighter,\n  loadLanguage,\n  loadTheme,\n} from './highlighter';\n\n/** Create code decorations for the current document */\nfunction getDecorations({\n  doc,\n  name,\n  defaultTheme,\n  defaultLanguage,\n}: {\n  doc: ProsemirrorNode\n  name: string\n  defaultLanguage: BundledLanguage | null | undefined\n  defaultTheme: BundledTheme\n}) {\n  const decorations: Decoration[] = [];\n\n  const codeBlocks = findChildren(doc, node => node.type.name === name);\n\n  codeBlocks.forEach((block) => {\n    let from = block.pos + 1;\n    let language = block.node.attrs.language || defaultLanguage;\n    const theme = block.node.attrs.theme || defaultTheme;\n\n    const highlighter = getShiki();\n\n    if (!highlighter)\n      return;\n\n    if (!highlighter.getLoadedLanguages().includes(language)) {\n      language = 'plaintext';\n    }\n\n    const themeToApply = highlighter.getLoadedThemes().includes(theme)\n      ? theme\n      : highlighter.getLoadedThemes()[0];\n\n    const tokens = highlighter.codeToTokensBase(block.node.textContent, {\n      lang: language,\n      theme: themeToApply,\n    });\n\n    for (const line of tokens) {\n      for (const token of line) {\n        const to = from + token.content.length;\n\n        const decoration = Decoration.inline(from, to, {\n          style: `color: ${token.color}`,\n        });\n\n        decorations.push(decoration);\n\n        from = to;\n      }\n\n      from += 1;\n    }\n  });\n\n  return DecorationSet.create(doc, decorations);\n}\n\nexport function ShikiPlugin({\n  name,\n  defaultLanguage,\n  defaultTheme,\n}: {\n  name: string\n  defaultLanguage: BundledLanguage | null | undefined\n  defaultTheme: BundledTheme\n}) {\n  //@ts-expect-error\n  const shikiPlugin = new Plugin<any>({\n    key: new PluginKey('shiki'),\n\n    view(view) {\n      // This small view is just for initial async handling\n      class ShikiPluginView implements PluginView {\n        constructor() {\n          this.initDecorations();\n        }\n\n        update() {\n          this.checkUndecoratedBlocks();\n        }\n\n        destroy() {\n          return;\n        }\n\n        // Initialize shiki async, and then highlight initial document\n        async initDecorations() {\n          const doc = view.state.doc;\n          await initHighlighter({ doc, name, defaultLanguage, defaultTheme });\n          const tr = view.state.tr.setMeta('shikiPluginForceDecoration', true);\n          view.dispatch(tr);\n        }\n\n        // When new codeblocks were added and they have missing themes or\n        // languages, load those and then add code decorations once again.\n        async checkUndecoratedBlocks() {\n          const codeBlocks = findChildren(\n            view.state.doc,\n            node => node.type.name === name,\n          );\n\n          // Load missing themes or languages when necessary.\n          // loadStates is an array with booleans depending on if a theme/lang\n          // got loaded.\n          const loadStates = await Promise.all(\n            codeBlocks.flatMap(block => [\n              loadTheme(block.node.attrs.theme),\n              loadLanguage(block.node.attrs.language),\n            ]),\n          );\n          const didLoadSomething = loadStates.includes(true);\n\n          // The asynchronous nature of this is potentially prone to\n          // race conditions. Imma just hope it's fine lol\n\n          if (didLoadSomething) {\n            const tr = view.state.tr.setMeta('shikiPluginForceDecoration', true);\n            view.dispatch(tr);\n          }\n        }\n      }\n\n      return new ShikiPluginView();\n    },\n\n    state: {\n      init: (_, { doc }) => {\n        return getDecorations({\n          doc,\n          name,\n          defaultLanguage,\n          defaultTheme,\n        });\n      },\n      apply: (transaction, decorationSet, oldState, newState) => {\n        const oldNodeName = oldState.selection.$head.parent.type.name;\n        const newNodeName = newState.selection.$head.parent.type.name;\n        const oldNodes = findChildren(\n          oldState.doc,\n          node => node.type.name === name,\n        );\n        const newNodes = findChildren(\n          newState.doc,\n          node => node.type.name === name,\n        );\n\n        const didChangeSomeCodeBlock\n          = transaction.docChanged\n          // Apply decorations if:\n          // selection includes named node,\n            && ([oldNodeName, newNodeName].includes(name)\n            // OR transaction adds/removes named node,\n              || newNodes.length !== oldNodes.length\n            // OR transaction has changes that completely encapsulte a node\n            // (for example, a transaction that affects the entire document).\n            // Such transactions can happen during collab syncing via y-prosemirror, for example.\n              || transaction.steps.some((step: any) => {\n                return (\n                  step.from !== undefined\n                  && step.to !== undefined\n                  && oldNodes.some((node) => {\n                    return (\n                      node.pos >= step.from\n                      && node.pos + node.node.nodeSize <= step.to\n                    );\n                  })\n                );\n              }));\n\n        // only create code decoration when it's necessary to do so\n        if (\n          transaction.getMeta('shikiPluginForceDecoration')\n          || didChangeSomeCodeBlock\n        ) {\n          return getDecorations({\n            doc: transaction.doc,\n            name,\n            defaultLanguage,\n            defaultTheme,\n          });\n        }\n\n        return decorationSet.map(transaction.mapping, transaction.doc);\n      },\n    },\n\n    props: {\n      //@ts-expect-error\n      decorations(state) {\n        return shikiPlugin.getState(state);\n      },\n    },\n  });\n\n  return shikiPlugin;\n}\n","import React, { useMemo } from 'react';\n\nimport type { BundledLanguage } from 'shiki';\nimport {\n  ActionButton,\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from '@/components';\nimport { MAP_LANGUAGE_CODE_LABELS } from '@/constants';\n\ninterface Props {\n  editor: any\n  disabled?: boolean\n  color?: string\n  shortcutKeys?: string[]\n  maxHeight?: string | number\n  tooltip?: string\n  languages?: BundledLanguage[]\n  action: (language: string) => void\n  icon?: any\n}\n\nfunction CodeBlockActiveButton({ action, languages, ...props }: Props) {\n  const onClick = (language: string) => {\n    action(language);\n  };\n\n  const langs = useMemo(() => {\n    return languages?.map((language) => {\n      const title = MAP_LANGUAGE_CODE_LABELS[language] || language;\n\n      return {\n        title,\n        // icon: language.icon,\n        language,\n      };\n    });\n  }, [languages]);\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger disabled={props?.disabled} asChild>\n        <ActionButton\n          tooltip={props?.tooltip}\n          disabled={props?.disabled}\n          icon={props?.icon}\n        />\n      </DropdownMenuTrigger>\n      <DropdownMenuContent className=\"richtext-w-full !richtext-max-h-[180px] !richtext-overflow-y-scroll\">\n        {langs?.map((item: any) => {\n          return (\n            <DropdownMenuItem key={`codeblock-${item.title}`} onClick={() => onClick(item.language)}>\n              <div className=\"richtext-h-full richtext-ml-1\">\n                {item.title}\n              </div>\n            </DropdownMenuItem>\n          );\n        })}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n\nexport default CodeBlockActiveButton;\n","'use client';\n\nimport * as React from 'react';\nimport * as SelectPrimitive from '@radix-ui/react-select';\nimport { Check, ChevronDown, ChevronUp } from 'lucide-react';\n\nimport { cn } from '@/lib/utils';\n\nconst Select = SelectPrimitive.Root;\n\nconst SelectGroup = SelectPrimitive.Group;\n\nconst SelectValue = SelectPrimitive.Value;\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      'richtext-flex richtext-h-10 richtext-w-full richtext-items-center richtext-justify-between richtext-rounded-md richtext-border richtext-border-input richtext-bg-background richtext-px-3 richtext-py-2 richtext-text-sm richtext-ring-offset-background placeholder:richtext-text-muted-foreground focus:richtext-outline-none focus:richtext-ring-2 focus:richtext-ring-ring focus:richtext-ring-offset-2 disabled:richtext-cursor-not-allowed disabled:richtext-opacity-50 [&>span]:richtext-line-clamp-1',\n      className,\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"richtext-h-4 richtext-w-4 richtext-opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n));\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName;\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      'richtext-flex richtext-cursor-default richtext-items-center richtext-justify-center richtext-py-1',\n      className,\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"richtext-h-4 richtext-w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n));\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName;\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      'richtext-flex richtext-cursor-default richtext-items-center richtext-justify-center richtext-py-1',\n      className,\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"richtext-h-4 richtext-w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n));\nSelectScrollDownButton.displayName\n  = SelectPrimitive.ScrollDownButton.displayName;\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = 'popper', ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        'richtext-relative richtext-z-50 richtext-max-h-60 richtext-overflow-y-auto richtext-min-w-[8rem] richtext-overflow-hidden richtext-rounded-md richtext-border richtext-bg-popover richtext-text-popover-foreground richtext-shadow-md data-[state=open]:richtext-animate-in data-[state=closed]:richtext-animate-out data-[state=closed]:richtext-fade-out-0 data-[state=open]:richtext-fade-in-0 data-[state=closed]:richtext-zoom-out-95 data-[state=open]:richtext-zoom-in-95 data-[side=bottom]:richtext-slide-in-from-top-2 data-[side=left]:richtext-slide-in-from-right-2 data-[side=right]:richtext-slide-in-from-left-2 data-[side=top]:richtext-slide-in-from-bottom-2',\n        position === 'popper'\n        && 'data-[side=bottom]:richtext-translate-y-1 data-[side=left]:richtext--translate-x-1 data-[side=right]:richtext-translate-x-1 data-[side=top]:richtext--translate-y-1',\n        className,\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          'richtext-p-1',\n          position === 'popper'\n          && 'richtext-h-[var(--radix-select-trigger-height)] richtext-w-full richtext-min-w-[var(--radix-select-trigger-width)]',\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n));\nSelectContent.displayName = SelectPrimitive.Content.displayName;\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn('richtext-py-1.5 richtext-pl-8 richtext-pr-2 richtext-text-sm richtext-font-semibold', className)}\n    {...props}\n  />\n));\nSelectLabel.displayName = SelectPrimitive.Label.displayName;\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      'richtext-relative richtext-flex richtext-w-full richtext-cursor-default richtext-select-none richtext-items-center richtext-rounded-sm richtext-py-1.5 richtext-pl-8 richtext-pr-2 richtext-text-sm richtext-outline-none focus:richtext-bg-accent focus:richtext-text-accent-foreground data-[disabled]:richtext-pointer-events-none data-[disabled]:richtext-opacity-50',\n      className,\n    )}\n    {...props}\n  >\n    <span className=\"richtext-absolute richtext-left-2 richtext-flex richtext-h-3.5 richtext-w-3.5 richtext-items-center richtext-justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"richtext-h-4 richtext-w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>\n      {children}\n    </SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n));\nSelectItem.displayName = SelectPrimitive.Item.displayName;\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn('richtext--mx-1 richtext-my-1 richtext-h-px richtext-bg-muted', className)}\n    {...props}\n  />\n));\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName;\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n};\n","import { useState } from 'react';\n\nfunction useCopy() {\n  const [isCopied, setIsCopied] = useState(false);\n\n  const copyToClipboard = async (text: string) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      setIsCopied(true);\n      setTimeout(() => setIsCopied(false), 2000); // Reset the copy status after 2 seconds\n    } catch (error) {\n      console.error('Failed to copy text: ', error);\n      setIsCopied(false);\n    }\n  };\n\n  return { isCopied, copyToClipboard };\n}\n\nexport default useCopy;\n","import React, { useCallback, useMemo, useRef } from 'react';\n\nimport { NodeViewContent, NodeViewWrapper } from '@tiptap/react';\nimport clsx from 'clsx';\nimport { Copy, CopyCheck } from 'lucide-react';\n\nimport { IconComponent } from '@/components';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { DEFAULT_LANGUAGE_CODE_BLOCK } from '@/constants';\nimport { CodeBlock } from '@/extensions';\nimport useCopy from '@/hooks/useCopy';\nimport { useEditableEditor } from '@/store/editableEditor';\nimport { deleteNode } from '@/utils/delete-node';\n\nimport styles from './index.module.scss';\n\nexport function NodeViewCodeBlock({ editor, node: { attrs }, updateAttributes, extension }: any) {\n  const { isCopied, copyToClipboard } = useCopy();\n\n  const listLang = useMemo(() => {\n    return extension.options.languages?.length ? extension.options.languages : DEFAULT_LANGUAGE_CODE_BLOCK;\n  }, [extension.options.languages]);\n\n  const isEditable = useEditableEditor();\n\n  const isPrint = editor?.options?.editorProps?.print;\n  const { language: defaultLanguage } = attrs;\n  const $container: any = useRef<HTMLPreElement>(null);\n\n  const deleteMe = useCallback(() => deleteNode(CodeBlock.name, editor), [editor]);\n\n  return (\n    <NodeViewWrapper className={clsx(styles.wrap, !isPrint && styles.maxHeight, 'render-wrapper')}>\n\n      <div className={clsx(styles.blockInfo, {\n        [styles.blockInfoEditable]: !isEditable,\n      })}\n\n      >\n        <span\n          className={clsx(styles.btnCopy, isCopied && styles.copied)}\n          onClick={() => copyToClipboard($container.current.innerText)}\n        >\n          {!isCopied ? <Copy size={16} /> : <CopyCheck size={16} />}\n        </span>\n\n        <span\n          className={styles.btnDelete}\n          onClick={deleteMe}\n        >\n          <IconComponent\n            name=\"Trash2\"\n          />\n        </span>\n\n        <div className={styles.selectLang}>\n          <Select\n            defaultValue={defaultLanguage || 'auto'}\n            disabled={!isEditable}\n            onValueChange={value => updateAttributes({ language: value })}\n          >\n            <SelectTrigger>\n              <SelectValue placeholder=\"Language\" />\n            </SelectTrigger>\n\n            <SelectContent className=\"richtext-max-h-60 richtext-overflow-y-auto\">\n              <SelectItem value=\"auto\">\n                Auto\n              </SelectItem>\n\n              {listLang.map((lang: any, index: any) => (\n                <SelectItem key={`code-lang-${index}`}\n                  value={lang}\n                >\n                  {lang.charAt(0).toUpperCase() + lang.slice(1)}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </div>\n\n      </div>\n\n      <pre ref={$container}>\n        <NodeViewContent as=\"code\" />\n      </pre>\n    </NodeViewWrapper>\n  );\n}\n","import type { BundledLanguage, BundledTheme } from 'shiki';\nimport type { CodeBlockOptions as CodeBlockExtOptions } from '@tiptap/extension-code-block';\nimport CodeBlockExt from '@tiptap/extension-code-block';\nimport { ReactNodeViewRenderer } from '@tiptap/react';\nimport type { GeneralOptions } from '@/types';\nimport { ShikiPlugin } from '@/extensions/CodeBlock/shiki-plugin';\nimport CodeBlockActiveButton from '@/extensions/CodeBlock/components/CodeBlockActiveButton';\nimport { DEFAULT_LANGUAGE_CODE_BLOCK } from '@/constants';\nimport { NodeViewCodeBlock } from '@/extensions/CodeBlock/components/NodeViewCodeBlock/NodeViewCodeBlock';\n\nexport interface CodeBlockOptions\n  extends GeneralOptions<CodeBlockExtOptions> {\n  languages?: BundledLanguage[]\n  defaultTheme: BundledTheme\n}\n\nexport const CodeBlock = CodeBlockExt.extend<CodeBlockOptions>({\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      languages: [],\n      button: ({ editor, t, extension }: any) => {\n        const languages = extension?.options?.languages?.length ? extension?.options?.languages : DEFAULT_LANGUAGE_CODE_BLOCK;\n\n        return {\n          component: CodeBlockActiveButton,\n          componentProps: {\n            action: (language = 'js') => editor.commands.setCodeBlock({\n              language,\n            }),\n            isActive: () => editor.isActive('codeBlock') || false,\n            disabled: !editor.can().toggleCodeBlock(),\n            icon: 'Code2',\n            tooltip: t('editor.codeblock.tooltip'),\n            languages,\n          },\n        };\n      },\n    };\n  },\n  addNodeView() {\n    return ReactNodeViewRenderer(NodeViewCodeBlock);\n  },\n  addProseMirrorPlugins() {\n    return [\n      ...(this.parent?.() || []),\n      ShikiPlugin({\n        name: this.name,\n        defaultLanguage: null,\n        defaultTheme: this.options.defaultTheme,\n      }),\n    ];\n  },\n});\n","import React, { Fragment, useMemo } from 'react';\n\nimport {\n  ActionMenuButton,\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from '@/components';\nimport { useLocale } from '@/locales';\nimport type { ButtonViewReturnComponentProps } from '@/types';\n\nexport interface Item {\n  title: string\n  icon?: any\n  font?: string\n  isActive: NonNullable<ButtonViewReturnComponentProps['isActive']>\n  action?: ButtonViewReturnComponentProps['action']\n  style?: React.CSSProperties\n  shortcutKeys?: string[]\n  disabled?: boolean\n  divider?: boolean\n  default?: boolean\n}\n\ninterface Props {\n  editor: any\n  disabled?: boolean\n  color?: string\n  shortcutKeys?: string[]\n  maxHeight?: string | number\n  tooltip?: string\n  items?: Item[]\n}\n\nfunction FontFamilyButton(props: Props) {\n  const { t, lang } = useLocale();\n\n  const active = useMemo(() => {\n    const find: any = props?.items?.find((k: any) => k.isActive());\n\n    if (find && !find.default) {\n      return {\n        ...find,\n      };\n    }\n    const item: Item = {\n      title: props.tooltip as any,\n      font: t('editor.fontFamily.default.tooltip'),\n      isActive: () => false,\n      disabled: false,\n      action: () => props.editor.chain().focus().unsetFontFamily().run(),\n    };\n    return item;\n  }, [t, lang, props]);\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild\n        disabled={props?.disabled}\n      >\n        <ActionMenuButton\n          disabled={props?.disabled}\n          icon=\"MenuDown\"\n          title={active?.font?.length > 7 ? `${active?.font?.slice(0, 6)}...` : active?.font}\n          tooltip={props?.tooltip}\n        />\n      </DropdownMenuTrigger>\n\n      <DropdownMenuContent className=\"richtext-w-full\">\n        {props?.items?.map((item: any, index) => {\n          const style\n            = item.font === t('editor.fontFamily.default.tooltip') ? {} : { fontFamily: item.font };\n\n          return (\n            <Fragment key={`font-family-${index}`}>\n              <DropdownMenuCheckboxItem checked={active?.font === item.font}\n                onClick={item.action}\n              >\n                <div className=\"richtext-ml-1 richtext-h-full\"\n                  style={style}\n                >\n                  {item.font}\n                </div>\n              </DropdownMenuCheckboxItem>\n\n              {item.font === t('editor.fontFamily.default.tooltip') && <DropdownMenuSeparator />}\n            </Fragment>\n          );\n        })}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n\nexport default FontFamilyButton;\n","import type { Extension } from '@tiptap/core';\nimport type { FontFamilyOptions as TiptapFontFamilyOptions } from '@tiptap/extension-font-family';\nimport FontFamilyTiptap from '@tiptap/extension-font-family';\n\nimport type { BaseKitOptions } from '../BaseKit';\nimport { ensureNameValueOptions } from '@/utils/utils';\nimport { DEFAULT_FONT_FAMILY_LIST } from '@/constants';\nimport FontFamilyButton from '@/extensions/FontFamily/components/FontFamilyButton';\nimport type { GeneralOptions, NameValueOption } from '@/types';\n\nexport interface FontFamilyOptions extends TiptapFontFamilyOptions, GeneralOptions<FontFamilyOptions> {\n  /**\n   * Font family list.\n   */\n  fontFamilyList: (string | NameValueOption)[]\n}\n\nexport const FontFamily = FontFamilyTiptap.extend<FontFamilyOptions>({\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      fontFamilyList: DEFAULT_FONT_FAMILY_LIST,\n      button({ editor, extension, t }: any) {\n        const { extensions = [] } = editor.extensionManager ?? [];\n        const fontFamilyList = ensureNameValueOptions(extension?.options?.fontFamilyList || []);\n        const baseKitExt = extensions.find(\n          (k: any) => k.name === 'base-kit',\n        ) as Extension<BaseKitOptions>;\n\n        const items = fontFamilyList.map(font => ({\n          action: () => {\n            editor.chain().focus().setFontFamily(font.value).run();\n          },\n          isActive: () => editor.isActive('textStyle', { fontFamily: font.value }) || false,\n          disabled: !editor.can().setFontFamily(font.value),\n          title: font.name,\n          font: font.value,\n        }));\n\n        if (baseKitExt && baseKitExt.options.textStyle !== false) {\n          items.unshift({\n            action: () => editor.chain().focus().unsetFontFamily().run(),\n            isActive: () => false,\n            disabled: false,\n            font: t('editor.fontFamily.default.tooltip'),\n            title: t('editor.fontFamily.tooltip'),\n          });\n        }\n\n        const disabled = items.filter((k: any) => k.disabled).length === items.length;\n\n        return {\n          component: FontFamilyButton,\n          componentProps: {\n            tooltip: t('editor.fontFamily.tooltip'),\n            disabled,\n            items,\n            editor,\n          },\n        };\n      },\n    };\n  },\n});\n","import React, { Fragment, useMemo } from 'react';\n\nimport {\n  ActionMenuButton,\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuTrigger,\n} from '@/components';\nimport type { ButtonViewReturnComponentProps } from '@/types';\nimport { getShortcutKey } from '@/utils/plateform';\n\nexport interface Item {\n  title: string\n  icon?: any\n  level?: number\n  isActive: NonNullable<ButtonViewReturnComponentProps['isActive']>\n  action?: ButtonViewReturnComponentProps['action']\n  style?: React.CSSProperties\n  shortcutKeys?: string[]\n  disabled?: boolean\n  divider?: boolean\n  default?: boolean\n}\n\ninterface Props {\n  editor: any\n  disabled?: boolean\n  color?: string\n  shortcutKeys?: string[]\n  maxHeight?: string | number\n  tooltip?: string\n  items?: Item[]\n}\n\nfunction HeadingButton(props: Props) {\n  const active = useMemo(() => {\n    const find: any = props?.items?.find((k: any) => k.isActive());\n\n    if (find && !find.default) {\n      return {\n        ...find,\n      };\n    }\n    const item: Item = {\n      title: props.tooltip as any,\n      level: 0,\n      isActive: () => false,\n    };\n    return item;\n  }, [props]);\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild\n        disabled={props?.disabled}\n      >\n        <ActionMenuButton\n          disabled={props?.disabled}\n          icon=\"MenuDown\"\n          title={active?.title}\n          tooltip={props?.tooltip}\n        />\n      </DropdownMenuTrigger>\n\n      <DropdownMenuContent className=\"richtext-w-full\">\n        {props?.items?.map((item: any, index) => {\n          return (\n            <Fragment key={`heading-k-${index}`}>\n              <DropdownMenuCheckboxItem\n                checked={active?.title === item.title}\n                onClick={item.action}\n              >\n                <div className={`heading- richtext-ml-1 richtext-h-full${item.level}`}>\n                  {item.title}\n                </div>\n\n                {!!item?.shortcutKeys?.length && (\n                  <DropdownMenuShortcut className=\"richtext-pl-4\">\n                    {item?.shortcutKeys?.map((item: any) => getShortcutKey(item)).join(' ')}\n                  </DropdownMenuShortcut>\n                )}\n              </DropdownMenuCheckboxItem>\n\n              {item.level === 0 && <DropdownMenuSeparator />}\n            </Fragment>\n          );\n        })}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n\nexport default HeadingButton;\n","import type { Extension } from '@tiptap/core';\nimport type { HeadingOptions as TiptapHeadingOptions } from '@tiptap/extension-heading';\nimport { Heading as TiptapHeading } from '@tiptap/extension-heading';\n\nimport type { BaseKitOptions } from '../BaseKit';\nimport HeadingButton from '@/extensions/Heading/components/HeadingButton';\nimport type { GeneralOptions } from '@/types';\n\nexport interface HeadingOptions extends TiptapHeadingOptions, GeneralOptions<HeadingOptions> {}\n\nexport const Heading = TiptapHeading.extend<HeadingOptions>({\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      levels: [1, 2, 3, 4, 5, 6],\n      button({ editor, extension, t }) {\n        const { extensions = [] } = editor.extensionManager ?? [];\n        const levels = extension.options?.levels || [];\n        const baseKitExt = extensions.find(\n          k => k.name === 'base-kit',\n        ) as Extension<BaseKitOptions>;\n\n        const items: any[] = levels.map(level => ({\n          action: () => editor.commands.toggleHeading({ level }),\n          isActive: () => editor.isActive('heading', { level }) || false,\n          disabled: !editor.can().toggleHeading({ level }),\n          title: t(`editor.heading.h${level}.tooltip`),\n          level,\n          shortcutKeys: ['alt', 'mod', `${level}`],\n        }));\n\n        if (baseKitExt && baseKitExt.options.paragraph !== false) {\n          items.unshift({\n            action: () => editor.commands.setParagraph(),\n            isActive: () => editor.isActive('paragraph') || false,\n            disabled: !editor.can().setParagraph(),\n            level: 0,\n            title: t('editor.paragraph.tooltip'),\n            shortcutKeys: ['alt', 'mod', '0'],\n          });\n        }\n\n        const disabled = items.filter((k: any) => k.disabled).length === items.length;\n\n        return {\n          component: HeadingButton,\n          componentProps: {\n            tooltip: t('editor.heading.tooltip'),\n            disabled,\n            items,\n            editor,\n          },\n        };\n      },\n    };\n  },\n});\n","import React, { useMemo } from 'react';\n\nimport { ActionButton, IconComponent } from '@/components';\nimport { Popover, PopoverContent, PopoverTrigger, Toggle, Tooltip, TooltipContent, TooltipTrigger } from '@/components/ui';\nimport type { ButtonViewReturnComponentProps } from '@/types';\nimport { getShortcutKey } from '@/utils/plateform';\n\nexport interface Item {\n  title: string\n  icon?: any\n  isActive: NonNullable<ButtonViewReturnComponentProps['isActive']>\n  action?: ButtonViewReturnComponentProps['action']\n  style?: React.CSSProperties\n  shortcutKeys?: string[]\n  disabled?: boolean\n  divider?: boolean\n  default?: boolean\n}\ninterface IPropsTextAlignMenuButton {\n  editor: any\n  disabled?: boolean\n  color?: string\n  maxHeight?: string | number\n  icon?: any\n  tooltip?: string\n  items?: Item[]\n}\n\nfunction TextAlignMenuButton(props: IPropsTextAlignMenuButton) {\n  const active = useMemo(() => {\n    const find: any = props?.items?.find((k: any) => k.isActive());\n    if (find && !find.default) {\n      return {\n        ...find,\n        icon: find.icon ? find.icon : props.icon,\n      };\n    }\n    const item: Item = {\n      title: props?.tooltip as any,\n      icon: props.icon,\n      isActive: () => false,\n    };\n\n    return item;\n  }, [props]);\n\n  return (\n    <Popover modal>\n      <PopoverTrigger asChild\n        disabled={props?.disabled}\n      >\n        <ActionButton\n          customClass=\"!richtext-w-12 richtext-h-12\"\n          disabled={props?.disabled}\n          icon={props?.icon}\n          tooltip={props?.tooltip}\n        >\n          <IconComponent className=\"richtext-ml-1 richtext-size-3 richtext-text-zinc-500\"\n            name=\"MenuDown\"\n          />\n        </ActionButton>\n      </PopoverTrigger>\n\n      <PopoverContent\n        align=\"start\"\n        className=\"richtext-flex richtext-w-full richtext-min-w-4 richtext-flex-row richtext-gap-1 !richtext-p-[4px]\"\n        side=\"bottom\"\n      >\n        {props?.items?.map((item, index) => {\n          return (\n            <Tooltip key={`text-align-${index}`}>\n              <TooltipTrigger asChild>\n                <Toggle\n                  className=\"richtext-size-7 richtext-p-1\"\n                  data-state={active.title === item.title ? 'on' : 'off'}\n                  onClick={item?.action}\n                  pressed={active.title === item.title}\n                  size=\"sm\"\n                >\n                  {item?.icon && <IconComponent name={item.icon} />}\n                </Toggle>\n              </TooltipTrigger>\n\n              <TooltipContent className=\"richtext-flex richtext-flex-col richtext-items-center\">\n                <span>\n                  {item.title}\n                </span>\n\n                {!!item.shortcutKeys?.length && (\n                  <span>\n                    {item.shortcutKeys?.map(item => getShortcutKey(item)).join(' ')}\n                  </span>\n                )}\n              </TooltipContent>\n            </Tooltip>\n          );\n        })}\n      </PopoverContent>\n    </Popover>\n  );\n}\n\nexport default TextAlignMenuButton;\n","import type { Editor, Extension } from '@tiptap/core';\nimport type { TextAlignOptions as TiptapTextAlignOptions } from '@tiptap/extension-text-align';\nimport TiptapTextAlign from '@tiptap/extension-text-align';\n\nimport TextAlignMenuButton from '@/extensions/TextAlign/components/TextAlignMenuButton';\nimport type { GeneralOptions } from '@/types';\n\ntype Alignments = 'left' | 'center' | 'right' | 'justify';\n/**\n * Represents the interface for text align options, extending TiptapTextAlignOptions and GeneralOptions.\n */\nexport interface TextAlignOptions extends TiptapTextAlignOptions, GeneralOptions<TextAlignOptions> {\n  /**\n   * List of available alignment options\n   *\n   * @default ['left', 'center', 'right', 'justify']\n   */\n  alignments: Alignments[]\n}\nexport const TextAlign = TiptapTextAlign.extend<TextAlignOptions>({\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      types: ['heading', 'paragraph', 'list_item', 'title'],\n      button({\n        editor,\n        extension,\n        t,\n      }: {\n        editor: Editor\n        extension: Extension\n        t: (...args: any[]) => string\n      }) {\n        const alignments = (extension.options?.alignments as Alignments[]) || [];\n        const shortcutKeysMap = {\n          left: ['mod', 'Shift', 'L'],\n          center: ['mod', 'Shift', 'E'],\n          right: ['mod', 'Shift', 'R'],\n          justify: ['mod', 'Shift', 'J'],\n        };\n        const iconMap = {\n          left: 'AlignLeft',\n          center: 'AlignCenter',\n          right: 'AlignRight',\n          justify: 'AlignJustify',\n        };\n        const items = alignments.map(k => ({\n          title: t(`editor.textalign.${k}.tooltip`),\n          icon: iconMap[k],\n          shortcutKeys: shortcutKeysMap[k],\n          isActive: () => editor.isActive({ textAlign: k }) || false,\n          action: () => editor.commands?.setTextAlign?.(k),\n          disabled: !editor?.can?.()?.setTextAlign?.(k),\n        }));\n        const disabled = items.filter(k => k.disabled).length === items.length;\n        return {\n          component: TextAlignMenuButton,\n          componentProps: {\n            icon: 'AlignJustify',\n            tooltip: t('editor.textalign.tooltip'),\n            disabled,\n            items,\n          },\n        };\n      },\n    };\n  },\n});\n","import React, { useMemo } from 'react';\n\nimport {\n  ActionMenuButton,\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuTrigger,\n} from '@/components';\nimport { useLocale } from '@/locales';\nimport type { ButtonViewReturnComponentProps } from '@/types';\n\nexport interface Item {\n  title: string\n  isActive: NonNullable<ButtonViewReturnComponentProps['isActive']>\n  action?: ButtonViewReturnComponentProps['action']\n  style?: React.CSSProperties\n  disabled?: boolean\n  divider?: boolean\n  default?: boolean\n}\n\ninterface IPropsFontSizeMenuButton {\n  editor: any\n  disabled?: boolean\n  color?: string\n  shortcutKeys?: string[]\n  maxHeight?: string | number\n  tooltip?: string\n  items?: Item[]\n}\n\nfunction FontSizeMenuButton(props: IPropsFontSizeMenuButton) {\n  const { t } = useLocale();\n\n  const active = useMemo(() => {\n    const find: any = (props.items || []).find((k: any) => k.isActive());\n    if (find) {\n      return find;\n    }\n    const item: Item = {\n      title: t('editor.fontSize.default.tooltip'),\n      isActive: () => false,\n    };\n    return item;\n  }, [props]);\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild\n        disabled={props?.disabled}\n      >\n        <ActionMenuButton\n          disabled={props?.disabled}\n          icon=\"MenuDown\"\n          title={active?.title}\n          tooltip={`${props?.tooltip}`}\n        />\n      </DropdownMenuTrigger>\n\n      <DropdownMenuContent className=\"richtext-max-h-96 richtext-w-32 richtext-overflow-y-auto\">\n        {props?.items?.map((item: any, index) => {\n          return (\n            <DropdownMenuCheckboxItem\n              checked={active.title === item.title}\n              key={`font-size-${index}`}\n              onClick={item.action}\n            >\n              <div className=\"richtext-ml-1 richtext-h-full\">\n                {item.title}\n              </div>\n            </DropdownMenuCheckboxItem>\n          );\n        })}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n\nexport default FontSizeMenuButton;\n","import { Extension } from '@tiptap/core';\n\nimport FontSizeMenuButton from './components/FontSizeMenuButton';\nimport { ensureNameValueOptions } from '@/utils/utils';\nimport { DEFAULT_FONT_SIZE_LIST, DEFAULT_FONT_SIZE_VALUE } from '@/constants';\nimport type { GeneralOptions, NameValueOption } from '@/types';\n\n/**\n * Represents the interface for font size options, extending GeneralOptions.\n */\nexport interface FontSizeOptions extends GeneralOptions<FontSizeOptions> {\n  types: string[]\n  /**\n   * List of available font size values\n   *\n   * @default DEFAULT_FONT_SIZE_LIST\n   */\n  fontSizes: (string | NameValueOption)[]\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    fontSize: {\n      /**\n       * Set the text font size. ex: \"12px\", \"2em\", or \"small\". Must be a valid\n       * CSS font-size\n       * (https://developer.mozilla.org/en-US/docs/Web/CSS/font-size).\n       */\n      setFontSize: (fontSize: string) => ReturnType\n      /**\n       * Unset the font size\n       */\n      unsetFontSize: () => ReturnType\n    }\n  }\n}\n\nexport const FontSize = Extension.create<FontSizeOptions>({\n  name: 'fontSize',\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      types: ['textStyle'],\n      fontSizes: [...DEFAULT_FONT_SIZE_LIST],\n      button({ editor, extension, t }) {\n        const fontSizes = ensureNameValueOptions(extension.options?.fontSizes || DEFAULT_FONT_SIZE_VALUE);\n        const defaultFontSize = ensureNameValueOptions([DEFAULT_FONT_SIZE_VALUE])[0];\n        const items = fontSizes.map(k => ({\n          title: k.value === defaultFontSize.value ? t('editor.fontSize.default.tooltip') : String(k.name),\n          isActive: () => {\n            const { fontSize } = editor.getAttributes('textStyle');\n            const isDefault = k.value === defaultFontSize.value;\n            const notFontSize = fontSize === undefined;\n            if (isDefault && notFontSize) {\n              return true;\n            }\n            return editor.isActive({ fontSize: String(k.value) }) || false;\n          },\n          action: () => {\n            if (k.value === defaultFontSize.value) {\n              editor.commands.unsetFontSize();\n              return;\n            }\n            editor.commands.setFontSize(String(k.value));\n          },\n          disabled: !editor.can().setFontSize(String(k.value)),\n          divider: k.value === defaultFontSize.value || false,\n          default: k.value === defaultFontSize.value || false,\n        }));\n        const disabled = items.filter(k => k.disabled).length === items.length;\n        return {\n          component: FontSizeMenuButton,\n          componentProps: {\n            editor,\n            tooltip: t('editor.fontSize.tooltip'),\n            disabled,\n            items,\n            maxHeight: 280,\n          },\n        };\n      },\n    };\n  },\n  addGlobalAttributes() {\n    return [\n      {\n        types: this.options.types,\n        attributes: {\n          fontSize: {\n            default: null,\n            parseHTML: element => element.style.fontSize.replaceAll(/[\"']+/g, ''),\n            renderHTML: (attributes) => {\n              if (!attributes.fontSize) {\n                return {};\n              }\n              return {\n                style: `font-size: ${attributes.fontSize}`,\n              };\n            },\n          },\n        },\n      },\n    ];\n  },\n  addCommands() {\n    return {\n      setFontSize:\n        fontSize =>\n          ({ chain }) => {\n            return chain().setMark('textStyle', { fontSize }).run();\n          },\n      unsetFontSize:\n        () =>\n          ({ chain }) => {\n            return chain().setMark('textStyle', { fontSize: null }).removeEmptyTextStyle().run();\n          },\n    };\n  },\n});\n","import { useCallback, useState } from 'react';\n\nimport type { Editor } from '@tiptap/react';\nimport { debounce } from 'lodash-es';\n\nimport { ActionButton, Button, ColorPicker } from '@/components';\nimport { IconComponent } from '@/components/icons';\nimport type { ButtonViewReturnComponentProps } from '@/types';\n\ninterface ColorActionButtonProps {\n  editor: Editor\n  colors?: string[]\n  defaultColor?: string\n  icon?: React.ReactNode\n  tooltip?: string\n  disabled?: boolean\n  action?: ButtonViewReturnComponentProps['action']\n  isActive?: ButtonViewReturnComponentProps['isActive']\n}\n\ninterface IconCProps {\n  fill?: string\n}\n\nfunction IconC({ fill }: IconCProps) {\n  return (\n    <svg\n      width=\"18px\"\n      height=\"18px\"\n      viewBox=\"0 0 240 240\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g stroke=\"none\" strokeWidth={1} fill=\"none\" fillRule=\"evenodd\">\n        <g transform=\"translate(0.000000, 0.500000)\">\n          <g transform=\"translate(39.000000, 17.353553)\">\n            <path\n              d=\"M11,201.146447 L167,201.146447 C173.075132,201.146447 178,206.071314 178,212.146447 C178,218.221579 173.075132,223.146447 167,223.146447 L11,223.146447 C4.92486775,223.146447 7.43989126e-16,218.221579 0,212.146447 C-7.43989126e-16,206.071314 4.92486775,201.146447 11,201.146447 Z\"\n              id=\"矩形\"\n              fill={fill || '#DF2A3F'}\n              fillRule=\"evenodd\"\n            />\n            <path\n              d=\"M72.3425855,16.8295583 C75.799482,7.50883712 86.1577877,2.75526801 95.4785089,6.21216449 C100.284516,7.99463061 104.096358,11.7387855 105.968745,16.4968188 L106.112518,16.8745422 L159.385152,161.694068 C161.291848,166.877345 158.635655,172.624903 153.452378,174.531599 C148.358469,176.405421 142.719567,173.872338 140.716873,168.864661 L140.614848,168.598825 L89.211,28.86 L37.3759214,168.623816 C35.4885354,173.712715 29.8981043,176.351047 24.7909589,174.617647 L24.5226307,174.522368 C19.4337312,172.634982 16.7953993,167.044551 18.5287999,161.937406 L18.6240786,161.669077 L72.3425855,16.8295583 Z\"\n              id=\"路径-21\"\n              fill=\"currentColor\"\n              fillRule=\"nonzero\"\n            />\n            <path\n              d=\"M121,103.146447 C126.522847,103.146447 131,107.623599 131,113.146447 C131,118.575687 126.673329,122.994378 121.279905,123.142605 L121,123.146447 L55,123.146447 C49.4771525,123.146447 45,118.669294 45,113.146447 C45,107.717207 49.3266708,103.298515 54.7200952,103.150288 L55,103.146447 L121,103.146447 Z\"\n              id=\"路径-22\"\n              fill=\"currentColor\"\n              fillRule=\"nonzero\"\n            />\n          </g>\n        </g>\n      </g>\n    </svg>\n  );\n}\n\nfunction ColorActionButton(props: ColorActionButtonProps) {\n  const [selectedColor, setSelectedColor] = useState<string | undefined>(undefined);\n\n  function onChange(color: string | undefined) {\n    props.action?.(color);\n  }\n\n  function toggleColor() {\n    props.action?.(selectedColor);\n  }\n\n  const setSelectedColorDebounce = useCallback(\n    debounce((color: string | undefined) => {\n      setSelectedColor(color);\n    }, 350),\n    [],\n  );\n\n  return (\n    <div className=\"richtext-flex richtext-items-center richtext-h-[32px]\">\n      <ActionButton tooltip={props?.tooltip} disabled={props?.disabled} action={toggleColor}>\n        <span className=\"richtext-flex richtext-items-center richtext-justify-center richtext-text-sm\">\n          <IconC fill={selectedColor} />\n        </span>\n      </ActionButton>\n\n      <ColorPicker\n        selectedColor={selectedColor}\n        setSelectedColor={setSelectedColorDebounce}\n        onChange={onChange}\n        disabled={props?.disabled}\n        colors={props?.colors}\n        defaultColor={props?.defaultColor}\n      >\n        <Button variant=\"ghost\" size=\"icon\" className=\"r!ichtext-h-[32px] !richtext-w-3\" disabled={props?.disabled}>\n          <IconComponent className=\"!richtext-w-3 !richtext-h-3 richtext-text-zinc-500\" name=\"MenuDown\" />\n        </Button>\n      </ColorPicker>\n    </div>\n  );\n}\n\nexport default ColorActionButton;\n","import TiptapColor from '@tiptap/extension-color';\nimport type { ColorOptions as TiptapColorOptions } from '@tiptap/extension-color';\n\nimport ColorActionButton from '@/extensions/Color/components/ColorActionButton';\nimport type { GeneralOptions } from '@/types';\n\nexport interface ColorOptions extends TiptapColorOptions, GeneralOptions<ColorOptions> {\n  /**\n   * An array of color options to display in the color picker\n   */\n  colors?: string[]\n\n  /**\n   * The default color to use when no color is selected\n   */\n  defaultColor?: string\n}\n\nexport const Color = TiptapColor.extend<ColorOptions>({\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      button({ editor, t, extension }) {\n        return {\n          component: ColorActionButton,\n          componentProps: {\n            colors: extension.options.colors,\n            defaultColor: extension.options.defaultColor,\n            action: (color?: unknown) => {\n              if (color === undefined) {\n                editor.chain().focus().unsetColor().run();\n              }\n              if (typeof color === 'string') {\n                editor.chain().focus().setColor(color).run();\n              }\n            },\n            isActive: () => {\n              const { color } = editor.getAttributes('textStyle');\n              if (!color) {\n                return false;\n              }\n              return editor.isActive({ color }) || false;\n            },\n            editor,\n            disabled: !editor.can().setColor(''),\n            tooltip: t('editor.color.tooltip'),\n          },\n        };\n      },\n    };\n  },\n});\n","import type { HighlightOptions as TiptapHighlightOptions } from '@tiptap/extension-highlight';\nimport { Highlight as TiptapHighlight } from '@tiptap/extension-highlight';\n\nimport HighlightActionButton from './components/HighlightActionButton';\nimport type { GeneralOptions } from '@/types';\n\nexport interface HighlightOptions\n  extends TiptapHighlightOptions,\n  GeneralOptions<HighlightOptions> {}\n\nexport const Highlight = TiptapHighlight.extend<HighlightOptions>({\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      multicolor: true,\n      button: ({ editor, t }) => ({\n        component: HighlightActionButton,\n        componentProps: {\n          action: (color?: unknown) => {\n            if (typeof color === 'string') {\n              editor.chain().focus().setHighlight({ color }).run();\n            }\n            if (color === undefined) {\n              editor.chain().focus().unsetHighlight().run();\n            }\n          },\n          editor,\n          isActive: () => editor.isActive('highlight') || false,\n          disabled: !editor.can().setHighlight(),\n          shortcutKeys: ['⇧', 'mod', 'H'],\n          tooltip: t('editor.highlight.tooltip'),\n        },\n      }),\n    };\n  },\n});\n","import type { BulletListOptions as TiptapBulletListOptions } from '@tiptap/extension-bullet-list';\nimport { BulletList as TiptapBulletList } from '@tiptap/extension-bullet-list';\n\nimport { ActionButton } from '@/components';\nimport type { GeneralOptions } from '@/types';\n\nexport interface BulletListOptions\n  extends TiptapBulletListOptions,\n  GeneralOptions<BulletListOptions> {}\n\nexport const BulletList = TiptapBulletList.extend<BulletListOptions>({\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      button: ({ editor, t }) => ({\n        component: ActionButton,\n        componentProps: {\n          action: () => editor.commands.toggleBulletList(),\n          isActive: () => editor.isActive('bulletList') || false,\n          disabled: false,\n          shortcutKeys: ['shift', 'mod', '8'],\n          icon: 'List',\n          tooltip: t('editor.bulletlist.tooltip'),\n        },\n      }),\n    };\n  },\n});\n","import { Node } from '@tiptap/core';\n\nimport { ActionButton } from '@/components';\nimport type { GeneralOptions } from '@/types';\n\nexport interface ClearOptions extends GeneralOptions<ClearOptions> {}\n\nexport const Clear = Node.create<ClearOptions>({\n  name: 'clear',\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      button: ({ editor, t }) => ({\n        component: ActionButton,\n        componentProps: {\n          action: () => editor.chain().focus().clearNodes().unsetAllMarks().run(),\n          disabled: !editor.can().chain().focus().clearNodes().unsetAllMarks().run(),\n          icon: 'Eraser',\n          tooltip: t('editor.clear.tooltip'),\n        },\n      }),\n    };\n  },\n});\n","import type { OrderedListOptions as TiptapOrderedListOptions } from '@tiptap/extension-ordered-list';\nimport { OrderedList as TiptapOrderedList } from '@tiptap/extension-ordered-list';\n\nimport { ActionButton } from '@/components';\nimport type { GeneralOptions } from '@/types';\n\nexport interface OrderedListOptions\n  extends TiptapOrderedListOptions,\n  GeneralOptions<OrderedListOptions> {}\n\nexport const OrderedList = TiptapOrderedList.extend<OrderedListOptions>({\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      button: ({ editor, t }) => ({\n        component: ActionButton,\n        componentProps: {\n          action: () => editor.commands.toggleOrderedList(),\n          isActive: () => editor.isActive('orderedList') || false,\n          disabled: false,\n          icon: 'ListOrdered',\n          shortcutKeys: ['mod', 'shift', '7'],\n          tooltip: t('editor.orderedlist.tooltip'),\n        },\n      }),\n    };\n  },\n});\n","import type { TaskItemOptions } from '@tiptap/extension-task-item';\nimport { TaskItem } from '@tiptap/extension-task-item';\nimport type { TaskListOptions as TiptapTaskListOptions } from '@tiptap/extension-task-list';\nimport { TaskList as TiptapTaskList } from '@tiptap/extension-task-list';\n\nimport { ActionButton } from '@/components';\nimport type { GeneralOptions } from '@/types';\n\n/**\n * Represents the interface for task list options, extending TiptapTaskListOptions and GeneralOptions.\n */\nexport interface TaskListOptions extends TiptapTaskListOptions, GeneralOptions<TaskListOptions> {\n  /** options for task items */\n  taskItem: Partial<TaskItemOptions>\n}\n\nexport const TaskList = TiptapTaskList.extend<TaskListOptions>({\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      HTMLAttributes: {\n        class: 'task-list',\n      },\n      taskItem: {\n        HTMLAttributes: {\n          class: 'task-list-item',\n        },\n      },\n      button: ({ editor, t }) => ({\n        component: ActionButton,\n        componentProps: {\n          action: () => editor.commands.toggleTaskList(),\n          isActive: () => editor.isActive('taskList') || false,\n          disabled: false,\n          icon: 'ListTodo',\n          shortcutKeys: ['shift', 'mod', '9'],\n          tooltip: t('editor.tasklist.tooltip'),\n        },\n      }),\n    };\n  },\n\n  addExtensions() {\n    return [TaskItem.configure(this.options.taskItem)];\n  },\n});\n","import type { BlockquoteOptions as TiptapBlockquoteOptions } from '@tiptap/extension-blockquote';\nimport { Blockquote as TiptapBlockquote } from '@tiptap/extension-blockquote';\n\nimport { ActionButton } from '@/components';\nimport type { GeneralOptions } from '@/types';\n\nexport interface BlockquoteOptions\n  extends TiptapBlockquoteOptions,\n  GeneralOptions<BlockquoteOptions> {}\n\nexport const Blockquote = TiptapBlockquote.extend<BlockquoteOptions>({\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      HTMLAttributes: {\n        class: 'blockquote',\n      },\n      button: ({ editor, t }: any) => ({\n        component: ActionButton,\n        componentProps: {\n          action: () => editor.commands.toggleBlockquote(),\n          isActive: () => editor.isActive('blockquote') || false,\n          disabled: !editor.can().toggleBlockquote(),\n          icon: 'TextQuote',\n          shortcutKeys: ['shift', 'mod', 'B'],\n          tooltip: t('editor.blockquote.tooltip'),\n        },\n      }),\n    };\n  },\n});\n","import { useState } from 'react';\n\nimport { ActionButton, IconComponent, Popover, PopoverContent, PopoverTrigger } from '@/components';\nimport LinkEditBlock from '@/extensions/Link/components/LinkEditBlock';\nimport type { ButtonViewReturnComponentProps } from '@/types';\n\ninterface IPropsLinkEditPopover {\n  editor: any\n  icon?: any\n  title?: string\n  tooltip?: string\n  disabled?: boolean\n  shortcutKeys?: string[]\n  isActive?: ButtonViewReturnComponentProps['isActive']\n  action?: ButtonViewReturnComponentProps['action']\n}\n\nfunction LinkEditPopover(props: IPropsLinkEditPopover) {\n  const [open, setOpen] = useState(false);\n\n  function onSetLink(link: string, text?: string, openInNewTab?: boolean) {\n    if (props.action) {\n      props.action({ link, text, openInNewTab });\n      setOpen(false);\n    }\n  }\n\n  return (\n    <Popover modal open={open} onOpenChange={setOpen}>\n      <PopoverTrigger disabled={props?.disabled} asChild>\n        <ActionButton\n          tooltip={props?.tooltip}\n          isActive={props?.isActive}\n          disabled={props?.disabled}\n        >\n          <IconComponent name={props?.icon} />\n        </ActionButton>\n      </PopoverTrigger>\n      <PopoverContent hideWhenDetached className=\"richtext-w-full\" align=\"start\" side=\"bottom\">\n        <LinkEditBlock editor={props.editor} onSetLink={onSetLink} />\n      </PopoverContent>\n    </Popover>\n  );\n}\n\nexport default LinkEditPopover;\n","import { getMarkRange, mergeAttributes } from '@tiptap/core';\nimport type { LinkOptions as TiptapLinkOptions } from '@tiptap/extension-link';\nimport { Link as TiptapLink } from '@tiptap/extension-link';\nimport { Plugin, TextSelection } from '@tiptap/pm/state';\nimport type { EditorView } from '@tiptap/pm/view';\n\nimport LinkEditPopover from '@/extensions/Link/components/LinkEditPopover';\nimport type { GeneralOptions } from '@/types';\n\nexport interface LinkOptions extends TiptapLinkOptions, GeneralOptions<LinkOptions> {}\n\nexport const Link = TiptapLink.extend<LinkOptions>({\n  inclusive: false,\n  parseHTML() {\n    return [\n      {\n        tag: 'a[href]:not([data-type=\"button\"]):not([href *= \"javascript:\" i])',\n      },\n    ];\n  },\n  renderHTML({ HTMLAttributes }) {\n    return [\n      'a',\n      mergeAttributes(this.options.HTMLAttributes, HTMLAttributes, {\n        class: 'link',\n      }),\n      0,\n    ];\n  },\n\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      openOnClick: true,\n      button: ({ editor, t }) => {\n        return {\n          component: LinkEditPopover,\n          componentProps: {\n            editor,\n            action: (value) => {\n              const { link, text, openInNewTab } = value as any;\n              editor\n                .chain()\n                .extendMarkRange('link')\n                .insertContent({\n                  type: 'text',\n                  text,\n                  marks: [\n                    {\n                      type: 'link',\n                      attrs: {\n                        href: link,\n                        target: openInNewTab ? '_blank' : '',\n                      },\n                    },\n                  ],\n                })\n                .setLink({ href: link })\n                .focus()\n                .run();\n            },\n            id: 'linkk',\n            isActive: () => editor.isActive('link') || false,\n            disabled: !editor.can().setLink({ href: '' }),\n            icon: 'Link',\n            tooltip: t('editor.link.tooltip'),\n          },\n        };\n      },\n    };\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      new Plugin({\n        props: {\n          handleClick: (view: EditorView, pos: number) => {\n            const { schema, doc, tr } = view.state;\n            const range = getMarkRange(doc.resolve(pos), schema.marks.link);\n            if (!range) {\n              return false;\n            }\n            const $start = doc.resolve(range.from);\n            const $end = doc.resolve(range.to);\n            const transaction = tr.setSelection(new TextSelection($start, $end));\n            view.dispatch(transaction);\n          },\n        },\n      }),\n    ];\n  },\n});\n","import { mergeAttributes } from '@tiptap/core';\nimport type { HorizontalRuleOptions as TiptapHorizontalRuleOptions } from '@tiptap/extension-horizontal-rule';\nimport { HorizontalRule as TiptapHorizontalRule } from '@tiptap/extension-horizontal-rule';\n\nimport { ActionButton } from '@/components';\nimport type { GeneralOptions } from '@/types';\n\nexport interface HorizontalRuleOptions\n  extends TiptapHorizontalRuleOptions,\n  GeneralOptions<HorizontalRuleOptions> {}\n\nexport const HorizontalRule = TiptapHorizontalRule.extend<HorizontalRuleOptions>({\n  renderHTML() {\n    return [\n      'div',\n      mergeAttributes(this.options.HTMLAttributes, {\n        'data-type': this.name,\n      }),\n      ['hr'],\n    ];\n  },\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      button: ({ editor, t }) => ({\n        component: ActionButton,\n        componentProps: {\n          action: () => editor.commands.setHorizontalRule(),\n          disabled: !editor.can().setHorizontalRule(),\n          icon: 'Minus',\n          shortcutKeys: ['mod', 'alt', 'S'],\n          tooltip: t('editor.horizontalrule.tooltip'),\n        },\n      }),\n    };\n  },\n  addKeyboardShortcuts() {\n    return {\n      'Mod-Alt-s': () => this.editor.commands.setHorizontalRule(),\n    };\n  },\n});\n","import React from 'react';\n\nimport type { TooltipContentProps } from '@radix-ui/react-tooltip';\n\nimport { Toggle, Tooltip, TooltipContent, TooltipTrigger, icons } from '@/components';\nimport type { ButtonViewReturnComponentProps } from '@/types';\nimport { getShortcutKeys } from '@/utils/plateform';\n\ninterface IPropsHistoryActionButton {\n  icon?: string\n  title?: string\n  tooltip?: string\n  disabled?: boolean\n  shortcutKeys?: string[]\n  customClass?: string\n  loading?: boolean\n  tooltipOptions?: TooltipContentProps\n  color?: string\n  action?: ButtonViewReturnComponentProps['action']\n  isActive?: ButtonViewReturnComponentProps['isActive']\n  children?: React.ReactNode\n}\n\nfunction HistoryActionButton(props?: Partial<IPropsHistoryActionButton>) {\n  const {\n    icon = undefined,\n    // title = undefined,\n    tooltip = undefined,\n    // disabled = false,\n    customClass = '',\n    // color = undefined,\n    // loading = false,\n    // shortcutKeys = undefined,\n    tooltipOptions = {},\n    action = undefined,\n    isActive = undefined,\n    children,\n  } = props as any;\n\n  const Icon = icons[icon as string];\n\n  return (\n    <Tooltip>\n      <TooltipTrigger asChild>\n        <Toggle\n          size=\"sm\"\n          className={`richtext-w-[32px] richtext-h-[32px] ${customClass}`}\n          disabled={isActive?.()}\n          onClick={action}\n          // data-state={isActive?.() ? 'on' : 'off'}\n        >\n          {Icon && <Icon className=\"richtext-w-4 richtext-h-4\" />}\n          {children && <>\n            {children}\n          </>}\n        </Toggle>\n      </TooltipTrigger>\n      {tooltip && (\n        <TooltipContent {...tooltipOptions}>\n          <div className=\"richtext-flex richtext-flex-col richtext-items-center richtext-text-center richtext-max-w-24\">\n            <div>\n              {tooltip}\n            </div>\n            {!!props?.shortcutKeys?.length && <span>\n              {getShortcutKeys(props?.shortcutKeys)}\n            </span>}\n          </div>\n        </TooltipContent>\n      )}\n    </Tooltip>\n  );\n}\n\nexport default HistoryActionButton;\n","import type { HistoryOptions as TiptapHistoryOptions } from '@tiptap/extension-history';\nimport { History as TiptapHistory } from '@tiptap/extension-history';\n\nimport HistoryActionButton from '@/extensions/History/components/HistoryActionButton';\nimport type { GeneralOptions } from '@/types';\n\nexport interface HistoryOptions extends TiptapHistoryOptions, GeneralOptions<HistoryOptions> {}\n\nconst historys: ['undo', 'redo'] = ['undo', 'redo'];\n\nexport const History = TiptapHistory.extend<HistoryOptions>({\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      depth: 100,\n      newGroupDelay: 500,\n      button: ({ editor, t }: any) => {\n        return historys.map(item => ({\n          component: HistoryActionButton,\n          componentProps: {\n            action: () => {\n              if (item === 'undo') {\n                editor.chain().focus().undo().run();\n              }\n              if (item === 'redo') {\n                editor.chain().focus().redo().run();\n              }\n            },\n            shortcutKeys: item === 'undo' ? ['mod', 'Z'] : ['shift', 'mod', 'Z'],\n            disabled: item === 'undo' ? !editor.can().undo() : !editor.can().redo(),\n            isActive: () => (item === 'undo' ? !editor.can().undo() : !editor.can().redo()),\n            icon: item === 'undo' ? 'Undo2' : 'Redo2',\n            tooltip: t(`editor.${item}.tooltip`),\n          },\n        }));\n      },\n    };\n  },\n});\n","import { Document as TiptapDocument } from '@tiptap/extension-document';\n\nexport const Document = TiptapDocument.extend({\n  content: '(block|columns)+',\n  // echo editor is a block editor\n});\n\nexport default Document;\n","import { Extension } from '@tiptap/core';\n\nimport { ActionButton } from '@/components';\n\nexport const ColumnActionButton = Extension.create<any>({\n  name: 'columnActionButton',\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      button: ({ editor, t }: any) => ({\n        component: ActionButton,\n        componentProps: {\n          action: () => {\n            editor.chain().focus().insertColumns({ cols: 2 }).run();\n          },\n          icon: 'Columns',\n          tooltip: t('editor.columns.tooltip'),\n        },\n      }),\n    };\n  },\n});\n","import { Extension } from '@tiptap/core';\nimport { Plugin, PluginKey } from '@tiptap/pm/state';\nimport { Decoration, DecorationSet } from '@tiptap/pm/view';\n\nexport const Selection = Extension.create({\n  name: 'selection',\n  addProseMirrorPlugins() {\n    const { editor } = this;\n    return [\n      new Plugin({\n        key: new PluginKey('selection'),\n        props: {\n          decorations(state) {\n            if (state.selection.empty) {\n              return null;\n            }\n            if (editor.isFocused === true) {\n              return null;\n            }\n            return DecorationSet.create(state.doc, [\n              Decoration.inline(state.selection.from, state.selection.to, {\n                class: 'selection',\n              }),\n            ]);\n          },\n        },\n      }),\n    ];\n  },\n});\n\nexport default Selection;\n","import React, { useMemo } from 'react';\n\nimport { ChevronDown } from 'lucide-react';\n\nimport { Button, DropdownMenu, DropdownMenuCheckboxItem, DropdownMenuContent, DropdownMenuTrigger, icons } from '@/components';\nimport { useLocale } from '@/locales';\n\ninterface IPropsTextDropdown {\n  editor: any\n  disabled?: boolean\n  color?: string\n  maxHeight?: string | number\n  icon?: any\n  tooltip?: string\n}\n\nfunction TextDropdown(props: IPropsTextDropdown) {\n  const { t } = useLocale();\n\n  const menus = useMemo(() => {\n    return [\n      {\n        name: 'paragraph',\n        label: t('editor.paragraph.tooltip'),\n        iconName: 'Heading1',\n        isActive: () =>\n          props.editor.isActive('paragraph')\n          && !props.editor.isActive('orderedList')\n          && !props.editor.isActive('bulletList')\n          && !props.editor.isActive('taskList'),\n        action: () => props.editor.chain().focus().clearNodes().run(),\n      },\n      {\n        name: 'heading1',\n        label: t('editor.heading.h1.tooltip'),\n        isActive: () => props.editor.isActive('heading', { level: 1 }),\n        iconName: 'Heading1',\n        action: () => props.editor.chain().focus().clearNodes().toggleHeading({ level: 1 }).run(),\n      },\n      {\n        name: 'heading2',\n        label: t('editor.heading.h2.tooltip'),\n        isActive: () => props.editor.isActive('heading', { level: 2 }),\n        iconName: 'Heading2',\n        action: () => props.editor.chain().focus().clearNodes().toggleHeading({ level: 2 }).run(),\n      },\n      {\n        name: 'heading3',\n        label: t('editor.heading.h3.tooltip'),\n        isActive: () => props.editor.isActive('heading', { level: 3 }),\n        iconName: 'Heading3',\n        action: () => props.editor.chain().focus().clearNodes().toggleHeading({ level: 3 }).run(),\n      },\n      {\n        name: 'bulletList',\n        label: t('editor.bulletlist.tooltip'),\n        isActive: () => props.editor.isActive('bulletList'),\n        iconName: 'List',\n        action: () => props.editor.chain().focus().clearNodes().toggleBulletList().run(),\n      },\n      {\n        name: 'numberedList',\n        label: t('editor.orderedlist.tooltip'),\n        isActive: () => props.editor.isActive('orderedList'),\n        iconName: 'ListOrdered',\n        action: () => props.editor.chain().focus().clearNodes().toggleOrderedList().run(),\n      },\n      {\n        name: 'taskList',\n        label: t('editor.tasklist.tooltip'),\n        isActive: () => props.editor.isActive('taskList'),\n        iconName: 'ListTodo',\n        action: () => props.editor.chain().focus().clearNodes().toggleTaskList().run(),\n      },\n      {\n        name: 'blockquote',\n        label: t('editor.blockquote.tooltip'),\n        isActive: () => props.editor.isActive('blockquote'),\n        iconName: 'TextQuote',\n        action: () => props.editor.chain().focus().clearNodes().toggleBlockquote().run(),\n      },\n      {\n        name: 'codeBlock',\n        label: t('editor.codeblock.tooltip'),\n        isActive: () => props.editor.isActive('codeBlock'),\n        iconName: 'Code2',\n        action: () => props.editor.chain().focus().clearNodes().toggleCodeBlock().run(),\n      },\n    ];\n  }, [props.editor, t]);\n\n  const activeItem = useMemo(() => {\n    return (\n      menus.findLast(item => item.isActive()) ?? {\n        label: 'Empty',\n      }\n    );\n  }, [menus]);\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button className=\"richtext-flex richtext-h-[32px] richtext-gap-1 richtext-px-1.5\"\n          variant=\"ghost\"\n        >\n          <span className=\"richtext-whitespace-nowrap richtext-text-sm richtext-font-normal\">\n            {' '}\n            {activeItem?.label}\n          </span>\n\n          <ChevronDown className=\"richtext-size-4\" />\n        </Button>\n      </DropdownMenuTrigger>\n\n      <DropdownMenuContent align=\"start\"\n        className=\"richtext-w-full richtext-p-1\"\n        hideWhenDetached\n        sideOffset={5}\n      >\n        {menus.map((item, index) => {\n          const Icon = icons[item.iconName as any];\n\n          return (\n            <DropdownMenuCheckboxItem\n              checked={item.isActive?.() || false}\n              className=\"richtext-cursor-pointer\"\n              key={`text-bubble-${index}`}\n              onClick={() => item.action()}\n            >\n              <div className=\"richtext-flex richtext-items-center richtext-gap-2 richtext-px-2\">\n                <Icon className=\"richtext-h3 richtext-w-3\" />\n\n                <span>\n                  {' '}\n                  {item.label}\n                </span>\n              </div>\n            </DropdownMenuCheckboxItem>\n          );\n        })}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n\nexport default TextDropdown;\n","import { Extension } from '@tiptap/core';\n\nimport TextDropdown from './components/TextDropdown';\nimport type { GeneralOptions } from '@/types';\n\nexport interface TextBubbleOptions extends GeneralOptions<TextBubbleOptions> {}\n\nexport const TextBubble = Extension.create<TextBubbleOptions>({\n  name: 'text-bubble',\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      toolbar: false,\n      button: () => ({\n        component: TextDropdown,\n        componentProps: {},\n      }),\n    };\n  },\n});\n\nexport default TextBubble;\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport { Extension } from '@tiptap/core';\nimport { Plugin, PluginKey } from '@tiptap/pm/state';\n\n// @ts-ignore\nfunction nodeEqualsType({ types, node }) {\n  return (Array.isArray(types) && types.includes(node.type)) || node.type === types;\n}\n\n/**\n * Extension based on:\n * - https://github.com/ueberdosis/tiptap/blob/v1/packages/tiptap-extensions/src/extensions/TrailingNode.js\n * - https://github.com/remirror/remirror/blob/e0f1bec4a1e8073ce8f5500d62193e52321155b9/packages/prosemirror-trailing-node/src/trailing-node-plugin.ts\n */\n\nexport interface TrailingNodeOptions {\n  node: string\n  notAfter: string[]\n}\n\nexport const TrailingNode = Extension.create<TrailingNodeOptions>({\n  name: 'trailingNode',\n\n  addOptions() {\n    return {\n      node: 'paragraph',\n      notAfter: ['paragraph'],\n    };\n  },\n\n  addProseMirrorPlugins() {\n    const plugin = new PluginKey(this.name);\n    const disabledNodes = Object.entries(this.editor.schema.nodes)\n      .map(([, value]) => value)\n      .filter(node => this.options.notAfter.includes(node.name));\n\n    return [\n      new Plugin({\n        key: plugin,\n        appendTransaction: (_, __, state) => {\n          const { doc, tr, schema } = state;\n          const shouldInsertNodeAtEnd = plugin.getState(state);\n          const endPosition = doc.content.size;\n          const type = schema.nodes[this.options.node];\n\n          if (!shouldInsertNodeAtEnd) {\n            return;\n          }\n\n          return tr.insert(endPosition, type.create());\n        },\n        state: {\n          init: (_, state) => {\n            const lastNode = state.tr.doc.lastChild;\n\n            return !nodeEqualsType({ node: lastNode, types: disabledNodes });\n          },\n          apply: (tr, value) => {\n            if (!tr.docChanged) {\n              return value;\n            }\n\n            const lastNode = tr.doc.lastChild;\n\n            return !nodeEqualsType({ node: lastNode, types: disabledNodes });\n          },\n        },\n      }),\n    ];\n  },\n});\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport type { AnyExtension } from '@tiptap/core';\nimport { Extension } from '@tiptap/core';\nimport type { CharacterCountOptions } from '@tiptap/extension-character-count';\nimport CharacterCount from '@tiptap/extension-character-count';\nimport type { DropcursorOptions } from '@tiptap/extension-dropcursor';\nimport { Dropcursor } from '@tiptap/extension-dropcursor';\nimport type { FocusOptions } from '@tiptap/extension-focus';\nimport Focus from '@tiptap/extension-focus';\nimport { Gapcursor } from '@tiptap/extension-gapcursor';\nimport type { HardBreakOptions } from '@tiptap/extension-hard-break';\nimport { HardBreak } from '@tiptap/extension-hard-break';\nimport type { ListItemOptions } from '@tiptap/extension-list-item';\nimport { ListItem } from '@tiptap/extension-list-item';\nimport type { ParagraphOptions } from '@tiptap/extension-paragraph';\nimport { Paragraph } from '@tiptap/extension-paragraph';\nimport type { PlaceholderOptions } from '@tiptap/extension-placeholder';\nimport { Placeholder } from '@tiptap/extension-placeholder';\nimport { Text } from '@tiptap/extension-text';\nimport type { TextStyleOptions } from '@tiptap/extension-text-style';\nimport { TextStyle } from '@tiptap/extension-text-style';\n\nimport { Document } from '@/extensions/Document';\nimport { Column, MultiColumn } from '@/extensions/MultiColumn';\nimport { Selection } from '@/extensions/Selection';\nimport type { TextBubbleOptions } from '@/extensions/TextBubble';\nimport { TextBubble } from '@/extensions/TextBubble';\nimport type { TrailingNodeOptions } from '@/extensions/TrailingNode';\nimport { TrailingNode } from '@/extensions/TrailingNode';\nimport { localeActions } from '@/locales';\n\n/**\n * Represents the interface for options in the base toolkit.\n */\nexport interface BaseKitOptions {\n  /**\n   * Whether to enable the document option\n   *\n   * @default true\n   */\n  document: false\n  /**\n   * Whether to enable the document option\n   *\n   * @default false\n   */\n  multiColumn?: boolean\n  /**\n   * Whether to enable the text option\n   *\n   * @default true\n   */\n  text: false\n\n  /**\n   * Whether to enable the Gapcursor\n   *\n   * @default true\n   */\n  gapcursor: false\n\n  /**\n   * Dropcursor options or false, indicating whether to enable the drop cursor\n   *\n   * @default true\n   */\n  dropcursor: Partial<DropcursorOptions> | false\n\n  /**\n   * character count options or false, indicating whether to enable character count\n   *\n   * @default true\n   */\n  characterCount: Partial<CharacterCountOptions> | false\n\n  /**\n   * HardBreak options or false, indicating whether to enable hard breaks\n   *\n   * @default true\n   */\n  hardBreak: Partial<HardBreakOptions> | false\n\n  /**\n   * Placeholder options or false, indicating whether to enable placeholders\n   *\n   * @default true\n   */\n  placeholder: Partial<PlaceholderOptions> | false\n\n  /**\n   * Paragraph options or false, indicating whether to enable paragraph functionality\n   *\n   * @default true\n   */\n  paragraph: Partial<ParagraphOptions> | false\n\n  /**\n   * Focus options or false, indicating whether to enable focus functionality\n   *\n   * @default true\n   */\n  focus: Partial<FocusOptions> | false\n\n  /**\n   * ListItem options or false, indicating whether to enable list item functionality\n   *\n   * @default true\n   */\n  listItem: Partial<ListItemOptions> | false\n\n  /**\n   * Text Style options or false, indicating whether to enable text style functionality\n   *\n   * @default true\n   */\n  textStyle: Partial<TextStyleOptions> | false\n\n  /**\n   * Bubble options, taking `BubbleOptions<BaseKitOptions>` as parameters, indicating whether to enable the bubble functionality\n   */\n  // bubble: Partial<BubbleOptions<BaseKitOptions>>;\n  bubble: any\n\n  /**\n   * Iframe options or false, indicating whether to enable the iframe\n   *\n   * @default true\n   */\n  // iframe: Partial<IframeOptions> | false;\n\n  /**\n   * Trailing node options or false, indicating whether to enable the trailing node\n   *\n   * @default true\n   */\n  trailingNode: Partial<TrailingNodeOptions> | false\n  /**\n   * textBubble options or false, indicating whether to enable the textBubble\n   *\n   * @default true\n   */\n  textBubble: Partial<TextBubbleOptions> | false\n  /**\n   * selection options or false, indicating whether to enable the selection\n   *\n   * @default true\n   */\n  selection: any | false\n}\n\nexport const BaseKit = Extension.create<BaseKitOptions>({\n  name: 'base-kit',\n\n  addExtensions() {\n    const extensions: AnyExtension[] = [];\n\n    if (this.options.document !== false) {\n      extensions.push(Document.configure());\n    }\n\n    if (this.options.placeholder !== false) {\n      extensions.push(\n        Placeholder.configure({\n          placeholder: ({ node, pos, editor }) => {\n            if (node?.type?.name === 'columns' || node?.content?.size !== 0) {\n              return '';\n            }\n\n            if (node?.type?.name === 'heading') {\n              // @ts-expect-error\n              return `${localeActions.t(`editor.heading.h${node.attrs.level}.tooltip`)}`;\n            }\n            if (node?.type?.name === 'codeBlock' || node?.type?.name === 'table') {\n              return '';\n            }\n            if (editor.extensionManager.extensions.some(ext => ext.name === 'slashCommand')) {\n              return localeActions.t('editor.slash');\n            }\n            if (pos === 0) {\n              return localeActions.t('editor.content');\n            }\n            return localeActions.t('editor.content');\n          },\n          ...this.options.placeholder,\n        }),\n      );\n    }\n\n    if (this.options.focus !== false) {\n      extensions.push(\n        Focus.configure({\n          className: 'focus',\n          ...this.options.focus,\n        }),\n      );\n    }\n\n    if (this.options.text !== false) {\n      extensions.push(Text.configure());\n    }\n    if (this.options.textBubble !== false) {\n      extensions.push(TextBubble.configure());\n    }\n\n    if (this.options.gapcursor !== false) {\n      extensions.push(Gapcursor.configure());\n    }\n\n    if (this.options.dropcursor !== false) {\n      extensions.push(\n        Dropcursor.configure({\n          ...this.options.dropcursor,\n          width: 2,\n          class: 'ProseMirror-dropcursor border-black',\n        }),\n      );\n    }\n\n    if (this.options.characterCount !== false) {\n      extensions.push(CharacterCount.configure(this.options.characterCount));\n    }\n\n    if (this.options.paragraph !== false) {\n      extensions.push(Paragraph.configure(this.options.paragraph));\n    }\n\n    if (this.options.hardBreak !== false) {\n      extensions.push(HardBreak.configure(this.options.hardBreak));\n    }\n\n    if (this.options.listItem !== false) {\n      extensions.push(ListItem.configure(this.options.listItem));\n    }\n\n    if (this.options.textStyle !== false) {\n      extensions.push(TextStyle.configure(this.options.textStyle));\n    }\n\n    if (this.options.trailingNode !== false) {\n      extensions.push(TrailingNode.configure(this.options.trailingNode));\n    }\n\n    if (this.options.selection !== false) {\n      extensions.push(Selection);\n    }\n\n    if (this.options.multiColumn !== false) {\n      extensions.push(Column, MultiColumn);\n    }\n\n    return extensions;\n  },\n});\n","import type { Extensions } from '@tiptap/core';\nimport { Extension } from '@tiptap/core';\nimport type { SubscriptExtensionOptions as TiptapSubscriptOptions } from '@tiptap/extension-subscript';\nimport { Subscript as TiptapSubscript } from '@tiptap/extension-subscript';\nimport type { SuperscriptExtensionOptions as TiptapSuperscriptOptions } from '@tiptap/extension-superscript';\nimport { Superscript as TiptapSuperscript } from '@tiptap/extension-superscript';\n\nimport { ActionButton } from '@/components';\nimport type { ButtonViewReturn, GeneralOptions } from '@/types';\n\n/**\n * Represents the interface for subscript and superscript options, extending GeneralOptions.\n */\nexport interface SubAndSuperScriptOptions extends GeneralOptions<SubAndSuperScriptOptions> {\n  /**\n   * subscript options or false, indicating whether subscript is enabled\n   *\n   * @default true\n   */\n  subscript: Partial<TiptapSubscriptOptions> | false\n  /**\n   * superscript options or false, indicating whether superscript is enabled\n   *\n   * @default true\n   */\n  superscript: Partial<TiptapSuperscriptOptions> | false\n}\n\nexport const SubAndSuperScript = Extension.create<SubAndSuperScriptOptions>({\n  name: 'subAndSuperScript',\n\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      button: ({ editor, extension, t }) => {\n        const subscript = extension.options.subscript;\n        const superscript = extension.options.superscript;\n\n        const subBtn: ButtonViewReturn = {\n          component: ActionButton,\n          componentProps: {\n            action: () => editor.commands.toggleSubscript(),\n            isActive: () => editor.isActive('subscript') || false,\n            disabled: !editor.can().toggleSubscript(),\n            icon: 'Subscript',\n            tooltip: t('editor.subscript.tooltip'),\n          },\n        };\n\n        const superBtn: ButtonViewReturn = {\n          component: ActionButton,\n          componentProps: {\n            action: () => editor.commands.toggleSuperscript(),\n            isActive: () => editor.isActive('superscript') || false,\n            disabled: !editor.can().toggleSuperscript(),\n            icon: 'Superscript',\n            tooltip: t('editor.superscript.tooltip'),\n          },\n        };\n\n        const items: ButtonViewReturn[] = [];\n\n        if (subscript !== false) {\n          items.push(subBtn);\n        }\n        if (superscript !== false) {\n          items.push(superBtn);\n        }\n\n        return items;\n      },\n    };\n  },\n\n  addExtensions() {\n    const extensions: Extensions = [];\n\n    if (this.options.subscript !== false) {\n      extensions.push(TiptapSubscript.configure(this.options.subscript));\n    }\n\n    if (this.options.superscript !== false) {\n      extensions.push(TiptapSuperscript.configure(this.options.superscript));\n    }\n\n    return extensions;\n  },\n});\n","import React, { useMemo } from 'react';\n\nimport {\n  ActionButton,\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuTrigger,\n  IconComponent,\n  MenuDown,\n} from '@/components';\nimport type { ButtonViewReturnComponentProps } from '@/types';\nimport { getShortcutKeys } from '@/utils/plateform';\n\nexport interface Item {\n  title: string\n  icon?: any\n  isActive: NonNullable<ButtonViewReturnComponentProps['isActive']>\n  action?: ButtonViewReturnComponentProps['action']\n  style?: React.CSSProperties\n  shortcutKeys?: string[]\n  disabled?: boolean\n  divider?: boolean\n  default?: boolean\n}\ninterface IPropsActionMoreButton {\n  editor: any\n  disabled?: boolean\n  color?: string\n  maxHeight?: string | number\n  icon?: any\n  tooltip?: string\n  items?: Item[]\n}\n\nfunction ActionMoreButton(props: IPropsActionMoreButton) {\n  const active = useMemo(() => {\n    const find: any = props?.items?.find((k: any) => k.isActive());\n    if (find && !find.default) {\n      return {\n        ...find,\n        icon: find?.icon ? find?.icon : props?.icon,\n      };\n    }\n    const item: Item = {\n      title: props.tooltip as any,\n      icon: props.icon,\n      isActive: () => false,\n    };\n\n    return item;\n  }, [props]);\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild\n        disabled={props?.disabled}\n      >\n        <ActionButton\n          customClass=\"!richtext-w-12 richtext-h-12\"\n          disabled={props?.disabled}\n          icon={props?.icon}\n          tooltip={props?.tooltip}\n        >\n          <MenuDown className=\"richtext-size-3 richtext-text-gray-500\" />\n        </ActionButton>\n      </DropdownMenuTrigger>\n\n      <DropdownMenuContent className=\"w-full\">\n        {props?.items?.map((item: any, index) => {\n          return (\n            <DropdownMenuCheckboxItem\n              checked={active.title === item.title}\n              className=\"richtext-flex richtext-items-center richtext-gap-3\"\n              key={`more-mark-${index}`}\n              onClick={item.action}\n            >\n              <IconComponent name={item?.icon} />\n\n              <span className=\"richtext-ml-1\">\n                {item.title}\n              </span>\n\n              {!!item?.shortcutKeys && (\n                <span className=\"richtext-ml-auto richtext-text-xs richtext-tracking-widest richtext-opacity-60\">\n                  {getShortcutKeys(item.shortcutKeys)}\n                </span>\n              )}\n            </DropdownMenuCheckboxItem>\n          );\n        })}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n\nexport default ActionMoreButton;\n","import { Extension } from '@tiptap/core';\nimport type { Extensions } from '@tiptap/core';\nimport type { SubscriptExtensionOptions as TiptapSubscriptOptions } from '@tiptap/extension-subscript';\nimport { Subscript as TiptapSubscript } from '@tiptap/extension-subscript';\nimport type { SuperscriptExtensionOptions as TiptapSuperscriptOptions } from '@tiptap/extension-superscript';\nimport { Superscript as TiptapSuperscript } from '@tiptap/extension-superscript';\n\nimport type { Item } from '@/extensions/MoreMark/components/ActionMoreButton';\nimport ActionMoreButton from '@/extensions/MoreMark/components/ActionMoreButton';\nimport type { GeneralOptions } from '@/types';\n\nexport interface MoreMarkOptions extends GeneralOptions<MoreMarkOptions> {\n  /**\n   * // 下标\n   *\n   * @default true\n   */\n  subscript: Partial<TiptapSubscriptOptions> | false\n  /**\n   * // 上标\n   *\n   * @default true\n   */\n  superscript: Partial<TiptapSuperscriptOptions> | false\n}\n\nexport const MoreMark = Extension.create<MoreMarkOptions>({\n  name: 'moreMark',\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      button({ editor, extension, t }) {\n        const subscript = extension.options.subscript;\n        const superscript = extension.options.superscript;\n        const subBtn: Item = {\n          action: () => editor.commands.toggleSubscript(),\n          isActive: () => editor.isActive('subscript') || false,\n          disabled: !editor.can().toggleSubscript(),\n          icon: 'Subscript',\n          title: t('editor.subscript.tooltip'),\n          shortcutKeys: ['mod', '.'],\n        };\n\n        const superBtn: Item = {\n          action: () => editor.commands.toggleSuperscript(),\n          isActive: () => editor.isActive('superscript') || false,\n          disabled: !editor.can().toggleSuperscript(),\n          icon: 'Superscript',\n          title: t('editor.superscript.tooltip'),\n          shortcutKeys: ['mod', ','],\n        };\n        // const hasCode = hasExtension(editor, 'code');\n\n        const items: Item[] = [];\n\n        if (subscript !== false) {\n          items.push(subBtn);\n        }\n        if (superscript !== false) {\n          items.push(superBtn);\n        }\n        // if (hasCode) {\n        //   const codeBtn: Item = {\n        //     action: () => editor.commands.toggleCode(),\n        //     isActive: () => editor.isActive('code') || false,\n        //     disabled: !editor.can().toggleCode(),\n        //     icon: 'Code',\n        //     title: t('editor.code.tooltip'),\n        //     shortcutKeys: ['mod', 'E'],\n        //   };\n        //   if (hasCode) {\n        //     items.push(codeBtn);\n        //   }\n        // }\n\n        return {\n          component: ActionMoreButton,\n          componentProps: {\n            icon: 'Type',\n            tooltip: t('editor.moremark'),\n            disabled: !editor.isEditable,\n            items,\n          },\n        };\n      },\n    };\n  },\n\n  addExtensions() {\n    const extensions: Extensions = [];\n\n    if (this.options.subscript !== false) {\n      extensions.push(TiptapSubscript.configure(this.options.subscript));\n    }\n\n    if (this.options.superscript !== false) {\n      extensions.push(TiptapSuperscript.configure(this.options.superscript));\n    }\n\n    return extensions;\n  },\n});\n","import { Extension } from '@tiptap/core';\nimport type { Editor } from '@tiptap/core';\n\nimport { ActionButton } from '@/components';\nimport type { GeneralOptions } from '@/types';\nimport { IndentProps, createIndentCommand } from '@/utils/indent';\n\nexport interface IndentOptions extends GeneralOptions<IndentOptions> {\n  types: string[]\n  minIndent: number\n  maxIndent: number\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    indent: {\n      /**\n       * Set the indent attribute\n       */\n      indent: () => ReturnType\n      /**\n       * Set the outdent attribute\n       */\n      outdent: () => ReturnType\n    }\n  }\n}\n\nexport const Indent = Extension.create<IndentOptions>({\n  name: 'indent',\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      types: ['paragraph', 'heading', 'blockquote'],\n      minIndent: IndentProps.min,\n      maxIndent: IndentProps.max,\n      button({ editor, t }: { editor: Editor, t: (...args: any[]) => string }) {\n        return [\n          {\n            component: ActionButton,\n            componentProps: {\n              action: () => {\n                editor.commands.indent();\n              },\n              shortcutKeys: ['Tab'],\n              icon: 'IndentIncrease',\n              tooltip: t('editor.indent.tooltip'),\n            },\n          },\n          {\n            component: ActionButton,\n            componentProps: {\n              action: () => {\n                editor.commands.outdent();\n              },\n              shortcutKeys: ['Shift', 'Tab'],\n              icon: 'IndentDecrease',\n              tooltip: t('editor.outdent.tooltip'),\n            },\n          },\n        ];\n      },\n    };\n  },\n\n  addGlobalAttributes() {\n    return [\n      {\n        types: this.options.types,\n        attributes: {\n          indent: {\n            default: 0,\n            parseHTML: (element) => {\n              const identAttr = element.dataset.indent;\n              return (identAttr ? Number.parseInt(identAttr, 10) : 0) || 0;\n            },\n            renderHTML: (attributes) => {\n              if (!attributes.indent) {\n                return {};\n              }\n              return { 'data-indent': attributes.indent };\n            },\n          },\n        },\n      },\n    ];\n  },\n\n  addCommands() {\n    return {\n      indent: () =>\n        createIndentCommand({\n          delta: IndentProps.more,\n          types: this.options.types,\n        }),\n      outdent: () =>\n        createIndentCommand({\n          delta: IndentProps.less,\n          types: this.options.types,\n        }),\n    };\n  },\n\n  addKeyboardShortcuts() {\n    return {\n      'Tab': () => this.editor.commands.indent(),\n      'Shift-Tab': () => this.editor.commands.outdent(),\n    };\n  },\n});\n","import React, { useMemo, useState } from 'react';\n\nimport {\n  ActionButton,\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuTrigger,\n  IconComponent,\n} from '@/components';\nimport { useLocale } from '@/locales';\nimport type { ButtonViewReturnComponentProps } from '@/types';\n\ninterface IPropsLineHeightDropdown {\n  editor: any\n  icon?: any\n  tooltip?: string\n  disabled?: boolean\n  action?: ButtonViewReturnComponentProps['action']\n  isActive?: ButtonViewReturnComponentProps['isActive']\n}\n\nfunction percentageToDecimal(percentageString: any) {\n  const percentage = Number.parseFloat(percentageString.replace('%', ''));\n  const decimal = percentage / 100;\n  return decimal;\n}\n\nfunction LineHeightDropdown(props: IPropsLineHeightDropdown) {\n  const { t } = useLocale();\n  const [value, setValue] = useState('default');\n\n  function toggleLightheight(key: string) {\n    if (key === 'default') {\n      props.editor.commands.unsetLineHeight();\n    } else {\n      props.editor.commands.setLineHeight(key);\n    }\n    setValue(key);\n  }\n\n  const LineHeights = useMemo(() => {\n    const lineHeightOptions = props.editor.extensionManager.extensions.find(\n      (e: any) => e.name === 'lineHeight',\n    )!.options;\n    const a = lineHeightOptions.lineHeights;\n    const b = a.map((item: any) => ({\n      label: percentageToDecimal(item),\n      value: item,\n    }));\n\n    b.unshift({\n      label: t('editor.default'),\n      value: 'default',\n    });\n    return b;\n  }, [props]);\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild\n        disabled={props?.disabled}\n      >\n        <ActionButton\n          customClass=\"!richtext-w-12 richtext-h-12\"\n          disabled={props?.disabled}\n          icon=\"LineHeight\"\n          tooltip={props?.tooltip}\n        >\n          <IconComponent className=\"richtext-ml-1 richtext-size-3 richtext-text-zinc-500\"\n            name=\"MenuDown\"\n          />\n        </ActionButton>\n      </DropdownMenuTrigger>\n\n      <DropdownMenuContent className=\"richtext-min-w-24\">\n        {LineHeights?.map((item: any, index: any) => {\n          return (\n            <DropdownMenuCheckboxItem\n              checked={item.value === value}\n              key={`lineHeight-${index}`}\n              onClick={() => toggleLightheight(item.value)}\n            >\n              {item.label}\n            </DropdownMenuCheckboxItem>\n          );\n        })}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n\nexport default LineHeightDropdown;\n","import type { Command } from '@tiptap/core';\nimport type { NodeType, Node as ProsemirrorNode } from '@tiptap/pm/model';\nimport type { EditorState, Transaction } from '@tiptap/pm/state';\nimport { AllSelection, TextSelection } from '@tiptap/pm/state';\n\nimport { DEFAULT_LINE_HEIGHT } from '@/constants';\n\nexport const ALLOWED_NODE_TYPES = ['paragraph', 'heading', 'list_item', 'todo_item'];\n\nexport function isLineHeightActive(state: EditorState, lineHeight: string): boolean {\n  const { selection, doc } = state;\n  const { from, to } = selection;\n\n  let keepLooking = true;\n  let active = false;\n\n  doc.nodesBetween(from, to, (node) => {\n    const nodeType = node.type;\n    const lineHeightValue = node.attrs.lineHeight || DEFAULT_LINE_HEIGHT;\n\n    if (ALLOWED_NODE_TYPES.includes(nodeType.name)) {\n      if (keepLooking && lineHeight === lineHeightValue) {\n        keepLooking = false;\n        active = true;\n\n        return false;\n      }\n      return nodeType.name !== 'list_item' && nodeType.name !== 'todo_item';\n    }\n    return keepLooking;\n  });\n\n  return active;\n}\n\ninterface SetLineHeightTask {\n  node: ProsemirrorNode\n  nodeType: NodeType\n  pos: number\n}\n\nexport function setTextLineHeight(tr: Transaction, lineHeight: string | null): Transaction {\n  const { selection, doc } = tr;\n\n  if (!selection || !doc) {\n    return tr;\n  }\n\n  if (!(selection instanceof TextSelection || selection instanceof AllSelection)) {\n    return tr;\n  }\n\n  const { from, to } = selection;\n\n  const tasks: Array<SetLineHeightTask> = [];\n  const lineHeightValue = lineHeight && lineHeight !== DEFAULT_LINE_HEIGHT ? lineHeight : null;\n\n  doc.nodesBetween(from, to, (node, pos) => {\n    const nodeType = node.type;\n    if (ALLOWED_NODE_TYPES.includes(nodeType.name)) {\n      const lineHeight = node.attrs.lineHeight || null;\n      if (lineHeight !== lineHeightValue) {\n        tasks.push({\n          node,\n          pos,\n          nodeType,\n        });\n      }\n      return nodeType.name !== 'list_item' && nodeType.name !== 'todo_item';\n    }\n    return true;\n  });\n\n  if (tasks.length === 0) {\n    return tr;\n  }\n\n  for (const task of tasks) {\n    const { node, pos, nodeType } = task;\n    let { attrs } = node;\n\n    attrs = {\n      ...attrs,\n      lineHeight: lineHeightValue,\n    };\n\n    tr = tr.setNodeMarkup(pos, nodeType, attrs, node.marks);\n  }\n\n  return tr;\n}\n\nexport function createLineHeightCommand(lineHeight: string): Command {\n  return ({ state, dispatch }) => {\n    const { selection } = state;\n    let { tr } = state;\n    tr = tr.setSelection(selection);\n\n    tr = setTextLineHeight(tr, lineHeight);\n\n    if (tr.docChanged) {\n      if (dispatch)\n        dispatch(tr);\n      return true;\n    }\n\n    return false;\n  };\n}\n","import { Extension } from '@tiptap/core';\nimport type { Editor } from '@tiptap/core';\n\nimport { DEFAULT_LINE_HEIGHT, DEFAULT_LINE_HEIGHT_LIST } from '@/constants';\nimport LineHeightDropdown from '@/extensions/LineHeight/components/LineHeightDropdown';\nimport type { GeneralOptions } from '@/types';\nimport { createLineHeightCommand } from '@/utils/line-height';\n\nexport interface LineHeightOptions extends GeneralOptions<LineHeightOptions> {\n  types: string[]\n  lineHeights: string[]\n  defaultHeight: string\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    lineHeight: {\n      setLineHeight: (lineHeight: string) => ReturnType\n      unsetLineHeight: () => ReturnType\n    }\n  }\n}\n\nexport const LineHeight = Extension.create<LineHeightOptions>({\n  name: 'lineHeight',\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      types: ['paragraph', 'heading', 'list_item', 'todo_item'],\n      lineHeights: DEFAULT_LINE_HEIGHT_LIST,\n      defaultHeight: DEFAULT_LINE_HEIGHT,\n      button({ editor, t }: { editor: Editor, t: any }) {\n        return {\n          component: LineHeightDropdown,\n          componentProps: {\n            editor,\n            tooltip: t('editor.lineheight.tooltip'),\n          },\n        };\n      },\n    };\n  },\n\n  addGlobalAttributes() {\n    return [\n      {\n        types: this.options.types,\n        attributes: {\n          lineHeight: {\n            default: null,\n            parseHTML: (element) => {\n              return element.style.lineHeight || this.options.defaultHeight;\n            },\n            renderHTML: (attributes) => {\n              if (attributes.lineHeight === this.options.defaultHeight || !attributes.lineHeight) {\n                return {};\n              }\n              return { style: `line-height: ${attributes.lineHeight}` };\n            },\n          },\n        },\n      },\n    ];\n  },\n\n  addCommands() {\n    return {\n      setLineHeight: lineHeight => createLineHeightCommand(lineHeight),\n      unsetLineHeight:\n        () =>\n          ({ commands }) => {\n            return this.options.types.every(type => commands.resetAttributes(type, 'lineHeight'));\n          },\n    };\n  },\n});\n","import { useStoreUploadVideo } from '@/store/store';\nimport { dispatchEvent } from '@/utils/customEvents/customEvents';\nimport { EVENTS } from '@/utils/customEvents/events.constant';\n\nexport function useDialogVideo() {\n  const [v] = useStoreUploadVideo(store => store.value);\n\n  return v;\n}\n\nexport const actionDialogVideo = {\n  setOpen: (id: any, value: boolean) => {\n    dispatchEvent(EVENTS.UPLOAD_VIDEO(id), value);\n  },\n};\n","import type { Extensions } from '@tiptap/core';\n\nimport { Image, Video, type HeadingOptions } from '@/extensions';\nimport { actionDialogImage } from '@/extensions/Image/store';\nimport { actionDialogVideo } from '@/extensions/Video/store';\nimport { localeActions } from '@/locales';\n\nimport type { Group } from './types';\n\nexport function renderGroups(extensions: Extensions) {\n  const groups: Group[] = [\n    {\n      name: 'format',\n      title: localeActions.t('editor.slash.format'),\n      commands: [],\n    },\n    {\n      name: 'insert',\n      title: localeActions.t('editor.slash.insert'),\n      commands: [],\n    },\n  ];\n\n  extensions.forEach((extension) => {\n    /* Format */\n    if (extension.name.toLowerCase() === 'heading') {\n      extension.options.levels.forEach((level: HeadingOptions['levels'][number]) => {\n        groups[0].commands.push({\n          name: `heading${level}`,\n          label: localeActions.t(`editor.heading.h${level}.tooltip`),\n          aliases: [`h${level}`, 'bt', `bt${level}`],\n          iconName: `Heading${level}`,\n          action: ({ editor, range }) => {\n            editor.chain().focus().deleteRange(range).setHeading({ level }).run();\n          },\n        });\n      });\n    }\n\n    if (extension.name.toLowerCase() === 'bulletlist') {\n      groups[0].commands.push({\n        name: 'bulletList',\n        label: localeActions.t('editor.bulletlist.tooltip'),\n        aliases: ['ul', 'yxlb'],\n        iconName: 'List',\n        action: ({ editor, range }) => {\n          editor.chain().focus().deleteRange(range).toggleBulletList().run();\n        },\n      });\n    }\n\n    if (extension.name.toLowerCase() === 'orderedlist') {\n      groups[0].commands.push({\n        name: 'numberedList',\n        label: localeActions.t('editor.orderedlist.tooltip'),\n        aliases: ['ol', 'yxlb'],\n        iconName: 'ListOrdered',\n        action: ({ editor, range }) => {\n          editor.chain().focus().deleteRange(range).toggleOrderedList().run();\n        },\n      });\n    }\n\n    if (extension.name.toLowerCase() === 'tasklist') {\n      groups[0].commands.push({\n        name: 'taskList',\n        label: localeActions.t('editor.tasklist.tooltip'),\n        iconName: 'ListTodo',\n        description: 'Task list with todo items',\n        aliases: ['todo'],\n        action: ({ editor, range }) => {\n          editor.chain().focus().deleteRange(range).toggleTaskList().run();\n        },\n      });\n    }\n\n    if (extension.name.toLowerCase() === 'blockquote') {\n      groups[0].commands.push({\n        name: 'blockquote',\n        label: localeActions.t('editor.blockquote.tooltip'),\n        description: '插入引入格式',\n        aliases: ['yr'],\n        iconName: 'TextQuote',\n        action: ({ editor, range }) => {\n          editor.chain().focus().deleteRange(range).setBlockquote().run();\n        },\n      });\n    }\n\n    if (extension.name.toLowerCase() === 'codeblock') {\n      groups[0].commands.push({\n        name: 'codeBlock',\n        label: localeActions.t('editor.codeblock.tooltip'),\n        iconName: 'Code2',\n        description: 'Code block with syntax highlighting',\n        shouldBeHidden: editor => editor.isActive('columns'),\n        action: ({ editor, range }) => {\n          editor.chain().focus().deleteRange(range).setCodeBlock().run();\n        },\n      });\n    }\n\n    /* Insert */\n    if (extension.name.toLowerCase() === Image.name) {\n      groups[1].commands.push({\n        name: 'image',\n        label: localeActions.t('editor.image.tooltip'),\n        iconName: 'ImageUp',\n        description: 'Insert a image',\n        aliases: ['image', 'tp', 'tupian'],\n        shouldBeHidden: editor => editor.isActive('columns'),\n        action: ({ editor, range }: any) => {\n          editor.chain().focus().deleteRange(range).run();\n\n          actionDialogImage.setOpen(editor.id, true);\n        },\n      });\n    }\n\n    if (extension.name.toLowerCase() === Video.name) {\n      groups[1].commands.push({\n        name: 'video',\n        label: localeActions.t('editor.video.tooltip'),\n        iconName: 'Video',\n        description: 'Insert a video',\n        aliases: ['video', 'sp', 'shipin'],\n        shouldBeHidden: editor => editor.isActive('columns'),\n        action: ({ editor, range }: any) => {\n          editor.chain().focus().deleteRange(range).run();\n          actionDialogVideo.setOpen(editor.id, true);\n        },\n      });\n    }\n\n    if (extension.name.toLowerCase() === 'table') {\n      groups[1].commands.push({\n        name: 'table',\n        label: localeActions.t('editor.table.tooltip'),\n        iconName: 'Table',\n        description: 'Insert a table',\n        aliases: ['table', 'bg', 'biaoge', 'biao'],\n        shouldBeHidden: editor => editor.isActive('columns'),\n        action: ({ editor, range }) => {\n          editor\n            .chain()\n            .focus()\n            .deleteRange(range)\n            .insertTable({ rows: 3, cols: 3, withHeaderRow: false })\n            .run();\n        },\n      });\n    }\n\n    if (extension.name.toLowerCase() === 'horizontalrule') {\n      groups[1].commands.push({\n        name: 'horizontalRule',\n        label: localeActions.t('editor.horizontalrule.tooltip'),\n        iconName: 'Minus',\n        description: 'Insert a horizontal divider',\n        aliases: ['hr', 'fgx', 'fg'],\n        action: ({ editor, range }) => {\n          editor.chain().focus().deleteRange(range).setHorizontalRule().run();\n        },\n      });\n    }\n\n    if (extension.name.toLowerCase() === 'columns') {\n      groups[1].commands.push({\n        name: 'columns',\n        label: localeActions.t('editor.columns.tooltip'),\n        iconName: 'Columns2',\n        description: 'Add two column content',\n        action: ({ editor }) => {\n          editor.chain().focus().insertColumns({ cols: 2 }).run();\n        },\n      });\n    }\n  });\n\n  return groups;\n}\n","import React, {\n  Fragment,\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react';\n\nimport { IconComponent } from '@/components';\nimport { cn } from '@/lib/utils';\nimport { useLocale } from '@/locales';\n\nfunction CommandsList(props: any, ref: any) {\n  // 选中的索引\n  const [selectedCommandIndex, setSelectedCommandIndex] = useState(0);\n  const [selectedGroupIndex, setSelectedGroupIndex] = useState(0);\n  // 滚动ref\n  const scrollContainer = useRef<HTMLDivElement | null>(null);\n\n  const { t } = useLocale();\n\n  const activeItemRefs = useRef<(HTMLButtonElement | null)[]>([]);\n\n  useImperativeHandle(ref, () => {\n    return {\n      onKeyDown,\n    };\n  });\n\n  useEffect(() => {\n    if (!scrollContainer.current) {\n      return;\n    }\n    const activeItemIndex = selectedGroupIndex * 1000 + selectedCommandIndex;\n    const activeItem = activeItemRefs.current[activeItemIndex];\n    if (activeItem) {\n      activeItem.scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n      });\n    }\n  }, [selectedCommandIndex, selectedGroupIndex]);\n\n  function onKeyDown({ event }: any) {\n    if (event.key === 'ArrowUp') {\n      upHandler();\n      return true;\n    }\n\n    if (event.key === 'ArrowDown') {\n      downHandler();\n      return true;\n    }\n\n    if (event.key === 'Enter') {\n      enterHandler();\n      return true;\n    }\n\n    return false;\n  }\n\n  function upHandler() {\n    if (props.items.length === 0) {\n      return false;\n    }\n    let newCommandIndex = selectedCommandIndex - 1;\n    let newGroupIndex = selectedGroupIndex;\n\n    if (newCommandIndex < 0) {\n      newGroupIndex = selectedGroupIndex - 1;\n      newCommandIndex = props.items[newGroupIndex]?.commands.length - 1 || 0;\n    }\n\n    if (newGroupIndex < 0) {\n      newGroupIndex = props.items.length - 1;\n      newCommandIndex = props.items[newGroupIndex].commands.length - 1;\n    }\n\n    setSelectedCommandIndex(newCommandIndex);\n    setSelectedGroupIndex(newGroupIndex);\n  }\n\n  function downHandler() {\n    if (props.items.length === 0) {\n      return false;\n    }\n    const commands = props.items[selectedGroupIndex].commands;\n    let newCommandIndex = selectedCommandIndex + 1;\n    let newGroupIndex = selectedGroupIndex;\n\n    if (commands.length - 1 < newCommandIndex) {\n      newCommandIndex = 0;\n      newGroupIndex = selectedGroupIndex + 1;\n    }\n    if (props.items.length - 1 < newGroupIndex) {\n      newGroupIndex = 0;\n    }\n    setSelectedCommandIndex(newCommandIndex);\n    setSelectedGroupIndex(newGroupIndex);\n  }\n\n  function enterHandler() {\n    if (props.items.length === 0 || selectedGroupIndex === -1 || selectedCommandIndex === -1) {\n      return false;\n    }\n\n    selectItem(selectedGroupIndex, selectedCommandIndex);\n  }\n\n  function selectItem(groupIndex: number, commandIndex: number) {\n    const command = props.items[groupIndex].commands[commandIndex];\n    props.command(command);\n  }\n\n  function createCommandClickHandler(groupIndex: number, commandIndex: number) {\n    selectItem(groupIndex, commandIndex);\n  }\n  function setActiveItemRef(groupIndex: number, commandIndex: number, el: any) {\n    activeItemRefs.current[groupIndex * 1000 + commandIndex] = el;\n  }\n\n  return (\n    <div\n      className=\"richtext-mb-8 richtext-max-h-[min(80vh,24rem)] richtext-flex-wrap richtext-overflow-auto richtext-rounded-lg !richtext-border !richtext-border-neutral-200 !richtext-bg-white richtext-p-1 !richtext-text-black richtext-shadow-sm dark:!richtext-border-neutral-800 dark:!richtext-bg-black\"\n      ref={scrollContainer}\n    >\n      {props?.items?.length\n        ? (\n          <div className=\"richtext-grid richtext-min-w-48 richtext-grid-cols-1 richtext-gap-0.5\">\n            {props?.items?.map((group: any, groupIndex: any) => {\n              return (\n                <Fragment key={`slash-${group.title}`}>\n                  <div className=\"richtext-col-[1/-1] richtext-mx-2 richtext-mt-2 richtext-select-none richtext-text-[0.65rem] richtext-font-semibold richtext-uppercase richtext-tracking-wider !richtext-text-neutral-500 first:richtext-mt-0.5\">\n                    {group.title}\n                  </div>\n\n                  {group.commands.map((command: any, commandIndex: any) => {\n                    return (\n                      <button\n                        key={`command-${commandIndex}`}\n                        onClick={() => createCommandClickHandler(groupIndex, commandIndex)}\n                        ref={el => setActiveItemRef(groupIndex, commandIndex, el)}\n                        className={cn('richtext-flex richtext-items-center richtext-gap-3 richtext-px-2 richtext-py-1.5 richtext-text-sm !richtext-text-neutral-800 dark:!richtext-text-neutral-200 richtext-text-left richtext-w-full richtext-rounded-sm richtext-outline-none richtext-transition-colors !richtext-bg-transparent hover:!richtext-bg-accent ', {\n                          'slash-command-active': selectedGroupIndex === groupIndex && selectedCommandIndex === commandIndex,\n                        })}\n                      >\n                        {command.iconUrl && <img alt=\"\"\n                          className=\"richtext-size-6\"\n                          src={command.iconUrl}\n                        />}\n\n                        {command.iconName && (\n                          <IconComponent className=\"!richtext-mr-1 !richtext-text-lg\"\n                            name={command.iconName}\n                          />\n                        )}\n\n                        {command.label}\n                      </button>\n                    );\n                  })}\n                </Fragment>\n              );\n            })}\n          </div>\n        )\n        : (\n          <div className=\"richtext-p-3\">\n            <span className=\"richtext-text-xs richtext-text-gray-800 dark:richtext-text-gray-100\">\n              {t('editor.slash.empty')}\n            </span>\n          </div>\n        )}\n    </div>\n  );\n}\n\nexport default forwardRef(CommandsList);\n","import type { Editor, Range } from '@tiptap/core';\nimport { Extension } from '@tiptap/core';\nimport { PluginKey } from '@tiptap/pm/state';\nimport { ReactRenderer } from '@tiptap/react';\nimport type { SuggestionKeyDownProps, SuggestionProps } from '@tiptap/suggestion';\nimport Suggestion from '@tiptap/suggestion';\nimport tippy from 'tippy.js';\n\nimport { renderGroups } from './groups';\nimport CommandsList from '@/extensions/SlashCommand/components/CommandsList';\n\nconst extensionName = 'slashCommand';\nlet popup: any;\nexport const SlashCommand = Extension.create({\n  name: extensionName,\n  priority: 200,\n  onCreate() {\n    popup = tippy('body', {\n      interactive: true,\n      trigger: 'manual',\n      placement: 'bottom-start',\n      theme: 'slash-command',\n      maxWidth: '16rem',\n      offset: [16, 8],\n      popperOptions: {\n        strategy: 'fixed',\n        modifiers: [\n          {\n            name: 'flip',\n            enabled: false,\n          },\n        ],\n      },\n    });\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      Suggestion({\n        editor: this.editor,\n        char: '/',\n        allowSpaces: true,\n        startOfLine: true,\n        pluginKey: new PluginKey(extensionName),\n        allow: ({ state, range }) => {\n          const $from = state.doc.resolve(range.from);\n          const isRootDepth = $from.depth === 1;\n          const isParagraph = $from.parent.type.name === 'paragraph';\n          const isStartOfNode = $from.parent.textContent?.charAt(0) === '/';\n          // TODO 行列内\n          const isInColumn = this.editor.isActive('column');\n          const afterContent = $from.parent.textContent?.slice(\n            Math.max(0, $from.parent.textContent?.indexOf('/')),\n          );\n          const isValidAfterContent = !afterContent?.endsWith('  ');\n\n          return (\n            ((isRootDepth && isParagraph && isStartOfNode)\n              || (isInColumn && isParagraph && isStartOfNode))\n            && isValidAfterContent\n          );\n        },\n        command: ({ editor, range, props }: { editor: Editor, range: Range, props: any }) => {\n          const { view } = editor;\n          props.action({ editor, range });\n          view.focus();\n        },\n        items: ({ query, editor }: { query: string, editor: Editor }) => {\n          // get options\n          // Filter commands\n          const groups = renderGroups(editor.extensionManager.extensions);\n          const withFilteredCommands = groups.map(group => ({\n            ...group,\n            commands: group.commands\n              .filter((item) => {\n                const labelNormalized = item.label.toLowerCase().trim();\n                const queryNormalized = query.toLowerCase().trim();\n\n                if (item.aliases) {\n                  const aliases = item.aliases.map(alias => alias.toLowerCase().trim());\n                  const labelMatch = labelNormalized.match(queryNormalized);\n                  const aliasMatch = aliases.some(alias => alias.match(queryNormalized));\n\n                  return labelMatch || aliasMatch;\n                }\n\n                return labelNormalized.match(queryNormalized);\n              })\n              .filter(command =>\n                command.shouldBeHidden ? !command.shouldBeHidden(this.editor) : true,\n              ),\n          }));\n          // Remove empty groups\n          const withoutEmptyGroups = withFilteredCommands.filter((group) => {\n            if (group.commands.length > 0) {\n              return true;\n            }\n\n            return false;\n          });\n          const withEnabledSettings = withoutEmptyGroups.map(group => ({\n            ...group,\n            commands: group.commands.map(command => ({\n              ...command,\n              isEnabled: true,\n            })),\n          }));\n\n          return withEnabledSettings;\n        },\n        render: () => {\n          let component: any;\n          let scrollHandler: (() => void) | null = null;\n          return {\n            onStart: (props: SuggestionProps) => {\n              component = new ReactRenderer(CommandsList, {\n                props,\n                editor: props.editor,\n              });\n              const { view } = props.editor;\n              // const editorNode = view.dom as HTMLElement;\n              const getReferenceClientRect = () => {\n                if (!props.clientRect) {\n                  return props.editor.storage[extensionName].rect;\n                }\n\n                const rect = props.clientRect();\n\n                if (!rect) {\n                  return props.editor.storage[extensionName].rect;\n                }\n\n                let yPos = rect.y;\n\n                if (rect.top + component.element.offsetHeight + 40 > window.innerHeight) {\n                  const diff = rect.top + component.element.offsetHeight - window.innerHeight + 40;\n                  yPos = rect.y - diff;\n                }\n\n                // Account for when the editor is bound inside a container that doesn't go all the way to the edge of the screen\n                // const editorXOffset = editorNode.getBoundingClientRect().x;\n                return new DOMRect(rect.x, yPos, rect.width, rect.height);\n              };\n\n              scrollHandler = () => {\n                popup?.[0].setProps({\n                  getReferenceClientRect,\n                });\n              };\n\n              view.dom.parentElement?.addEventListener('scroll', scrollHandler);\n\n              popup?.[0].setProps({\n                getReferenceClientRect,\n                appendTo: () => document.body,\n                content: component.element,\n              });\n\n              popup?.[0].show();\n            },\n\n            onUpdate(props: SuggestionProps) {\n              component.updateProps(props);\n\n              const { view } = props.editor;\n\n              // const editorNode = view.dom as HTMLElement;\n\n              const getReferenceClientRect = () => {\n                if (!props.clientRect) {\n                  return props.editor.storage[extensionName].rect;\n                }\n\n                const rect = props.clientRect();\n\n                if (!rect) {\n                  return props.editor.storage[extensionName].rect;\n                }\n\n                // Account for when the editor is bound inside a container that doesn't go all the way to the edge of the screen\n                return new DOMRect(rect.x, rect.y, rect.width, rect.height);\n              };\n\n              const scrollHandler = () => {\n                popup?.[0].setProps({\n                  getReferenceClientRect,\n                });\n              };\n\n              view.dom.parentElement?.addEventListener('scroll', scrollHandler);\n\n              props.editor.storage[extensionName].rect = props.clientRect\n                ? getReferenceClientRect()\n                : {\n                  width: 0,\n                  height: 0,\n                  left: 0,\n                  top: 0,\n                  right: 0,\n                  bottom: 0,\n                };\n              popup?.[0].setProps({\n                getReferenceClientRect,\n              });\n            },\n\n            onKeyDown(props: SuggestionKeyDownProps) {\n              if (props.event.key === 'Escape') {\n                popup?.[0].hide();\n\n                return true;\n              }\n\n              if (!popup?.[0].state.isShown) {\n                popup?.[0].show();\n              }\n\n              return component.ref?.onKeyDown(props);\n            },\n\n            onExit(props) {\n              popup?.[0].hide();\n              if (scrollHandler) {\n                const { view } = props.editor;\n                view.dom.parentElement?.removeEventListener('scroll', scrollHandler);\n              }\n              component.destroy();\n            },\n          };\n        },\n      }),\n    ];\n  },\n\n  addStorage() {\n    return {\n      rect: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n      },\n    };\n  },\n});\n\nexport default SlashCommand;\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport type { Command } from '@tiptap/core';\nimport { Extension } from '@tiptap/core';\nimport type { Transaction } from '@tiptap/pm/state';\nimport { CellSelection } from '@tiptap/pm/tables';\n\nexport interface TableCellBackgroundOptions {\n  HTMLAttributes: Record<string, any>\n  types?: any\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    tableCellBackground: {\n      setTableCellBackground: (color: string) => ReturnType\n      unsetTableCellBackground: () => ReturnType\n    }\n  }\n}\n\nexport function setCellBackgroundMarkup(tr: Transaction, pos: number, backgroundColor: string): Transaction {\n  if (!tr.doc) {\n    return tr;\n  }\n\n  const node = tr.doc.nodeAt(pos);\n  if (!node) {\n    return tr;\n  }\n\n  if (backgroundColor === node.attrs.backgroundColor) {\n    return tr;\n  }\n\n  const nodeAttrs = {\n    ...node.attrs,\n    backgroundColor,\n  };\n\n  return tr.setNodeMarkup(pos, node.type, nodeAttrs, node.marks);\n}\n\nexport function updateCellBackground(tr: Transaction, options: TableCellBackgroundOptions, backgroundColor: string): Transaction {\n  const { doc, selection } = tr;\n\n  if (!doc || !selection || !(selection instanceof CellSelection)) {\n    return tr;\n  }\n\n  selection.forEachCell((node, pos) => {\n    tr = setCellBackgroundMarkup(tr, pos, backgroundColor);\n  });\n\n  return tr;\n}\n\nexport function createCellBackgroundCommand(backgroundColor: string, options: TableCellBackgroundOptions): Command {\n  return ({ tr, state, dispatch }) => {\n    const { selection } = state;\n    tr = tr.setSelection(selection);\n    tr = updateCellBackground(tr, options, backgroundColor);\n\n    if (tr.docChanged) {\n      dispatch?.(tr);\n      return true;\n    }\n\n    return false;\n  };\n}\n\n// @ts-ignore\nexport const TableCellBackground = Extension.create<TableCellBackgroundOptions>({\n  name: 'tableCellBackground',\n  addOptions() {\n    return {\n      types: ['tableCell'],\n      HTMLAttributes: {},\n    };\n  },\n\n  addGlobalAttributes() {\n    return [\n      {\n        types: this.options.types,\n        attributes: {\n          backgroundColor: {\n            parseHTML: (element) => {\n              return element.style.backgroundColor || '';\n            },\n            renderHTML: (attributes) => {\n              if (!attributes.backgroundColor || attributes.backgroundColor === '') {\n                return {};\n              } else {\n                return {\n                  style: `background-color: ${attributes.backgroundColor}`,\n                };\n              }\n            },\n          },\n        },\n      },\n    ];\n  },\n  addCommands() {\n    return {\n      setTableCellBackground: (backgroundColor: string) =>\n        createCellBackgroundCommand(backgroundColor, this.options),\n      unsetTableCellBackground: () => createCellBackgroundCommand('', this.options),\n    };\n  },\n});\n","interface HttpRequestHeadersInterfaceMock {\n  [id: string]: string | string[] | undefined\n}\n\ninterface HttpRequestInterfaceMock {\n  headers: HttpRequestHeadersInterfaceMock\n  [id: string]: any\n}\n\nexport interface IsMobileOptions {\n  ua?: string | HttpRequestInterfaceMock\n  tablet?: boolean\n  featureDetect?: boolean\n}\n\nconst mobileRE\n  = /(android|bb\\d+|meego).+mobile|armv7l|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series[46]0|samsungbrowser.*mobile|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i;\nconst notMobileRE = /CrOS/;\nconst tabletRE = /android|ipad|playbook|silk/i;\n\n/**\n * Determines if the current device is a mobile or tablet device.\n * @param opts - Options for the detection.\n * @returns `true` if the device is mobile or tablet, `false` otherwise.\n */\nexport function isMobile(opts: IsMobileOptions = {}): boolean {\n  let ua = opts.ua || (typeof navigator !== 'undefined' && navigator.userAgent);\n\n  if (ua && typeof ua === 'object' && ua.headers && typeof ua.headers['user-agent'] === 'string') {\n    ua = ua.headers['user-agent'];\n  }\n\n  if (typeof ua !== 'string') {\n    return false;\n  }\n\n  if (mobileRE.test(ua) && !notMobileRE.test(ua)) {\n    return true;\n  }\n\n  if (opts.tablet && tabletRE.test(ua)) {\n    return true;\n  }\n\n  if (\n    opts.tablet\n    && opts.featureDetect\n    && navigator\n    && navigator.maxTouchPoints > 1\n    && ua.includes('Macintosh')\n    && ua.includes('Safari')\n  ) {\n    return true;\n  }\n\n  return false;\n}\n","import React, { useState } from 'react';\n\nimport { Popover, PopoverContent, PopoverTrigger } from '@/components';\nimport {\n  TABLE_DEFAULT_SELECTED_GRID_SIZE,\n  TABLE_INIT_GRID_SIZE,\n  TABLE_MAX_GRID_SIZE,\n} from '@/constants';\nimport { isMobile } from '@/utils/is-mobile';\n\nconst createArray = (length: number) => Array.from({ length }).map((_, index) => index + 1);\n\ninterface IPropsCreateTablePopover {\n  createTable: any\n  children: any\n}\n\nexport interface GridSize {\n  rows: number\n  cols: number\n}\n\nexport interface CreateTablePayload extends GridSize {\n  withHeaderRow: boolean\n}\n\nfunction CreateTablePopover(props: IPropsCreateTablePopover) {\n  const [withHeaderRow, setWithHeaderRow] = useState<boolean>(true);\n  const [tableGridSize, setTableGridSize] = useState<GridSize>({\n    rows: isMobile() ? TABLE_MAX_GRID_SIZE : TABLE_INIT_GRID_SIZE,\n    cols: isMobile() ? TABLE_MAX_GRID_SIZE : TABLE_INIT_GRID_SIZE,\n  });\n\n  const [selectedTableGridSize, setSelectedTableGridSize] = useState<GridSize>({\n    rows: TABLE_DEFAULT_SELECTED_GRID_SIZE,\n    cols: TABLE_DEFAULT_SELECTED_GRID_SIZE,\n  });\n\n  function selectTableGridSize(rows: number, cols: number): void {\n    if (rows === tableGridSize.rows) {\n      setTableGridSize((prev) => {\n        return {\n          ...prev,\n          rows: Math.min(rows + 1, TABLE_MAX_GRID_SIZE),\n        };\n      });\n    }\n\n    if (cols === tableGridSize.cols) {\n      setTableGridSize((prev) => {\n        return {\n          ...prev,\n          cols: Math.min(cols + 1, TABLE_MAX_GRID_SIZE),\n        };\n      });\n    }\n\n    setSelectedTableGridSize({\n      rows,\n      cols,\n    });\n  }\n\n  function onMouseDown(rows: number, cols: number) {\n    props?.createTable({ rows, cols, withHeaderRow });\n    resetTableGridSize();\n  }\n\n  function resetTableGridSize(): void {\n    setWithHeaderRow(false);\n\n    setTableGridSize({\n      rows: TABLE_INIT_GRID_SIZE,\n      cols: TABLE_INIT_GRID_SIZE,\n    });\n\n    setSelectedTableGridSize({\n      rows: TABLE_DEFAULT_SELECTED_GRID_SIZE,\n      cols: TABLE_DEFAULT_SELECTED_GRID_SIZE,\n    });\n  }\n\n  return (\n    <Popover modal>\n      <PopoverTrigger asChild>\n        {props?.children}\n      </PopoverTrigger>\n\n      <PopoverContent align=\"start\"\n        className=\"richtext-w-full !richtext-p-2\"\n        side=\"bottom\"\n      >\n        <div className=\"table-grid-size-editor richtext-p-0\">\n          <div className=\"richtext-flex richtext-flex-col richtext-flex-wrap richtext-justify-between richtext-gap-1\">\n            {createArray(tableGridSize?.rows)?.map((row: any) => {\n              return (\n                <div className=\"richtext-flex richtext-gap-1\"\n                  key={`r-${row}`}\n                >\n                  {createArray(tableGridSize?.cols)?.map((col: any) => {\n                    return (\n                      <div\n                        key={`c-${col}`}\n                        onMouseDown={() => onMouseDown(row, col)}\n                        onMouseOver={() => selectTableGridSize(row, col)}\n                        className={`richtext-cursor-pointer richtext-border-border ${\n                          col <= selectedTableGridSize.cols\n                          && row <= selectedTableGridSize.rows\n                          && 'tableCellActive !richtext-bg-foreground'\n                        }`}\n                      >\n                        <div className=\"richtext-box-border richtext-size-4 richtext-rounded-[2px] !richtext-border richtext-border-solid !richtext-border-border richtext-p-1\"></div>\n                      </div>\n                    );\n                  })}\n                </div>\n              );\n            })}\n          </div>\n\n          <div className=\"richtext-mt-2 richtext-text-center richtext-text-sm richtext-text-zinc-600\">\n            {selectedTableGridSize.rows}\n            {' '}\n            x\n            {selectedTableGridSize.cols}\n          </div>\n        </div>\n      </PopoverContent>\n    </Popover>\n  );\n}\n\nexport default CreateTablePopover;\n","import React from 'react';\n\nimport { ActionButton } from '@/components';\nimport CreateTablePopover from '@/extensions/Table/components/CreateTablePopover';\nimport type { ButtonViewReturnComponentProps } from '@/types';\n\ninterface IPropsTableActionButton {\n  editor: any\n  icon?: any\n  tooltip?: string\n  disabled?: boolean\n  color?: string\n  action?: ButtonViewReturnComponentProps['action']\n  isActive?: ButtonViewReturnComponentProps['isActive']\n}\n\nfunction TableActionButton(props: IPropsTableActionButton) {\n  function createTable(options: any) {\n    if (!props.disabled) {\n      props.editor\n        .chain()\n        .focus()\n        .insertTable({ ...options, withHeaderRow: false })\n        .run();\n    }\n  }\n\n  return (\n    <CreateTablePopover createTable={createTable}>\n      <ActionButton\n        icon={props?.icon}\n        tooltip={props?.tooltip}\n        disabled={props?.disabled}\n        color={props?.color}\n        action={props?.action}\n        isActive={props?.isActive}\n      />\n    </CreateTablePopover>\n  );\n}\n\nexport default TableActionButton;\n","import TiptapTable from '@tiptap/extension-table';\nimport { TableCell } from '@tiptap/extension-table-cell';\nimport type { TableCellOptions } from '@tiptap/extension-table-cell';\nimport { TableHeader } from '@tiptap/extension-table-header';\nimport type { TableHeaderOptions } from '@tiptap/extension-table-header';\nimport { TableRow } from '@tiptap/extension-table-row';\nimport type { TableRowOptions } from '@tiptap/extension-table-row';\n\nimport type { TableCellBackgroundOptions } from './cell-background';\nimport { TableCellBackground } from './cell-background';\nimport TableActionButton from '@/extensions/Table/components/TableActionButton';\nimport type { GeneralOptions } from '@/types';\n\nexport interface TableOptions extends GeneralOptions<TableOptions> {\n  HTMLAttributes: Record<string, any>\n  resizable: boolean\n  handleWidth: number\n  cellMinWidth: number\n  lastColumnResizable: boolean\n  allowTableNodeSelection: boolean\n  /** options for table rows */\n  tableRow: Partial<TableRowOptions>\n  /** options for table headers */\n  tableHeader: Partial<TableHeaderOptions>\n  /** options for table cells */\n  tableCell: Partial<TableCellOptions>\n  /** options for table cell background */\n  tableCellBackground: Partial<TableCellBackgroundOptions>\n}\nexport const Table = TiptapTable.extend<TableOptions>({\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      resizable: true,\n      lastColumnResizable: true,\n      allowTableNodeSelection: false,\n      button: ({ editor, t }: any) => ({\n        component: TableActionButton,\n        componentProps: {\n          disabled: editor.isActive('table') || false,\n          icon: 'Table',\n          tooltip: t('editor.table.tooltip'),\n          editor,\n        },\n      }),\n    };\n  },\n\n  addExtensions() {\n    return [\n      TableRow.configure(this.options.tableRow),\n      TableHeader.configure(this.options.tableHeader),\n      TableCell.configure(this.options.tableCell),\n      TableCellBackground.configure(this.options.tableCellBackground),\n    ];\n  },\n});\n\nexport default Table;\n","/* eslint-disable prefer-const */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport { Extension } from '@tiptap/core';\nimport type { Mark } from '@tiptap/pm/model';\nimport { Plugin, PluginKey } from '@tiptap/pm/state';\n\nimport { ActionButton } from '@/components';\nimport type { GeneralOptions } from '@/types';\n\n/**\n * Represents the interface for font size options, extending GeneralOptions.\n */\nexport interface FormatPainterOptions extends GeneralOptions<FormatPainterOptions> {}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    painter: {\n      setPainter: (marks: Mark[]) => ReturnType\n    }\n  }\n}\n\nexport interface PainterAction {\n  type: 'start' | 'end'\n  marks: Mark[]\n}\n/**\n * 格式刷\n */\nexport const FormatPainter = Extension.create<FormatPainterOptions>({\n  name: 'painter',\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      button: ({ editor, t }) => ({\n        component: ActionButton,\n        componentProps: {\n          action: () => {\n            editor.commands.setPainter(editor?.state.selection.$head.marks() as Mark[]);\n          },\n          icon: 'PaintRoller',\n          tooltip: t('editor.format'),\n        },\n      }),\n    };\n  },\n  addCommands() {\n    return {\n      setPainter:\n        (marks: Mark[]) =>\n          ({\n            view: {\n              dispatch,\n              state: { tr },\n              dom,\n            },\n          }) => {\n            const svgCursor\n            = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"#000\" d=\"M9 22v-6H4V7q0-1.65 1.175-2.825T8 3h12v13h-5v6zM6 10h12V5h-1v4h-2V5h-1v2h-2V5H8q-.825 0-1.412.588T6 7zm0 4h12v-2H6zm0 0v-2z\"/></svg>';\n            const encodedSvg = encodeURIComponent(svgCursor);\n            const cursorUrl = `url(\"data:image/svg+xml;utf8,${encodedSvg}\"), auto`;\n\n            dom.style.cursor = cursorUrl;\n            dispatch(tr.setMeta('painterAction', { type: 'start', marks }));\n            return true;\n          },\n    };\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      new Plugin({\n        key: new PluginKey('format-painter'),\n        state: {\n          init: () => [] as Mark[],\n          apply: (tr, set) => {\n            const action = tr.getMeta('painterAction') as PainterAction;\n            if (action && action.type === 'start') {\n              set = action.marks;\n            } else if (action && action.type === 'end') {\n              set = [];\n            }\n            return set;\n          },\n        },\n        props: {\n          handleDOMEvents: {\n            mousedown(view) {\n              const marks = this.getState(view.state) as Mark[];\n              if (!marks || marks.length === 0) {\n                view.dom.style.cursor = '';\n                return false; // 如果没有标记，则不执行任何操作\n              }\n              const mouseup = () => {\n                document.removeEventListener('mouseup', mouseup);\n\n                let {\n                  dispatch,\n                  state: { tr, selection },\n                  dom,\n                } = view as any;\n                dom.style.cursor = '';\n\n                tr = tr.removeMark(selection.from, selection.to);\n                for (const mark of marks) {\n                  if (mark.type.name !== 'link') {\n                    tr = tr.addMark(selection.from, selection.to, mark);\n                  }\n                }\n\n                dispatch(tr.setMeta('painterAction', { type: 'end' }));\n              };\n              document.addEventListener('mouseup', mouseup);\n              return true;\n            },\n          },\n        },\n      }),\n    ];\n  },\n});\n","import React, { useEffect, useState } from 'react';\n\nimport deepEqual from 'deep-equal';\n\nimport { ActionButton, Button, IconComponent, Input, Label, Popover, PopoverContent, PopoverTrigger, Switch } from '@/components';\nimport {  SearchAndReplace } from '@/extensions/SearchAndReplace/SearchAndReplace';\nimport { useLocale } from '@/locales';\nimport { listenEvent } from '@/utils/customEvents/customEvents';\nimport { EVENTS } from '@/utils/customEvents/events.constant';\n\nfunction SearchAndReplaceButton({ editor, ...props }: any) {\n  const { t } = useLocale();\n\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [results, setResults] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n  const [replaceValue, setReplaceValue] = useState('');\n  const [visible, setVisible] = useState(false);\n  const [caseSensitive, setCaseSensitive] = useState(false);\n\n  useEffect(() => {\n    if (!visible) {\n      setSearchValue('');\n      setReplaceValue('');\n      setCurrentIndex(-1);\n      setResults([]);\n\n      editor.commands.setSearchTerm('');\n      editor.commands.setReplaceTerm('');\n    }\n  }, [editor, visible]);\n\n  useEffect(() => {\n    if (!visible)\n      return;\n    if (editor && editor.commands && editor.commands.setSearchTerm) {\n      editor.commands.setSearchTerm(searchValue);\n    }\n  }, [visible, searchValue, editor]);\n\n  useEffect(() => {\n    if (!visible)\n      return;\n    if (editor && editor.commands && editor.commands.setReplaceTerm) {\n      editor.commands.setReplaceTerm(replaceValue);\n    }\n  }, [visible, replaceValue, editor]);\n\n  useEffect(() => {\n    if (!editor)\n      return;\n\n    const searchExtension = editor.extensionManager.extensions.find((ext: any) => ext.name === SearchAndReplace.name);\n\n    if (!searchExtension)\n      return;\n\n    const listener = () => {\n      if (!visible)\n        return;\n\n      const currentIndex = searchExtension ? searchExtension.storage.currentIndex : -1;\n      const results = searchExtension ? searchExtension.storage.results : [];\n      setCurrentIndex(preIndex => (preIndex !== currentIndex ? currentIndex : preIndex));\n      setResults(prevResults => (deepEqual(prevResults, results) ? prevResults : results));\n    };\n\n    listenEvent(EVENTS.SEARCH_REPLCE, listener);\n\n    return () => {\n      if (!searchExtension)\n        return;\n      listenEvent(EVENTS.SEARCH_REPLCE, listener);\n    };\n  }, [visible, editor]);\n\n  return (\n    <Popover\n      onOpenChange={setVisible}\n      open={visible}\n    >\n      <PopoverTrigger\n        asChild\n        disabled={props?.disabled}\n      >\n        <ActionButton\n          disabled={props?.disabled}\n          isActive={props?.isActive}\n          tooltip={props?.tooltip}\n        >\n          <IconComponent name={props?.icon} />\n        </ActionButton>\n      </PopoverTrigger>\n\n      <PopoverContent\n        align=\"start\"\n        className=\"richtext-w-full\"\n        hideWhenDetached\n        side=\"bottom\"\n      >\n\n        <div className=\"richtext-mb-[6px] richtext-flex richtext-items-center richtext-justify-between\">\n          <Label>\n            {t('editor.search.dialog.text')}\n          </Label>\n\n          <span className=\"richtext-font-semibold\">\n            {results.length > 0 ? `${currentIndex + 1}/${results.length}` : '0/0'}\n          </span>\n        </div>\n\n        <div className=\"richtext-mb-[10px] richtext-flex richtext-w-full richtext-max-w-sm richtext-items-center richtext-gap-1.5\">\n          <Input\n            autoFocus\n            className=\"richtext-w-full\"\n            onChange={e => setSearchValue(e.target.value)}\n            placeholder=\"Text\"\n            required\n            type=\"text\"\n            value={searchValue}\n          />\n\n          <Button className=\"richtext-flex-1\"\n            disabled={results.length === 0}\n            onClick={editor.commands.goToPrevSearchResult}\n          >\n            <IconComponent name=\"ChevronUp\" />\n          </Button>\n\n          <Button className=\"richtext-flex-1\"\n            disabled={results.length === 0}\n            onClick={editor.commands.goToNextSearchResult}\n          >\n            <IconComponent name=\"ChevronDown\" />\n          </Button>\n\n        </div>\n\n        <Label className=\"richtext-mb-[6px]\">\n          {t('editor.replace.dialog.text')}\n        </Label>\n\n        <div className=\"richtext-mb-[5px] richtext-flex richtext-w-full richtext-max-w-sm richtext-items-center richtext-gap-1.5\">\n          <div className=\"richtext-relative richtext-w-full richtext-max-w-sm richtext-items-center\">\n            <Input\n              className=\"richtext-w-80\"\n              onChange={e => setReplaceValue(e.target.value)}\n              placeholder=\"Text\"\n              required\n              type=\"text\"\n              value={replaceValue}\n            />\n          </div>\n        </div>\n\n        <div className=\"richtext-mb-[10px] richtext-flex richtext-items-center richtext-space-x-2\">\n          <Switch\n            checked={caseSensitive}\n            onCheckedChange={(e: any) => {\n              setCaseSensitive(e);\n              editor.commands.setCaseSensitive(e);\n            }}\n          />\n\n          <Label>\n            {t('editor.replace.caseSensitive')}\n          </Label>\n        </div>\n\n        <div className=\"richtext-flex richtext-items-center richtext-gap-[10px]\">\n          <Button className=\"richtext-flex-1\"\n            disabled={results.length === 0}\n            onClick={editor.commands.replace}\n          >\n            {t('editor.replace.dialog.text')}\n          </Button>\n\n          <Button className=\"richtext-flex-1\"\n            disabled={results.length === 0}\n            onClick={editor.commands.replaceAll}\n          >\n            {t('editor.replaceAll.dialog.text')}\n          </Button>\n        </div>\n      </PopoverContent>\n    </Popover>\n  );\n}\n\nexport default SearchAndReplaceButton;\n","/* eslint-disable @typescript-eslint/no-unused-expressions */\n/* eslint-disable @typescript-eslint/no-this-alias */\nimport { Extension } from '@tiptap/core';\nimport type { EditorState } from '@tiptap/pm/state';\nimport { Plugin, PluginKey } from '@tiptap/pm/state';\nimport { Decoration, DecorationSet } from '@tiptap/pm/view';\nimport scrollIntoView from 'scroll-into-view-if-needed';\n\nimport SearchAndReplaceButton from '@/extensions/SearchAndReplace/components/SearchAndReplaceButton';\nimport type { GeneralOptions } from '@/types';\nimport { dispatchEvent } from '@/utils/customEvents/customEvents';\nimport { EVENTS } from '@/utils/customEvents/events.constant';\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    search: {\n      setSearchTerm: (searchTerm: string) => ReturnType\n      setReplaceTerm: (replaceTerm: string) => ReturnType\n      replace: () => ReturnType\n      replaceAll: () => ReturnType\n      goToPrevSearchResult: () => void\n      goToNextSearchResult: () => void\n      setCaseSensitive: (caseSensitive: boolean) => ReturnType\n    }\n  }\n}\n\ninterface Result {\n  from: number\n  to: number\n}\n\ninterface TextNodesWithPosition {\n  text: string\n  pos: number\n}\n\nconst updateView = (state: EditorState, dispatch: any) => dispatch(state.tr);\n\nfunction regex(s: string, disableRegex: boolean, caseSensitive: boolean): RegExp {\n  return RegExp(disableRegex ? s.replace(/[$()*+./?[\\\\\\]^{|}-]/g, String.raw`\\$&`) : s, caseSensitive ? 'gu' : 'gui');\n}\n\nfunction processSearches(\n  doc: any,\n  searchTerm: RegExp,\n  searchResultClass: string,\n): { decorationsToReturn: any[], results: Result[] } {\n  const decorations: Decoration[] = [];\n  let textNodesWithPosition: TextNodesWithPosition[] = [];\n  const results: Result[] = [];\n\n  let index = 0;\n\n  if (!searchTerm)\n    return { decorationsToReturn: [], results: [] };\n\n  doc?.descendants((node: any, pos: any) => {\n    if (node.isText) {\n      if (textNodesWithPosition[index]) {\n        textNodesWithPosition[index] = {\n          text: textNodesWithPosition[index].text + node.text,\n          pos: textNodesWithPosition[index].pos,\n        };\n      } else {\n        textNodesWithPosition[index] = {\n          text: `${node.text}`,\n          pos,\n        };\n      }\n    } else {\n      index += 1;\n    }\n  });\n\n  textNodesWithPosition = textNodesWithPosition.filter(Boolean);\n\n  for (const { text, pos } of textNodesWithPosition) {\n\n    const matches = [...text.matchAll(searchTerm)];\n\n    for (const m of matches) {\n\n      if (m[0] === '')\n        break;\n\n      if (m.index !== undefined) {\n        results.push({\n          from: pos + m.index,\n          to: pos + m.index + m[0].length,\n        });\n      }\n    }\n  }\n\n  for (const r of results) {\n    decorations.push(Decoration.inline(r.from, r.to, { class: searchResultClass }));\n  }\n\n  return {\n    decorationsToReturn: decorations,\n    results,\n  };\n}\n\nfunction replace(replaceTerm: string, results: Result[], { state, dispatch }: any) {\n  const firstResult = results[0];\n\n  if (!firstResult)\n    return;\n\n  const { from, to } = results[0];\n\n  if (dispatch)\n    dispatch(state.tr.insertText(replaceTerm, from, to));\n}\n\nfunction rebaseNextResult(replaceTerm: string, index: number, lastOffset: number, results: Result[]): [number, Result[]] | null {\n  const nextIndex = index + 1;\n\n  if (!results[nextIndex])\n    return null;\n\n  const { from: currentFrom, to: currentTo } = results[index];\n\n  const offset = currentTo - currentFrom - replaceTerm.length + lastOffset;\n\n  const { from, to } = results[nextIndex];\n\n  results[nextIndex] = {\n    to: to - offset,\n    from: from - offset,\n  };\n\n  return [offset, results];\n}\n\nfunction replaceAll(replaceTerm: string, results: Result[], { tr, dispatch }: any) {\n  let offset = 0;\n\n  let ourResults = results.slice();\n\n  if (ourResults.length === 0)\n    return false;\n\n  for (let i = 0; i < ourResults.length; i += 1) {\n    const { from, to } = ourResults[i];\n\n    tr.insertText(replaceTerm, from, to);\n\n    const rebaseNextResultResponse = rebaseNextResult(replaceTerm, i, offset, ourResults);\n\n    if (rebaseNextResultResponse) {\n      offset = rebaseNextResultResponse[0];\n      ourResults = rebaseNextResultResponse[1];\n    }\n  }\n\n  dispatch(tr);\n\n  return true;\n}\n\nfunction gotoSearchResult({ view, tr, searchResults, searchResultCurrentClass, gotoIndex }: any) {\n  const result = searchResults[gotoIndex];\n\n  if (result) {\n    const transaction = tr.setMeta('directDecoration', {\n      fromPos: result.from,\n      toPos: result.to,\n      attrs: { class: searchResultCurrentClass },\n    });\n    view?.dispatch(transaction);\n\n    setTimeout(() => {\n      const el = window.document.querySelector(`.${searchResultCurrentClass}`);\n      if (el) {\n        scrollIntoView(el, { behavior: 'smooth', scrollMode: 'if-needed' });\n      }\n    }, 0);\n\n    return true;\n  }\n\n  return false;\n}\n\ninterface SearchOptions extends GeneralOptions<SearchOptions> {\n  searchTerm: string\n  replaceTerm: string\n  searchResultClass: string\n  searchResultCurrentClass: string\n  caseSensitive: boolean\n  disableRegex: boolean\n  onChange?: () => void\n}\n\ninterface SearchStorage {\n  results: Result[]\n  currentIndex: number\n}\n\nexport const SearchAndReplace = Extension.create<SearchOptions, SearchStorage>({\n  name: 'search',\n\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      searchTerm: '',\n      replaceTerm: '',\n      results: [],\n      currentIndex: 0,\n      searchResultClass: 'search-result',\n      searchResultCurrentClass: 'search-result-current',\n      caseSensitive: false,\n      disableRegex: false,\n      onChange: () => {\n        return;\n      },\n      button: ({ editor, t }: any) => ({\n        component: SearchAndReplaceButton,\n        componentProps: {\n          action: () => {\n            return;\n          },\n          icon: 'SearchAndReplace',\n          tooltip: t('editor.searchAndReplace.tooltip'),\n          isActive: () => false,\n          disabled: false,\n          editor,\n        },\n      }),\n    };\n  },\n\n  addStorage() {\n    return {\n      results: [],\n      currentIndex: -1,\n    };\n  },\n\n  addCommands() {\n    return {\n      setSearchTerm:\n        (searchTerm: string) =>\n          ({ state, dispatch }) => {\n            this.options.searchTerm = searchTerm;\n            this.storage.results = [];\n            this.storage.currentIndex = 0;\n            dispatchEvent(EVENTS.SEARCH_REPLCE);\n            updateView(state, dispatch);\n            return false;\n          },\n      setReplaceTerm:\n        (replaceTerm: string) =>\n          ({ state, dispatch }) => {\n            this.options.replaceTerm = replaceTerm;\n\n            updateView(state, dispatch);\n\n            return false;\n          },\n      setCaseSensitive: (caseSensitive: boolean) => ({ state, dispatch }) => {\n        this.options.caseSensitive = caseSensitive;\n        updateView(state, dispatch);\n        return false;\n      },\n      replace:\n        () =>\n          ({ state, dispatch }) => {\n            const { replaceTerm } = this.options;\n            const { currentIndex, results } = this.storage;\n            const currentResult = results[currentIndex];\n\n            if (currentResult) {\n              replace(replaceTerm, [currentResult], { state, dispatch });\n              this.storage.results.splice(currentIndex, 1);\n            } else {\n              replace(replaceTerm, results, { state, dispatch });\n              this.storage.results.shift();\n            }\n\n            dispatchEvent(EVENTS.SEARCH_REPLCE);\n\n            updateView(state, dispatch);\n\n            return false;\n          },\n      replaceAll:\n        () =>\n          ({ state, tr, dispatch }) => {\n            const { replaceTerm } = this.options;\n            const { results } = this.storage;\n\n            replaceAll(replaceTerm, results, { tr, dispatch });\n\n            this.storage.currentIndex = -1;\n            this.storage.results = [];\n            dispatchEvent(EVENTS.SEARCH_REPLCE);\n\n            updateView(state, dispatch);\n\n            return false;\n          },\n      goToPrevSearchResult:\n        () =>\n          ({ view, tr }: any) => {\n            const { searchResultCurrentClass } = this.options;\n            const { currentIndex, results } = this.storage;\n            const nextIndex = (currentIndex + results.length - 1) % results.length;\n            this.storage.currentIndex = nextIndex;\n            dispatchEvent(EVENTS.SEARCH_REPLCE);\n\n            return gotoSearchResult({\n              view,\n              tr,\n              searchResults: results,\n              searchResultCurrentClass,\n              gotoIndex: nextIndex,\n            });\n          },\n      goToNextSearchResult:\n        () =>\n          ({ view, tr }: any) => {\n            const { searchResultCurrentClass } = this.options;\n            const { currentIndex, results } = this.storage;\n            const nextIndex = (currentIndex + 1) % results.length;\n            this.storage.currentIndex = nextIndex;\n            this.options.onChange && this.options.onChange();\n            dispatchEvent(EVENTS.SEARCH_REPLCE);\n\n            return gotoSearchResult({\n              view,\n              tr,\n              searchResults: results,\n              searchResultCurrentClass,\n              gotoIndex: nextIndex,\n            });\n          },\n    };\n  },\n\n  addProseMirrorPlugins() {\n    const extensionThis = this;\n\n    return [\n      new Plugin({\n        key: new PluginKey('search'),\n        state: {\n          init() {\n            return DecorationSet.empty;\n          },\n          apply(ctx) {\n            const { doc, docChanged } = ctx;\n\n            const { searchTerm, searchResultClass, searchResultCurrentClass, disableRegex, caseSensitive }\n              = extensionThis.options;\n\n            if (docChanged || searchTerm) {\n              const { decorationsToReturn, results } = processSearches(\n                doc,\n                regex(searchTerm, disableRegex, caseSensitive),\n                searchResultClass,\n              );\n              extensionThis.storage.results = results;\n              if (extensionThis.storage.currentIndex > results.length - 1) {\n                extensionThis.storage.currentIndex = 0;\n              }\n              dispatchEvent(EVENTS.SEARCH_REPLCE);\n              if (ctx.getMeta('directDecoration')) {\n                const { fromPos, toPos, attrs } = ctx.getMeta('directDecoration');\n                decorationsToReturn.push(Decoration.inline(fromPos, toPos, attrs));\n              } else {\n                if (results.length > 0) {\n                  decorationsToReturn[0] = Decoration.inline(results[0].from, results[0].to, {\n                    class: searchResultCurrentClass,\n                  });\n                }\n              }\n\n              return DecorationSet.create(doc, decorationsToReturn);\n            }\n            return DecorationSet.empty;\n          },\n        },\n        props: {\n          decorations(state) {\n            return this.getState(state);\n          },\n        },\n      }),\n    ];\n  },\n});\n","'use client';\n\nimport {\n  type EmojiPickerListCategoryHeaderProps,\n  type EmojiPickerListEmojiProps,\n  type EmojiPickerListRowProps,\n  EmojiPicker as EmojiPickerPrimitive,\n} from 'frimousse';\nimport { LoaderIcon, SearchIcon } from 'lucide-react';\nimport type * as React from 'react';\n\nimport { cn } from '@/lib/utils';\n\nfunction EmojiPicker({\n  className,\n  ...props\n}: React.ComponentProps<typeof EmojiPickerPrimitive.Root>) {\n  return (\n    <EmojiPickerPrimitive.Root\n      className={cn(\n        'richtext-bg-popover richtext-text-popover-foreground richtext-isolate richtext-flex richtext-h-full richtext-w-fit richtext-flex-col richtext-overflow-hidden richtext-rounded-md',\n        className\n      )}\n      data-slot=\"emoji-picker\"\n      {...props}\n    />\n  );\n}\n\nfunction EmojiPickerSearch({\n  className,\n  ...props\n}: React.ComponentProps<typeof EmojiPickerPrimitive.Search>) {\n  return (\n    <div\n      className={cn('richtext-flex richtext-h-9 richtext-items-center richtext-gap-2 richtext-border-b richtext-px-3', className)}\n      data-slot=\"emoji-picker-search-wrapper\"\n    >\n      <SearchIcon className=\"richtext-size-4 richtext-shrink-0 richtext-opacity-50\" />\n      <EmojiPickerPrimitive.Search\n        className=\"richtext-outline-hidden placeholder:richtext-text-muted-foreground richtext-flex richtext-h-10 richtext-w-full richtext-rounded-md richtext-bg-transparent richtext-py-3 richtext-text-sm disabled:richtext-cursor-not-allowed disabled:richtext-opacity-50\"\n        data-slot=\"emoji-picker-search\"\n        {...props}\n      />\n    </div>\n  );\n}\n\nfunction EmojiPickerRow({ children, ...props }: EmojiPickerListRowProps) {\n  return (\n    <div {...props} className=\"richtext-scroll-my-1 richtext-px-1\" data-slot=\"emoji-picker-row\">\n      {children}\n    </div>\n  );\n}\n\nfunction EmojiPickerEmoji({\n  emoji,\n  className,\n  ...props\n}: EmojiPickerListEmojiProps) {\n  return (\n    <button\n      {...props}\n      className={cn(\n        'data-[active]:richtext-bg-accent richtext-flex richtext-size-7 richtext-items-center richtext-justify-center richtext-rounded-sm richtext-text-base',\n        className\n      )}\n      data-slot=\"emoji-picker-emoji\"\n    >\n      {emoji.emoji}\n    </button>\n  );\n}\n\nfunction EmojiPickerCategoryHeader({\n  category,\n  ...props\n}: EmojiPickerListCategoryHeaderProps) {\n  return (\n    <div\n      {...props}\n      className=\"richtext-bg-popover richtext-text-muted-foreground richtext-px-3 richtext-pb-2 richtext-pt-3.5 richtext-text-xs richtext-leading-none\"\n      data-slot=\"emoji-picker-category-header\"\n    >\n      {category.label}\n    </div>\n  );\n}\n\nfunction EmojiPickerContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof EmojiPickerPrimitive.Viewport>) {\n  return (\n    <EmojiPickerPrimitive.Viewport\n      className={cn('richtext-outline-hidden richtext-relative richtext-flex-1', className)}\n      data-slot=\"emoji-picker-viewport\"\n      {...props}\n    >\n      <EmojiPickerPrimitive.Loading\n        className=\"richtext-absolute richtext-inset-0 richtext-flex richtext-items-center richtext-justify-center richtext-text-muted-foreground\"\n        data-slot=\"emoji-picker-loading\"\n      >\n        <LoaderIcon className=\"richtext-size-4 richtext-animate-spin\" />\n      </EmojiPickerPrimitive.Loading>\n      <EmojiPickerPrimitive.Empty\n        className=\"richtext-absolute richtext-inset-0 richtext-flex richtext-items-center richtext-justify-center richtext-text-muted-foreground richtext-text-sm\"\n        data-slot=\"emoji-picker-empty\"\n      >\n        No emoji found.\n      </EmojiPickerPrimitive.Empty>\n      <EmojiPickerPrimitive.List\n        className=\"richtext-select-none richtext-pb-1\"\n        components={{\n          Row: EmojiPickerRow,\n          Emoji: EmojiPickerEmoji,\n          CategoryHeader: EmojiPickerCategoryHeader,\n        }}\n        data-slot=\"emoji-picker-list\"\n      />\n    </EmojiPickerPrimitive.Viewport>\n  );\n}\n\nfunction EmojiPickerFooter({\n  className,\n  ...props\n}: React.ComponentProps<'div'>) {\n  return (\n    <div\n      className={cn(\n        'richtext-max-w-(--frimousse-viewport-width) richtext-flex richtext-w-full richtext-min-w-0 richtext-items-center richtext-gap-1 richtext-border-t richtext-p-2',\n        className\n      )}\n      data-slot=\"emoji-picker-footer\"\n      {...props}\n    >\n      <EmojiPickerPrimitive.ActiveEmoji>\n        {({ emoji }) =>\n          emoji ? (\n            <>\n              <div className=\"richtext-flex richtext-size-7 richtext-flex-none richtext-items-center richtext-justify-center richtext-text-lg\">\n                {emoji.emoji}\n              </div>\n              <span className=\"richtext-text-secondary-foreground richtext-truncate richtext-text-xs\">\n                {emoji.label}\n              </span>\n            </>\n          ) : (\n            <span className=\"richtext-text-muted-foreground richtext-ml-1.5 richtext-flex richtext-h-7 richtext-items-center richtext-truncate richtext-text-xs\">\n              Select an emoji…\n            </span>\n          )\n        }\n      </EmojiPickerPrimitive.ActiveEmoji>\n    </div>\n  );\n}\n\nexport {\n  EmojiPicker,\n  EmojiPickerSearch,\n  EmojiPickerContent,\n  EmojiPickerFooter,\n};","import type React from 'react';\nimport { useCallback } from 'react';\n\nimport { ActionButton, Popover, PopoverContent, PopoverTrigger } from '@/components';\nimport { EmojiPicker, EmojiPickerContent, EmojiPickerFooter, EmojiPickerSearch } from '@/components/ui/emoji-picker';\n\ninterface IProps {\n  showClear?: boolean\n  onSelectEmoji: (arg: string) => void\n  children: React.ReactNode\n}\n\nfunction EmojiPickerWrap({ onSelectEmoji, children }: IProps) {\n\n  return (\n    <Popover modal>\n      <PopoverTrigger asChild>\n        {children}\n      </PopoverTrigger>\n\n      <PopoverContent align=\"start\"\n        className=\"richtext-size-full richtext-p-2\"\n        hideWhenDetached\n        side=\"bottom\"\n      >\n        <EmojiPicker\n          className=\"!richtext-h-[342px]\"\n          onEmojiSelect={({ emoji }) => {\n            onSelectEmoji(emoji);\n          }}\n        >\n          <EmojiPickerSearch />\n          <EmojiPickerContent />\n          <EmojiPickerFooter />\n        </EmojiPicker>\n      </PopoverContent>\n    </Popover>\n  );\n}\n\nexport function EmojiPickerComponent({ editor, icon, ...props }: any) {\n  const setEmoji = useCallback(\n    (emoji: any) => {\n      const { selection } = editor.state;\n      const { $anchor } = selection;\n      return editor.chain().insertContentAt($anchor.pos, emoji).run();\n    },\n    [editor],\n  );\n\n  return (\n    <EmojiPickerWrap onSelectEmoji={setEmoji}>\n      <ActionButton\n        icon={icon}\n        tooltip={props?.tooltip}\n      />\n    </EmojiPickerWrap>\n  );\n}\n\nexport default EmojiPickerComponent;\n","/* eslint-disable @typescript-eslint/no-unused-expressions */\n/* eslint-disable @typescript-eslint/no-unsafe-argument */\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\n\nimport clsx from 'clsx';\nimport scrollIntoView from 'scroll-into-view-if-needed';\n\nimport { useLocale } from '@/locales';\n\ninterface IProps {\n  items: Array<{ name: string, emoji: string, fallbackImage?: string }>\n  command: any\n}\n\nexport const EmojiList: React.FC<IProps> = forwardRef((props, ref) => {\n  const $container: any = useRef<HTMLDivElement>(null);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const { t } = useLocale();\n\n  const selectItem = (index: any) => {\n    const item = props.items[index];\n\n    if (item) {\n      props.command(item);\n    }\n  };\n\n  const upHandler = () => {\n    setSelectedIndex((selectedIndex + props.items.length - 1) % props.items.length);\n  };\n\n  const downHandler = () => {\n    setSelectedIndex((selectedIndex + 1) % props.items.length);\n  };\n\n  const enterHandler = () => {\n    selectItem(selectedIndex);\n  };\n\n  useEffect(() => setSelectedIndex(0), [props.items]);\n\n  useEffect(() => {\n    if (Number.isNaN(selectedIndex + 1))\n      return;\n    const el = $container.current.querySelector(`span:nth-of-type(${selectedIndex + 1})`);\n    el && scrollIntoView(el, { behavior: 'smooth', scrollMode: 'if-needed' });\n  }, [selectedIndex]);\n\n  useImperativeHandle(ref, () => ({\n    onKeyDown: ({ event }: any) => {\n      if (event.key === 'ArrowUp') {\n        upHandler();\n        return true;\n      }\n\n      if (event.key === 'ArrowDown') {\n        downHandler();\n        return true;\n      }\n\n      if (event.key === 'Enter') {\n        enterHandler();\n        return true;\n      }\n\n      return false;\n    },\n  }));\n\n  return (\n    <div className=\"richtext-max-h-[320px] richtext-w-[200px] richtext-overflow-y-auto richtext-overflow-x-hidden richtext-rounded-sm !richtext-border richtext-bg-popover richtext-p-1 richtext-text-popover-foreground richtext-shadow-md richtext-outline-none\">\n      <div ref={$container}>\n        {props.items.length > 0\n          ? (\n            props.items.map((item, index) => (\n              <span\n                className={clsx(' richtext-relative richtext-flex  richtext-cursor-default richtext-select-none richtext-items-center richtext-rounded-sm richtext-px-2 richtext-py-1.5 richtext-text-sm richtext-outline-none richtext-transition-colors hover:richtext-bg-accent focus:richtext-bg-accent  focus:richtext-text-accent-foreground', index === selectedIndex ? 'bg-accent' : '')}\n                key={`emoji-list-code-${index}`}\n                onClick={() => selectItem(index)}\n              >\n                {item.fallbackImage ? <img className=\"richtext-size-[1em]\"\n                  src={item.fallbackImage}\n                /> : item.emoji}\n                :\n\n                {item.name}\n                :\n              </span>\n            ))\n          )\n          : (\n            <div className=\"richtext-relative richtext-flex  richtext-cursor-default richtext-select-none richtext-items-center richtext-rounded-sm richtext-px-2 richtext-py-1.5 richtext-text-sm richtext-outline-none richtext-transition-colors\">\n              <span>\n                {t('no_result_found')}\n              </span>\n            </div>\n          )}\n      </div>\n    </div>\n  );\n});\n\nEmojiList.displayName = 'EmojiList';\n","export const namesToEmoji = {\n  '100': '💯',\n  '1234': '🔢',\n  'grinning': '😀',\n  'smiley': '😃',\n  'smile': '😄',\n  'grin': '😁',\n  'laughing': '😆',\n  'satisfied': '😆',\n  'sweat_smile': '😅',\n  'rofl': '🤣',\n  'joy': '😂',\n  'slightly_smiling_face': '🙂',\n  'upside_down_face': '🙃',\n  'wink': '😉',\n  'blush': '😊',\n  'innocent': '😇',\n  'smiling_face_with_three_hearts': '🥰',\n  'heart_eyes': '😍',\n  'star_struck': '🤩',\n  'kissing_heart': '😘',\n  'kissing': '😗',\n  'relaxed': '☺️',\n  'kissing_closed_eyes': '😚',\n  'kissing_smiling_eyes': '😙',\n  'smiling_face_with_tear': '🥲',\n  'yum': '😋',\n  'stuck_out_tongue': '😛',\n  'stuck_out_tongue_winking_eye': '😜',\n  'zany_face': '🤪',\n  'stuck_out_tongue_closed_eyes': '😝',\n  'money_mouth_face': '🤑',\n  'hugs': '🤗',\n  'hand_over_mouth': '🤭',\n  'shushing_face': '🤫',\n  'thinking': '🤔',\n  'zipper_mouth_face': '🤐',\n  'raised_eyebrow': '🤨',\n  'neutral_face': '😐',\n  'expressionless': '😑',\n  'no_mouth': '😶',\n  'smirk': '😏',\n  'unamused': '😒',\n  'roll_eyes': '🙄',\n  'grimacing': '😬',\n  'lying_face': '🤥',\n  'relieved': '😌',\n  'pensive': '😔',\n  'sleepy': '😪',\n  'drooling_face': '🤤',\n  'sleeping': '😴',\n  'mask': '😷',\n  'face_with_thermometer': '🤒',\n  'face_with_head_bandage': '🤕',\n  'nauseated_face': '🤢',\n  'vomiting_face': '🤮',\n  'sneezing_face': '🤧',\n  'hot_face': '🥵',\n  'cold_face': '🥶',\n  'woozy_face': '🥴',\n  'dizzy_face': '😵',\n  'exploding_head': '🤯',\n  'cowboy_hat_face': '🤠',\n  'partying_face': '🥳',\n  'disguised_face': '🥸',\n  'sunglasses': '😎',\n  'nerd_face': '🤓',\n  'monocle_face': '🧐',\n  'confused': '😕',\n  'worried': '😟',\n  'slightly_frowning_face': '🙁',\n  'frowning_face': '☹️',\n  'open_mouth': '😮',\n  'hushed': '😯',\n  'astonished': '😲',\n  'flushed': '😳',\n  'pleading_face': '🥺',\n  'frowning': '😦',\n  'anguished': '😧',\n  'fearful': '😨',\n  'cold_sweat': '😰',\n  'disappointed_relieved': '😥',\n  'cry': '😢',\n  'sob': '😭',\n  'scream': '😱',\n  'confounded': '😖',\n  'persevere': '😣',\n  'disappointed': '😞',\n  'sweat': '😓',\n  'weary': '😩',\n  'tired_face': '😫',\n  'yawning_face': '🥱',\n  'triumph': '😤',\n  'rage': '😡',\n  'pout': '😡',\n  'angry': '😠',\n  'cursing_face': '🤬',\n  'smiling_imp': '😈',\n  'imp': '👿',\n  'skull': '💀',\n  'skull_and_crossbones': '☠️',\n  'hankey': '💩',\n  'poop': '💩',\n  'shit': '💩',\n  'clown_face': '🤡',\n  'japanese_ogre': '👹',\n  'japanese_goblin': '👺',\n  'ghost': '👻',\n  'alien': '👽',\n  'space_invader': '👾',\n  'robot': '🤖',\n  'smiley_cat': '😺',\n  'smile_cat': '😸',\n  'joy_cat': '😹',\n  'heart_eyes_cat': '😻',\n  'smirk_cat': '😼',\n  'kissing_cat': '😽',\n  'scream_cat': '🙀',\n  'crying_cat_face': '😿',\n  'pouting_cat': '😾',\n  'see_no_evil': '🙈',\n  'hear_no_evil': '🙉',\n  'speak_no_evil': '🙊',\n  'kiss': '💋',\n  'love_letter': '💌',\n  'cupid': '💘',\n  'gift_heart': '💝',\n  'sparkling_heart': '💖',\n  'heartpulse': '💗',\n  'heartbeat': '💓',\n  'revolving_hearts': '💞',\n  'two_hearts': '💕',\n  'heart_decoration': '💟',\n  'heavy_heart_exclamation': '❣️',\n  'broken_heart': '💔',\n  'heart': '❤️',\n  'orange_heart': '🧡',\n  'yellow_heart': '💛',\n  'green_heart': '💚',\n  'blue_heart': '💙',\n  'purple_heart': '💜',\n  'brown_heart': '🤎',\n  'black_heart': '🖤',\n  'white_heart': '🤍',\n  'anger': '💢',\n  'boom': '💥',\n  'collision': '💥',\n  'dizzy': '💫',\n  'sweat_drops': '💦',\n  'dash': '💨',\n  'hole': '🕳️',\n  'bomb': '💣',\n  'speech_balloon': '💬',\n  'eye_speech_bubble': '👁️‍🗨️',\n  'left_speech_bubble': '🗨️',\n  'right_anger_bubble': '🗯️',\n  'thought_balloon': '💭',\n  'zzz': '💤',\n  'wave': '👋',\n  'raised_back_of_hand': '🤚',\n  'raised_hand_with_fingers_splayed': '🖐️',\n  'hand': '✋',\n  'raised_hand': '✋',\n  'vulcan_salute': '🖖',\n  'ok_hand': '👌',\n  'pinched_fingers': '🤌',\n  'pinching_hand': '🤏',\n  'v': '✌️',\n  'crossed_fingers': '🤞',\n  'love_you_gesture': '🤟',\n  'metal': '🤘',\n  'call_me_hand': '🤙',\n  'point_left': '👈',\n  'point_right': '👉',\n  'point_up_2': '👆',\n  'middle_finger': '🖕',\n  'fu': '🖕',\n  'point_down': '👇',\n  'point_up': '☝️',\n  '+1': '👍',\n  'thumbsup': '👍',\n  '-1': '👎',\n  'thumbsdown': '👎',\n  'fist_raised': '✊',\n  'fist': '✊',\n  'fist_oncoming': '👊',\n  'facepunch': '👊',\n  'punch': '👊',\n  'fist_left': '🤛',\n  'fist_right': '🤜',\n  'clap': '👏',\n  'raised_hands': '🙌',\n  'open_hands': '👐',\n  'palms_up_together': '🤲',\n  'handshake': '🤝',\n  'pray': '🙏',\n  'writing_hand': '✍️',\n  'nail_care': '💅',\n  'selfie': '🤳',\n  'muscle': '💪',\n  'mechanical_arm': '🦾',\n  'mechanical_leg': '🦿',\n  'leg': '🦵',\n  'foot': '🦶',\n  'ear': '👂',\n  'ear_with_hearing_aid': '🦻',\n  'nose': '👃',\n  'brain': '🧠',\n  'anatomical_heart': '🫀',\n  'lungs': '🫁',\n  'tooth': '🦷',\n  'bone': '🦴',\n  'eyes': '👀',\n  'eye': '👁️',\n  'tongue': '👅',\n  'lips': '👄',\n  'baby': '👶',\n  'child': '🧒',\n  'boy': '👦',\n  'girl': '👧',\n  'adult': '🧑',\n  'blond_haired_person': '👱',\n  'man': '👨',\n  'bearded_person': '🧔',\n  'red_haired_man': '👨‍🦰',\n  'curly_haired_man': '👨‍🦱',\n  'white_haired_man': '👨‍🦳',\n  'bald_man': '👨‍🦲',\n  'woman': '👩',\n  'red_haired_woman': '👩‍🦰',\n  'person_red_hair': '🧑‍🦰',\n  'curly_haired_woman': '👩‍🦱',\n  'person_curly_hair': '🧑‍🦱',\n  'white_haired_woman': '👩‍🦳',\n  'person_white_hair': '🧑‍🦳',\n  'bald_woman': '👩‍🦲',\n  'person_bald': '🧑‍🦲',\n  'blond_haired_woman': '👱‍♀️',\n  'blonde_woman': '👱‍♀️',\n  'blond_haired_man': '👱‍♂️',\n  'older_adult': '🧓',\n  'older_man': '👴',\n  'older_woman': '👵',\n  'frowning_person': '🙍',\n  'frowning_man': '🙍‍♂️',\n  'frowning_woman': '🙍‍♀️',\n  'pouting_face': '🙎',\n  'pouting_man': '🙎‍♂️',\n  'pouting_woman': '🙎‍♀️',\n  'no_good': '🙅',\n  'no_good_man': '🙅‍♂️',\n  'ng_man': '🙅‍♂️',\n  'no_good_woman': '🙅‍♀️',\n  'ng_woman': '🙅‍♀️',\n  'ok_person': '🙆',\n  'ok_man': '🙆‍♂️',\n  'ok_woman': '🙆‍♀️',\n  'tipping_hand_person': '💁',\n  'information_desk_person': '💁',\n  'tipping_hand_man': '💁‍♂️',\n  'sassy_man': '💁‍♂️',\n  'tipping_hand_woman': '💁‍♀️',\n  'sassy_woman': '💁‍♀️',\n  'raising_hand': '🙋',\n  'raising_hand_man': '🙋‍♂️',\n  'raising_hand_woman': '🙋‍♀️',\n  'deaf_person': '🧏',\n  'deaf_man': '🧏‍♂️',\n  'deaf_woman': '🧏‍♀️',\n  'bow': '🙇',\n  'bowing_man': '🙇‍♂️',\n  'bowing_woman': '🙇‍♀️',\n  'facepalm': '🤦',\n  'man_facepalming': '🤦‍♂️',\n  'woman_facepalming': '🤦‍♀️',\n  'shrug': '🤷',\n  'man_shrugging': '🤷‍♂️',\n  'woman_shrugging': '🤷‍♀️',\n  'health_worker': '🧑‍⚕️',\n  'man_health_worker': '👨‍⚕️',\n  'woman_health_worker': '👩‍⚕️',\n  'student': '🧑‍🎓',\n  'man_student': '👨‍🎓',\n  'woman_student': '👩‍🎓',\n  'teacher': '🧑‍🏫',\n  'man_teacher': '👨‍🏫',\n  'woman_teacher': '👩‍🏫',\n  'judge': '🧑‍⚖️',\n  'man_judge': '👨‍⚖️',\n  'woman_judge': '👩‍⚖️',\n  'farmer': '🧑‍🌾',\n  'man_farmer': '👨‍🌾',\n  'woman_farmer': '👩‍🌾',\n  'cook': '🧑‍🍳',\n  'man_cook': '👨‍🍳',\n  'woman_cook': '👩‍🍳',\n  'mechanic': '🧑‍🔧',\n  'man_mechanic': '👨‍🔧',\n  'woman_mechanic': '👩‍🔧',\n  'factory_worker': '🧑‍🏭',\n  'man_factory_worker': '👨‍🏭',\n  'woman_factory_worker': '👩‍🏭',\n  'office_worker': '🧑‍💼',\n  'man_office_worker': '👨‍💼',\n  'woman_office_worker': '👩‍💼',\n  'scientist': '🧑‍🔬',\n  'man_scientist': '👨‍🔬',\n  'woman_scientist': '👩‍🔬',\n  'technologist': '🧑‍💻',\n  'man_technologist': '👨‍💻',\n  'woman_technologist': '👩‍💻',\n  'singer': '🧑‍🎤',\n  'man_singer': '👨‍🎤',\n  'woman_singer': '👩‍🎤',\n  'artist': '🧑‍🎨',\n  'man_artist': '👨‍🎨',\n  'woman_artist': '👩‍🎨',\n  'pilot': '🧑‍✈️',\n  'man_pilot': '👨‍✈️',\n  'woman_pilot': '👩‍✈️',\n  'astronaut': '🧑‍🚀',\n  'man_astronaut': '👨‍🚀',\n  'woman_astronaut': '👩‍🚀',\n  'firefighter': '🧑‍🚒',\n  'man_firefighter': '👨‍🚒',\n  'woman_firefighter': '👩‍🚒',\n  'police_officer': '👮',\n  'cop': '👮',\n  'policeman': '👮‍♂️',\n  'policewoman': '👮‍♀️',\n  'detective': '🕵️',\n  'male_detective': '🕵️‍♂️',\n  'female_detective': '🕵️‍♀️',\n  'guard': '💂',\n  'guardsman': '💂‍♂️',\n  'guardswoman': '💂‍♀️',\n  'ninja': '🥷',\n  'construction_worker': '👷',\n  'construction_worker_man': '👷‍♂️',\n  'construction_worker_woman': '👷‍♀️',\n  'prince': '🤴',\n  'princess': '👸',\n  'person_with_turban': '👳',\n  'man_with_turban': '👳‍♂️',\n  'woman_with_turban': '👳‍♀️',\n  'man_with_gua_pi_mao': '👲',\n  'woman_with_headscarf': '🧕',\n  'person_in_tuxedo': '🤵',\n  'man_in_tuxedo': '🤵‍♂️',\n  'woman_in_tuxedo': '🤵‍♀️',\n  'person_with_veil': '👰',\n  'man_with_veil': '👰‍♂️',\n  'woman_with_veil': '👰‍♀️',\n  'bride_with_veil': '👰‍♀️',\n  'pregnant_woman': '🤰',\n  'breast_feeding': '🤱',\n  'woman_feeding_baby': '👩‍🍼',\n  'man_feeding_baby': '👨‍🍼',\n  'person_feeding_baby': '🧑‍🍼',\n  'angel': '👼',\n  'santa': '🎅',\n  'mrs_claus': '🤶',\n  'mx_claus': '🧑‍🎄',\n  'superhero': '🦸',\n  'superhero_man': '🦸‍♂️',\n  'superhero_woman': '🦸‍♀️',\n  'supervillain': '🦹',\n  'supervillain_man': '🦹‍♂️',\n  'supervillain_woman': '🦹‍♀️',\n  'mage': '🧙',\n  'mage_man': '🧙‍♂️',\n  'mage_woman': '🧙‍♀️',\n  'fairy': '🧚',\n  'fairy_man': '🧚‍♂️',\n  'fairy_woman': '🧚‍♀️',\n  'vampire': '🧛',\n  'vampire_man': '🧛‍♂️',\n  'vampire_woman': '🧛‍♀️',\n  'merperson': '🧜',\n  'merman': '🧜‍♂️',\n  'mermaid': '🧜‍♀️',\n  'elf': '🧝',\n  'elf_man': '🧝‍♂️',\n  'elf_woman': '🧝‍♀️',\n  'genie': '🧞',\n  'genie_man': '🧞‍♂️',\n  'genie_woman': '🧞‍♀️',\n  'zombie': '🧟',\n  'zombie_man': '🧟‍♂️',\n  'zombie_woman': '🧟‍♀️',\n  'massage': '💆',\n  'massage_man': '💆‍♂️',\n  'massage_woman': '💆‍♀️',\n  'haircut': '💇',\n  'haircut_man': '💇‍♂️',\n  'haircut_woman': '💇‍♀️',\n  'walking': '🚶',\n  'walking_man': '🚶‍♂️',\n  'walking_woman': '🚶‍♀️',\n  'standing_person': '🧍',\n  'standing_man': '🧍‍♂️',\n  'standing_woman': '🧍‍♀️',\n  'kneeling_person': '🧎',\n  'kneeling_man': '🧎‍♂️',\n  'kneeling_woman': '🧎‍♀️',\n  'person_with_probing_cane': '🧑‍🦯',\n  'man_with_probing_cane': '👨‍🦯',\n  'woman_with_probing_cane': '👩‍🦯',\n  'person_in_motorized_wheelchair': '🧑‍🦼',\n  'man_in_motorized_wheelchair': '👨‍🦼',\n  'woman_in_motorized_wheelchair': '👩‍🦼',\n  'person_in_manual_wheelchair': '🧑‍🦽',\n  'man_in_manual_wheelchair': '👨‍🦽',\n  'woman_in_manual_wheelchair': '👩‍🦽',\n  'runner': '🏃',\n  'running': '🏃',\n  'running_man': '🏃‍♂️',\n  'running_woman': '🏃‍♀️',\n  'woman_dancing': '💃',\n  'dancer': '💃',\n  'man_dancing': '🕺',\n  'business_suit_levitating': '🕴️',\n  'dancers': '👯',\n  'dancing_men': '👯‍♂️',\n  'dancing_women': '👯‍♀️',\n  'sauna_person': '🧖',\n  'sauna_man': '🧖‍♂️',\n  'sauna_woman': '🧖‍♀️',\n  'climbing': '🧗',\n  'climbing_man': '🧗‍♂️',\n  'climbing_woman': '🧗‍♀️',\n  'person_fencing': '🤺',\n  'horse_racing': '🏇',\n  'skier': '⛷️',\n  'snowboarder': '🏂',\n  'golfing': '🏌️',\n  'golfing_man': '🏌️‍♂️',\n  'golfing_woman': '🏌️‍♀️',\n  'surfer': '🏄',\n  'surfing_man': '🏄‍♂️',\n  'surfing_woman': '🏄‍♀️',\n  'rowboat': '🚣',\n  'rowing_man': '🚣‍♂️',\n  'rowing_woman': '🚣‍♀️',\n  'swimmer': '🏊',\n  'swimming_man': '🏊‍♂️',\n  'swimming_woman': '🏊‍♀️',\n  'bouncing_ball_person': '⛹️',\n  'bouncing_ball_man': '⛹️‍♂️',\n  'basketball_man': '⛹️‍♂️',\n  'bouncing_ball_woman': '⛹️‍♀️',\n  'basketball_woman': '⛹️‍♀️',\n  'weight_lifting': '🏋️',\n  'weight_lifting_man': '🏋️‍♂️',\n  'weight_lifting_woman': '🏋️‍♀️',\n  'bicyclist': '🚴',\n  'biking_man': '🚴‍♂️',\n  'biking_woman': '🚴‍♀️',\n  'mountain_bicyclist': '🚵',\n  'mountain_biking_man': '🚵‍♂️',\n  'mountain_biking_woman': '🚵‍♀️',\n  'cartwheeling': '🤸',\n  'man_cartwheeling': '🤸‍♂️',\n  'woman_cartwheeling': '🤸‍♀️',\n  'wrestling': '🤼',\n  'men_wrestling': '🤼‍♂️',\n  'women_wrestling': '🤼‍♀️',\n  'water_polo': '🤽',\n  'man_playing_water_polo': '🤽‍♂️',\n  'woman_playing_water_polo': '🤽‍♀️',\n  'handball_person': '🤾',\n  'man_playing_handball': '🤾‍♂️',\n  'woman_playing_handball': '🤾‍♀️',\n  'juggling_person': '🤹',\n  'man_juggling': '🤹‍♂️',\n  'woman_juggling': '🤹‍♀️',\n  'lotus_position': '🧘',\n  'lotus_position_man': '🧘‍♂️',\n  'lotus_position_woman': '🧘‍♀️',\n  'bath': '🛀',\n  'sleeping_bed': '🛌',\n  'people_holding_hands': '🧑‍🤝‍🧑',\n  'two_women_holding_hands': '👭',\n  'couple': '👫',\n  'two_men_holding_hands': '👬',\n  'couplekiss': '💏',\n  'couplekiss_man_woman': '👩‍❤️‍💋‍👨',\n  'couplekiss_man_man': '👨‍❤️‍💋‍👨',\n  'couplekiss_woman_woman': '👩‍❤️‍💋‍👩',\n  'couple_with_heart': '💑',\n  'couple_with_heart_woman_man': '👩‍❤️‍👨',\n  'couple_with_heart_man_man': '👨‍❤️‍👨',\n  'couple_with_heart_woman_woman': '👩‍❤️‍👩',\n  'family': '👪',\n  'family_man_woman_boy': '👨‍👩‍👦',\n  'family_man_woman_girl': '👨‍👩‍👧',\n  'family_man_woman_girl_boy': '👨‍👩‍👧‍👦',\n  'family_man_woman_boy_boy': '👨‍👩‍👦‍👦',\n  'family_man_woman_girl_girl': '👨‍👩‍👧‍👧',\n  'family_man_man_boy': '👨‍👨‍👦',\n  'family_man_man_girl': '👨‍👨‍👧',\n  'family_man_man_girl_boy': '👨‍👨‍👧‍👦',\n  'family_man_man_boy_boy': '👨‍👨‍👦‍👦',\n  'family_man_man_girl_girl': '👨‍👨‍👧‍👧',\n  'family_woman_woman_boy': '👩‍👩‍👦',\n  'family_woman_woman_girl': '👩‍👩‍👧',\n  'family_woman_woman_girl_boy': '👩‍👩‍👧‍👦',\n  'family_woman_woman_boy_boy': '👩‍👩‍👦‍👦',\n  'family_woman_woman_girl_girl': '👩‍👩‍👧‍👧',\n  'family_man_boy': '👨‍👦',\n  'family_man_boy_boy': '👨‍👦‍👦',\n  'family_man_girl': '👨‍👧',\n  'family_man_girl_boy': '👨‍👧‍👦',\n  'family_man_girl_girl': '👨‍👧‍👧',\n  'family_woman_boy': '👩‍👦',\n  'family_woman_boy_boy': '👩‍👦‍👦',\n  'family_woman_girl': '👩‍👧',\n  'family_woman_girl_boy': '👩‍👧‍👦',\n  'family_woman_girl_girl': '👩‍👧‍👧',\n  'speaking_head': '🗣️',\n  'bust_in_silhouette': '👤',\n  'busts_in_silhouette': '👥',\n  'people_hugging': '🫂',\n  'footprints': '👣',\n  'monkey_face': '🐵',\n  'monkey': '🐒',\n  'gorilla': '🦍',\n  'orangutan': '🦧',\n  'dog': '🐶',\n  'dog2': '🐕',\n  'guide_dog': '🦮',\n  'service_dog': '🐕‍🦺',\n  'poodle': '🐩',\n  'wolf': '🐺',\n  'fox_face': '🦊',\n  'raccoon': '🦝',\n  'cat': '🐱',\n  'cat2': '🐈',\n  'black_cat': '🐈‍⬛',\n  'lion': '🦁',\n  'tiger': '🐯',\n  'tiger2': '🐅',\n  'leopard': '🐆',\n  'horse': '🐴',\n  'racehorse': '🐎',\n  'unicorn': '🦄',\n  'zebra': '🦓',\n  'deer': '🦌',\n  'bison': '🦬',\n  'cow': '🐮',\n  'ox': '🐂',\n  'water_buffalo': '🐃',\n  'cow2': '🐄',\n  'pig': '🐷',\n  'pig2': '🐖',\n  'boar': '🐗',\n  'pig_nose': '🐽',\n  'ram': '🐏',\n  'sheep': '🐑',\n  'goat': '🐐',\n  'dromedary_camel': '🐪',\n  'camel': '🐫',\n  'llama': '🦙',\n  'giraffe': '🦒',\n  'elephant': '🐘',\n  'mammoth': '🦣',\n  'rhinoceros': '🦏',\n  'hippopotamus': '🦛',\n  'mouse': '🐭',\n  'mouse2': '🐁',\n  'rat': '🐀',\n  'hamster': '🐹',\n  'rabbit': '🐰',\n  'rabbit2': '🐇',\n  'chipmunk': '🐿️',\n  'beaver': '🦫',\n  'hedgehog': '🦔',\n  'bat': '🦇',\n  'bear': '🐻',\n  'polar_bear': '🐻‍❄️',\n  'koala': '🐨',\n  'panda_face': '🐼',\n  'sloth': '🦥',\n  'otter': '🦦',\n  'skunk': '🦨',\n  'kangaroo': '🦘',\n  'badger': '🦡',\n  'feet': '🐾',\n  'paw_prints': '🐾',\n  'turkey': '🦃',\n  'chicken': '🐔',\n  'rooster': '🐓',\n  'hatching_chick': '🐣',\n  'baby_chick': '🐤',\n  'hatched_chick': '🐥',\n  'bird': '🐦',\n  'penguin': '🐧',\n  'dove': '🕊️',\n  'eagle': '🦅',\n  'duck': '🦆',\n  'swan': '🦢',\n  'owl': '🦉',\n  'dodo': '🦤',\n  'feather': '🪶',\n  'flamingo': '🦩',\n  'peacock': '🦚',\n  'parrot': '🦜',\n  'frog': '🐸',\n  'crocodile': '🐊',\n  'turtle': '🐢',\n  'lizard': '🦎',\n  'snake': '🐍',\n  'dragon_face': '🐲',\n  'dragon': '🐉',\n  'sauropod': '🦕',\n  't-rex': '🦖',\n  'whale': '🐳',\n  'whale2': '🐋',\n  'dolphin': '🐬',\n  'flipper': '🐬',\n  'seal': '🦭',\n  'fish': '🐟',\n  'tropical_fish': '🐠',\n  'blowfish': '🐡',\n  'shark': '🦈',\n  'octopus': '🐙',\n  'shell': '🐚',\n  'snail': '🐌',\n  'butterfly': '🦋',\n  'bug': '🐛',\n  'ant': '🐜',\n  'bee': '🐝',\n  'honeybee': '🐝',\n  'beetle': '🪲',\n  'lady_beetle': '🐞',\n  'cricket': '🦗',\n  'cockroach': '🪳',\n  'spider': '🕷️',\n  'spider_web': '🕸️',\n  'scorpion': '🦂',\n  'mosquito': '🦟',\n  'fly': '🪰',\n  'worm': '🪱',\n  'microbe': '🦠',\n  'bouquet': '💐',\n  'cherry_blossom': '🌸',\n  'white_flower': '💮',\n  'rosette': '🏵️',\n  'rose': '🌹',\n  'wilted_flower': '🥀',\n  'hibiscus': '🌺',\n  'sunflower': '🌻',\n  'blossom': '🌼',\n  'tulip': '🌷',\n  'seedling': '🌱',\n  'potted_plant': '🪴',\n  'evergreen_tree': '🌲',\n  'deciduous_tree': '🌳',\n  'palm_tree': '🌴',\n  'cactus': '🌵',\n  'ear_of_rice': '🌾',\n  'herb': '🌿',\n  'shamrock': '☘️',\n  'four_leaf_clover': '🍀',\n  'maple_leaf': '🍁',\n  'fallen_leaf': '🍂',\n  'leaves': '🍃',\n  'grapes': '🍇',\n  'melon': '🍈',\n  'watermelon': '🍉',\n  'tangerine': '🍊',\n  'orange': '🍊',\n  'mandarin': '🍊',\n  'lemon': '🍋',\n  'banana': '🍌',\n  'pineapple': '🍍',\n  'mango': '🥭',\n  'apple': '🍎',\n  'green_apple': '🍏',\n  'pear': '🍐',\n  'peach': '🍑',\n  'cherries': '🍒',\n  'strawberry': '🍓',\n  'blueberries': '🫐',\n  'kiwi_fruit': '🥝',\n  'tomato': '🍅',\n  'olive': '🫒',\n  'coconut': '🥥',\n  'avocado': '🥑',\n  'eggplant': '🍆',\n  'potato': '🥔',\n  'carrot': '🥕',\n  'corn': '🌽',\n  'hot_pepper': '🌶️',\n  'bell_pepper': '🫑',\n  'cucumber': '🥒',\n  'leafy_green': '🥬',\n  'broccoli': '🥦',\n  'garlic': '🧄',\n  'onion': '🧅',\n  'mushroom': '🍄',\n  'peanuts': '🥜',\n  'chestnut': '🌰',\n  'bread': '🍞',\n  'croissant': '🥐',\n  'baguette_bread': '🥖',\n  'flatbread': '🫓',\n  'pretzel': '🥨',\n  'bagel': '🥯',\n  'pancakes': '🥞',\n  'waffle': '🧇',\n  'cheese': '🧀',\n  'meat_on_bone': '🍖',\n  'poultry_leg': '🍗',\n  'cut_of_meat': '🥩',\n  'bacon': '🥓',\n  'hamburger': '🍔',\n  'fries': '🍟',\n  'pizza': '🍕',\n  'hotdog': '🌭',\n  'sandwich': '🥪',\n  'taco': '🌮',\n  'burrito': '🌯',\n  'tamale': '🫔',\n  'stuffed_flatbread': '🥙',\n  'falafel': '🧆',\n  'egg': '🥚',\n  'fried_egg': '🍳',\n  'shallow_pan_of_food': '🥘',\n  'stew': '🍲',\n  'fondue': '🫕',\n  'bowl_with_spoon': '🥣',\n  'green_salad': '🥗',\n  'popcorn': '🍿',\n  'butter': '🧈',\n  'salt': '🧂',\n  'canned_food': '🥫',\n  'bento': '🍱',\n  'rice_cracker': '🍘',\n  'rice_ball': '🍙',\n  'rice': '🍚',\n  'curry': '🍛',\n  'ramen': '🍜',\n  'spaghetti': '🍝',\n  'sweet_potato': '🍠',\n  'oden': '🍢',\n  'sushi': '🍣',\n  'fried_shrimp': '🍤',\n  'fish_cake': '🍥',\n  'moon_cake': '🥮',\n  'dango': '🍡',\n  'dumpling': '🥟',\n  'fortune_cookie': '🥠',\n  'takeout_box': '🥡',\n  'crab': '🦀',\n  'lobster': '🦞',\n  'shrimp': '🦐',\n  'squid': '🦑',\n  'oyster': '🦪',\n  'icecream': '🍦',\n  'shaved_ice': '🍧',\n  'ice_cream': '🍨',\n  'doughnut': '🍩',\n  'cookie': '🍪',\n  'birthday': '🎂',\n  'cake': '🍰',\n  'cupcake': '🧁',\n  'pie': '🥧',\n  'chocolate_bar': '🍫',\n  'candy': '🍬',\n  'lollipop': '🍭',\n  'custard': '🍮',\n  'honey_pot': '🍯',\n  'baby_bottle': '🍼',\n  'milk_glass': '🥛',\n  'coffee': '☕',\n  'teapot': '🫖',\n  'tea': '🍵',\n  'sake': '🍶',\n  'champagne': '🍾',\n  'wine_glass': '🍷',\n  'cocktail': '🍸',\n  'tropical_drink': '🍹',\n  'beer': '🍺',\n  'beers': '🍻',\n  'clinking_glasses': '🥂',\n  'tumbler_glass': '🥃',\n  'cup_with_straw': '🥤',\n  'bubble_tea': '🧋',\n  'beverage_box': '🧃',\n  'mate': '🧉',\n  'ice_cube': '🧊',\n  'chopsticks': '🥢',\n  'plate_with_cutlery': '🍽️',\n  'fork_and_knife': '🍴',\n  'spoon': '🥄',\n  'hocho': '🔪',\n  'knife': '🔪',\n  'amphora': '🏺',\n  'earth_africa': '🌍',\n  'earth_americas': '🌎',\n  'earth_asia': '🌏',\n  'globe_with_meridians': '🌐',\n  'world_map': '🗺️',\n  'japan': '🗾',\n  'compass': '🧭',\n  'mountain_snow': '🏔️',\n  'mountain': '⛰️',\n  'volcano': '🌋',\n  'mount_fuji': '🗻',\n  'camping': '🏕️',\n  'beach_umbrella': '🏖️',\n  'desert': '🏜️',\n  'desert_island': '🏝️',\n  'national_park': '🏞️',\n  'stadium': '🏟️',\n  'classical_building': '🏛️',\n  'building_construction': '🏗️',\n  'bricks': '🧱',\n  'rock': '🪨',\n  'wood': '🪵',\n  'hut': '🛖',\n  'houses': '🏘️',\n  'derelict_house': '🏚️',\n  'house': '🏠',\n  'house_with_garden': '🏡',\n  'office': '🏢',\n  'post_office': '🏣',\n  'european_post_office': '🏤',\n  'hospital': '🏥',\n  'bank': '🏦',\n  'hotel': '🏨',\n  'love_hotel': '🏩',\n  'convenience_store': '🏪',\n  'school': '🏫',\n  'department_store': '🏬',\n  'factory': '🏭',\n  'japanese_castle': '🏯',\n  'european_castle': '🏰',\n  'wedding': '💒',\n  'tokyo_tower': '🗼',\n  'statue_of_liberty': '🗽',\n  'church': '⛪',\n  'mosque': '🕌',\n  'hindu_temple': '🛕',\n  'synagogue': '🕍',\n  'shinto_shrine': '⛩️',\n  'kaaba': '🕋',\n  'fountain': '⛲',\n  'tent': '⛺',\n  'foggy': '🌁',\n  'night_with_stars': '🌃',\n  'cityscape': '🏙️',\n  'sunrise_over_mountains': '🌄',\n  'sunrise': '🌅',\n  'city_sunset': '🌆',\n  'city_sunrise': '🌇',\n  'bridge_at_night': '🌉',\n  'hotsprings': '♨️',\n  'carousel_horse': '🎠',\n  'ferris_wheel': '🎡',\n  'roller_coaster': '🎢',\n  'barber': '💈',\n  'circus_tent': '🎪',\n  'steam_locomotive': '🚂',\n  'railway_car': '🚃',\n  'bullettrain_side': '🚄',\n  'bullettrain_front': '🚅',\n  'train2': '🚆',\n  'metro': '🚇',\n  'light_rail': '🚈',\n  'station': '🚉',\n  'tram': '🚊',\n  'monorail': '🚝',\n  'mountain_railway': '🚞',\n  'train': '🚋',\n  'bus': '🚌',\n  'oncoming_bus': '🚍',\n  'trolleybus': '🚎',\n  'minibus': '🚐',\n  'ambulance': '🚑',\n  'fire_engine': '🚒',\n  'police_car': '🚓',\n  'oncoming_police_car': '🚔',\n  'taxi': '🚕',\n  'oncoming_taxi': '🚖',\n  'car': '🚗',\n  'red_car': '🚗',\n  'oncoming_automobile': '🚘',\n  'blue_car': '🚙',\n  'pickup_truck': '🛻',\n  'truck': '🚚',\n  'articulated_lorry': '🚛',\n  'tractor': '🚜',\n  'racing_car': '🏎️',\n  'motorcycle': '🏍️',\n  'motor_scooter': '🛵',\n  'manual_wheelchair': '🦽',\n  'motorized_wheelchair': '🦼',\n  'auto_rickshaw': '🛺',\n  'bike': '🚲',\n  'kick_scooter': '🛴',\n  'skateboard': '🛹',\n  'roller_skate': '🛼',\n  'busstop': '🚏',\n  'motorway': '🛣️',\n  'railway_track': '🛤️',\n  'oil_drum': '🛢️',\n  'fuelpump': '⛽',\n  'rotating_light': '🚨',\n  'traffic_light': '🚥',\n  'vertical_traffic_light': '🚦',\n  'stop_sign': '🛑',\n  'construction': '🚧',\n  'anchor': '⚓',\n  'boat': '⛵',\n  'sailboat': '⛵',\n  'canoe': '🛶',\n  'speedboat': '🚤',\n  'passenger_ship': '🛳️',\n  'ferry': '⛴️',\n  'motor_boat': '🛥️',\n  'ship': '🚢',\n  'airplane': '✈️',\n  'small_airplane': '🛩️',\n  'flight_departure': '🛫',\n  'flight_arrival': '🛬',\n  'parachute': '🪂',\n  'seat': '💺',\n  'helicopter': '🚁',\n  'suspension_railway': '🚟',\n  'mountain_cableway': '🚠',\n  'aerial_tramway': '🚡',\n  'artificial_satellite': '🛰️',\n  'rocket': '🚀',\n  'flying_saucer': '🛸',\n  'bellhop_bell': '🛎️',\n  'luggage': '🧳',\n  'hourglass': '⌛',\n  'hourglass_flowing_sand': '⏳',\n  'watch': '⌚',\n  'alarm_clock': '⏰',\n  'stopwatch': '⏱️',\n  'timer_clock': '⏲️',\n  'mantelpiece_clock': '🕰️',\n  'clock12': '🕛',\n  'clock1230': '🕧',\n  'clock1': '🕐',\n  'clock130': '🕜',\n  'clock2': '🕑',\n  'clock230': '🕝',\n  'clock3': '🕒',\n  'clock330': '🕞',\n  'clock4': '🕓',\n  'clock430': '🕟',\n  'clock5': '🕔',\n  'clock530': '🕠',\n  'clock6': '🕕',\n  'clock630': '🕡',\n  'clock7': '🕖',\n  'clock730': '🕢',\n  'clock8': '🕗',\n  'clock830': '🕣',\n  'clock9': '🕘',\n  'clock930': '🕤',\n  'clock10': '🕙',\n  'clock1030': '🕥',\n  'clock11': '🕚',\n  'clock1130': '🕦',\n  'new_moon': '🌑',\n  'waxing_crescent_moon': '🌒',\n  'first_quarter_moon': '🌓',\n  'moon': '🌔',\n  'waxing_gibbous_moon': '🌔',\n  'full_moon': '🌕',\n  'waning_gibbous_moon': '🌖',\n  'last_quarter_moon': '🌗',\n  'waning_crescent_moon': '🌘',\n  'crescent_moon': '🌙',\n  'new_moon_with_face': '🌚',\n  'first_quarter_moon_with_face': '🌛',\n  'last_quarter_moon_with_face': '🌜',\n  'thermometer': '🌡️',\n  'sunny': '☀️',\n  'full_moon_with_face': '🌝',\n  'sun_with_face': '🌞',\n  'ringed_planet': '🪐',\n  'star': '⭐',\n  'star2': '🌟',\n  'stars': '🌠',\n  'milky_way': '🌌',\n  'cloud': '☁️',\n  'partly_sunny': '⛅',\n  'cloud_with_lightning_and_rain': '⛈️',\n  'sun_behind_small_cloud': '🌤️',\n  'sun_behind_large_cloud': '🌥️',\n  'sun_behind_rain_cloud': '🌦️',\n  'cloud_with_rain': '🌧️',\n  'cloud_with_snow': '🌨️',\n  'cloud_with_lightning': '🌩️',\n  'tornado': '🌪️',\n  'fog': '🌫️',\n  'wind_face': '🌬️',\n  'cyclone': '🌀',\n  'rainbow': '🌈',\n  'closed_umbrella': '🌂',\n  'open_umbrella': '☂️',\n  'umbrella': '☔',\n  'parasol_on_ground': '⛱️',\n  'zap': '⚡',\n  'snowflake': '❄️',\n  'snowman_with_snow': '☃️',\n  'snowman': '⛄',\n  'comet': '☄️',\n  'fire': '🔥',\n  'droplet': '💧',\n  'ocean': '🌊',\n  'jack_o_lantern': '🎃',\n  'christmas_tree': '🎄',\n  'fireworks': '🎆',\n  'sparkler': '🎇',\n  'firecracker': '🧨',\n  'sparkles': '✨',\n  'balloon': '🎈',\n  'tada': '🎉',\n  'confetti_ball': '🎊',\n  'tanabata_tree': '🎋',\n  'bamboo': '🎍',\n  'dolls': '🎎',\n  'flags': '🎏',\n  'wind_chime': '🎐',\n  'rice_scene': '🎑',\n  'red_envelope': '🧧',\n  'ribbon': '🎀',\n  'gift': '🎁',\n  'reminder_ribbon': '🎗️',\n  'tickets': '🎟️',\n  'ticket': '🎫',\n  'medal_military': '🎖️',\n  'trophy': '🏆',\n  'medal_sports': '🏅',\n  '1st_place_medal': '🥇',\n  '2nd_place_medal': '🥈',\n  '3rd_place_medal': '🥉',\n  'soccer': '⚽',\n  'baseball': '⚾',\n  'softball': '🥎',\n  'basketball': '🏀',\n  'volleyball': '🏐',\n  'football': '🏈',\n  'rugby_football': '🏉',\n  'tennis': '🎾',\n  'flying_disc': '🥏',\n  'bowling': '🎳',\n  'cricket_game': '🏏',\n  'field_hockey': '🏑',\n  'ice_hockey': '🏒',\n  'lacrosse': '🥍',\n  'ping_pong': '🏓',\n  'badminton': '🏸',\n  'boxing_glove': '🥊',\n  'martial_arts_uniform': '🥋',\n  'goal_net': '🥅',\n  'golf': '⛳',\n  'ice_skate': '⛸️',\n  'fishing_pole_and_fish': '🎣',\n  'diving_mask': '🤿',\n  'running_shirt_with_sash': '🎽',\n  'ski': '🎿',\n  'sled': '🛷',\n  'curling_stone': '🥌',\n  'dart': '🎯',\n  'yo_yo': '🪀',\n  'kite': '🪁',\n  '8ball': '🎱',\n  'crystal_ball': '🔮',\n  'magic_wand': '🪄',\n  'nazar_amulet': '🧿',\n  'video_game': '🎮',\n  'joystick': '🕹️',\n  'slot_machine': '🎰',\n  'game_die': '🎲',\n  'jigsaw': '🧩',\n  'teddy_bear': '🧸',\n  'pinata': '🪅',\n  'nesting_dolls': '🪆',\n  'spades': '♠️',\n  'hearts': '♥️',\n  'diamonds': '♦️',\n  'clubs': '♣️',\n  'chess_pawn': '♟️',\n  'black_joker': '🃏',\n  'mahjong': '🀄',\n  'flower_playing_cards': '🎴',\n  'performing_arts': '🎭',\n  'framed_picture': '🖼️',\n  'art': '🎨',\n  'thread': '🧵',\n  'sewing_needle': '🪡',\n  'yarn': '🧶',\n  'knot': '🪢',\n  'eyeglasses': '👓',\n  'dark_sunglasses': '🕶️',\n  'goggles': '🥽',\n  'lab_coat': '🥼',\n  'safety_vest': '🦺',\n  'necktie': '👔',\n  'shirt': '👕',\n  'tshirt': '👕',\n  'jeans': '👖',\n  'scarf': '🧣',\n  'gloves': '🧤',\n  'coat': '🧥',\n  'socks': '🧦',\n  'dress': '👗',\n  'kimono': '👘',\n  'sari': '🥻',\n  'one_piece_swimsuit': '🩱',\n  'swim_brief': '🩲',\n  'shorts': '🩳',\n  'bikini': '👙',\n  'womans_clothes': '👚',\n  'purse': '👛',\n  'handbag': '👜',\n  'pouch': '👝',\n  'shopping': '🛍️',\n  'school_satchel': '🎒',\n  'thong_sandal': '🩴',\n  'mans_shoe': '👞',\n  'shoe': '👞',\n  'athletic_shoe': '👟',\n  'hiking_boot': '🥾',\n  'flat_shoe': '🥿',\n  'high_heel': '👠',\n  'sandal': '👡',\n  'ballet_shoes': '🩰',\n  'boot': '👢',\n  'crown': '👑',\n  'womans_hat': '👒',\n  'tophat': '🎩',\n  'mortar_board': '🎓',\n  'billed_cap': '🧢',\n  'military_helmet': '🪖',\n  'rescue_worker_helmet': '⛑️',\n  'prayer_beads': '📿',\n  'lipstick': '💄',\n  'ring': '💍',\n  'gem': '💎',\n  'mute': '🔇',\n  'speaker': '🔈',\n  'sound': '🔉',\n  'loud_sound': '🔊',\n  'loudspeaker': '📢',\n  'mega': '📣',\n  'postal_horn': '📯',\n  'bell': '🔔',\n  'no_bell': '🔕',\n  'musical_score': '🎼',\n  'musical_note': '🎵',\n  'notes': '🎶',\n  'studio_microphone': '🎙️',\n  'level_slider': '🎚️',\n  'control_knobs': '🎛️',\n  'microphone': '🎤',\n  'headphones': '🎧',\n  'radio': '📻',\n  'saxophone': '🎷',\n  'accordion': '🪗',\n  'guitar': '🎸',\n  'musical_keyboard': '🎹',\n  'trumpet': '🎺',\n  'violin': '🎻',\n  'banjo': '🪕',\n  'drum': '🥁',\n  'long_drum': '🪘',\n  'iphone': '📱',\n  'calling': '📲',\n  'phone': '☎️',\n  'telephone': '☎️',\n  'telephone_receiver': '📞',\n  'pager': '📟',\n  'fax': '📠',\n  'battery': '🔋',\n  'electric_plug': '🔌',\n  'computer': '💻',\n  'desktop_computer': '🖥️',\n  'printer': '🖨️',\n  'keyboard': '⌨️',\n  'computer_mouse': '🖱️',\n  'trackball': '🖲️',\n  'minidisc': '💽',\n  'floppy_disk': '💾',\n  'cd': '💿',\n  'dvd': '📀',\n  'abacus': '🧮',\n  'movie_camera': '🎥',\n  'film_strip': '🎞️',\n  'film_projector': '📽️',\n  'clapper': '🎬',\n  'tv': '📺',\n  'camera': '📷',\n  'camera_flash': '📸',\n  'video_camera': '📹',\n  'vhs': '📼',\n  'mag': '🔍',\n  'mag_right': '🔎',\n  'candle': '🕯️',\n  'bulb': '💡',\n  'flashlight': '🔦',\n  'izakaya_lantern': '🏮',\n  'lantern': '🏮',\n  'diya_lamp': '🪔',\n  'notebook_with_decorative_cover': '📔',\n  'closed_book': '📕',\n  'book': '📖',\n  'open_book': '📖',\n  'green_book': '📗',\n  'blue_book': '📘',\n  'orange_book': '📙',\n  'books': '📚',\n  'notebook': '📓',\n  'ledger': '📒',\n  'page_with_curl': '📃',\n  'scroll': '📜',\n  'page_facing_up': '📄',\n  'newspaper': '📰',\n  'newspaper_roll': '🗞️',\n  'bookmark_tabs': '📑',\n  'bookmark': '🔖',\n  'label': '🏷️',\n  'moneybag': '💰',\n  'coin': '🪙',\n  'yen': '💴',\n  'dollar': '💵',\n  'euro': '💶',\n  'pound': '💷',\n  'money_with_wings': '💸',\n  'credit_card': '💳',\n  'receipt': '🧾',\n  'chart': '💹',\n  'envelope': '✉️',\n  'email': '📧',\n  'e-mail': '📧',\n  'incoming_envelope': '📨',\n  'envelope_with_arrow': '📩',\n  'outbox_tray': '📤',\n  'inbox_tray': '📥',\n  'package': '📦',\n  'mailbox': '📫',\n  'mailbox_closed': '📪',\n  'mailbox_with_mail': '📬',\n  'mailbox_with_no_mail': '📭',\n  'postbox': '📮',\n  'ballot_box': '🗳️',\n  'pencil2': '✏️',\n  'black_nib': '✒️',\n  'fountain_pen': '🖋️',\n  'pen': '🖊️',\n  'paintbrush': '🖌️',\n  'crayon': '🖍️',\n  'memo': '📝',\n  'pencil': '📝',\n  'briefcase': '💼',\n  'file_folder': '📁',\n  'open_file_folder': '📂',\n  'card_index_dividers': '🗂️',\n  'date': '📅',\n  'calendar': '📆',\n  'spiral_notepad': '🗒️',\n  'spiral_calendar': '🗓️',\n  'card_index': '📇',\n  'chart_with_upwards_trend': '📈',\n  'chart_with_downwards_trend': '📉',\n  'bar_chart': '📊',\n  'clipboard': '📋',\n  'pushpin': '📌',\n  'round_pushpin': '📍',\n  'paperclip': '📎',\n  'paperclips': '🖇️',\n  'straight_ruler': '📏',\n  'triangular_ruler': '📐',\n  'scissors': '✂️',\n  'card_file_box': '🗃️',\n  'file_cabinet': '🗄️',\n  'wastebasket': '🗑️',\n  'lock': '🔒',\n  'unlock': '🔓',\n  'lock_with_ink_pen': '🔏',\n  'closed_lock_with_key': '🔐',\n  'key': '🔑',\n  'old_key': '🗝️',\n  'hammer': '🔨',\n  'axe': '🪓',\n  'pick': '⛏️',\n  'hammer_and_pick': '⚒️',\n  'hammer_and_wrench': '🛠️',\n  'dagger': '🗡️',\n  'crossed_swords': '⚔️',\n  'gun': '🔫',\n  'boomerang': '🪃',\n  'bow_and_arrow': '🏹',\n  'shield': '🛡️',\n  'carpentry_saw': '🪚',\n  'wrench': '🔧',\n  'screwdriver': '🪛',\n  'nut_and_bolt': '🔩',\n  'gear': '⚙️',\n  'clamp': '🗜️',\n  'balance_scale': '⚖️',\n  'probing_cane': '🦯',\n  'link': '🔗',\n  'chains': '⛓️',\n  'hook': '🪝',\n  'toolbox': '🧰',\n  'magnet': '🧲',\n  'ladder': '🪜',\n  'alembic': '⚗️',\n  'test_tube': '🧪',\n  'petri_dish': '🧫',\n  'dna': '🧬',\n  'microscope': '🔬',\n  'telescope': '🔭',\n  'satellite': '📡',\n  'syringe': '💉',\n  'drop_of_blood': '🩸',\n  'pill': '💊',\n  'adhesive_bandage': '🩹',\n  'stethoscope': '🩺',\n  'door': '🚪',\n  'elevator': '🛗',\n  'mirror': '🪞',\n  'window': '🪟',\n  'bed': '🛏️',\n  'couch_and_lamp': '🛋️',\n  'chair': '🪑',\n  'toilet': '🚽',\n  'plunger': '🪠',\n  'shower': '🚿',\n  'bathtub': '🛁',\n  'mouse_trap': '🪤',\n  'razor': '🪒',\n  'lotion_bottle': '🧴',\n  'safety_pin': '🧷',\n  'broom': '🧹',\n  'basket': '🧺',\n  'roll_of_paper': '🧻',\n  'bucket': '🪣',\n  'soap': '🧼',\n  'toothbrush': '🪥',\n  'sponge': '🧽',\n  'fire_extinguisher': '🧯',\n  'shopping_cart': '🛒',\n  'smoking': '🚬',\n  'coffin': '⚰️',\n  'headstone': '🪦',\n  'funeral_urn': '⚱️',\n  'moyai': '🗿',\n  'placard': '🪧',\n  'atm': '🏧',\n  'put_litter_in_its_place': '🚮',\n  'potable_water': '🚰',\n  'wheelchair': '♿',\n  'mens': '🚹',\n  'womens': '🚺',\n  'restroom': '🚻',\n  'baby_symbol': '🚼',\n  'wc': '🚾',\n  'passport_control': '🛂',\n  'customs': '🛃',\n  'baggage_claim': '🛄',\n  'left_luggage': '🛅',\n  'warning': '⚠️',\n  'children_crossing': '🚸',\n  'no_entry': '⛔',\n  'no_entry_sign': '🚫',\n  'no_bicycles': '🚳',\n  'no_smoking': '🚭',\n  'do_not_litter': '🚯',\n  'non-potable_water': '🚱',\n  'no_pedestrians': '🚷',\n  'no_mobile_phones': '📵',\n  'underage': '🔞',\n  'radioactive': '☢️',\n  'biohazard': '☣️',\n  'arrow_up': '⬆️',\n  'arrow_upper_right': '↗️',\n  'arrow_right': '➡️',\n  'arrow_lower_right': '↘️',\n  'arrow_down': '⬇️',\n  'arrow_lower_left': '↙️',\n  'arrow_left': '⬅️',\n  'arrow_upper_left': '↖️',\n  'arrow_up_down': '↕️',\n  'left_right_arrow': '↔️',\n  'leftwards_arrow_with_hook': '↩️',\n  'arrow_right_hook': '↪️',\n  'arrow_heading_up': '⤴️',\n  'arrow_heading_down': '⤵️',\n  'arrows_clockwise': '🔃',\n  'arrows_counterclockwise': '🔄',\n  'back': '🔙',\n  'end': '🔚',\n  'on': '🔛',\n  'soon': '🔜',\n  'top': '🔝',\n  'place_of_worship': '🛐',\n  'atom_symbol': '⚛️',\n  'om': '🕉️',\n  'star_of_david': '✡️',\n  'wheel_of_dharma': '☸️',\n  'yin_yang': '☯️',\n  'latin_cross': '✝️',\n  'orthodox_cross': '☦️',\n  'star_and_crescent': '☪️',\n  'peace_symbol': '☮️',\n  'menorah': '🕎',\n  'six_pointed_star': '🔯',\n  'aries': '♈',\n  'taurus': '♉',\n  'gemini': '♊',\n  'cancer': '♋',\n  'leo': '♌',\n  'virgo': '♍',\n  'libra': '♎',\n  'scorpius': '♏',\n  'sagittarius': '♐',\n  'capricorn': '♑',\n  'aquarius': '♒',\n  'pisces': '♓',\n  'ophiuchus': '⛎',\n  'twisted_rightwards_arrows': '🔀',\n  'repeat': '🔁',\n  'repeat_one': '🔂',\n  'arrow_forward': '▶️',\n  'fast_forward': '⏩',\n  'next_track_button': '⏭️',\n  'play_or_pause_button': '⏯️',\n  'arrow_backward': '◀️',\n  'rewind': '⏪',\n  'previous_track_button': '⏮️',\n  'arrow_up_small': '🔼',\n  'arrow_double_up': '⏫',\n  'arrow_down_small': '🔽',\n  'arrow_double_down': '⏬',\n  'pause_button': '⏸️',\n  'stop_button': '⏹️',\n  'record_button': '⏺️',\n  'eject_button': '⏏️',\n  'cinema': '🎦',\n  'low_brightness': '🔅',\n  'high_brightness': '🔆',\n  'signal_strength': '📶',\n  'vibration_mode': '📳',\n  'mobile_phone_off': '📴',\n  'female_sign': '♀️',\n  'male_sign': '♂️',\n  'transgender_symbol': '⚧️',\n  'heavy_multiplication_x': '✖️',\n  'heavy_plus_sign': '➕',\n  'heavy_minus_sign': '➖',\n  'heavy_division_sign': '➗',\n  'infinity': '♾️',\n  'bangbang': '‼️',\n  'interrobang': '⁉️',\n  'question': '❓',\n  'grey_question': '❔',\n  'grey_exclamation': '❕',\n  'exclamation': '❗',\n  'heavy_exclamation_mark': '❗',\n  'wavy_dash': '〰️',\n  'currency_exchange': '💱',\n  'heavy_dollar_sign': '💲',\n  'medical_symbol': '⚕️',\n  'recycle': '♻️',\n  'fleur_de_lis': '⚜️',\n  'trident': '🔱',\n  'name_badge': '📛',\n  'beginner': '🔰',\n  'o': '⭕',\n  'white_check_mark': '✅',\n  'ballot_box_with_check': '☑️',\n  'heavy_check_mark': '✔️',\n  'x': '❌',\n  'negative_squared_cross_mark': '❎',\n  'curly_loop': '➰',\n  'loop': '➿',\n  'part_alternation_mark': '〽️',\n  'eight_spoked_asterisk': '✳️',\n  'eight_pointed_black_star': '✴️',\n  'sparkle': '❇️',\n  'copyright': '©️',\n  'registered': '®️',\n  'tm': '™️',\n  'hash': '#️⃣',\n  'asterisk': '*️⃣',\n  'zero': '0️⃣',\n  'one': '1️⃣',\n  'two': '2️⃣',\n  'three': '3️⃣',\n  'four': '4️⃣',\n  'five': '5️⃣',\n  'six': '6️⃣',\n  'seven': '7️⃣',\n  'eight': '8️⃣',\n  'nine': '9️⃣',\n  'keycap_ten': '🔟',\n  'capital_abcd': '🔠',\n  'abcd': '🔡',\n  'symbols': '🔣',\n  'abc': '🔤',\n  'a': '🅰️',\n  'ab': '🆎',\n  'b': '🅱️',\n  'cl': '🆑',\n  'cool': '🆒',\n  'free': '🆓',\n  'information_source': 'ℹ️',\n  'id': '🆔',\n  'm': 'Ⓜ️',\n  'new': '🆕',\n  'ng': '🆖',\n  'o2': '🅾️',\n  'ok': '🆗',\n  'parking': '🅿️',\n  'sos': '🆘',\n  'up': '🆙',\n  'vs': '🆚',\n  'koko': '🈁',\n  'sa': '🈂️',\n  'ideograph_advantage': '🉐',\n  'accept': '🉑',\n  'congratulations': '㊗️',\n  'secret': '㊙️',\n  'u6e80': '🈵',\n  'red_circle': '🔴',\n  'orange_circle': '🟠',\n  'yellow_circle': '🟡',\n  'green_circle': '🟢',\n  'large_blue_circle': '🔵',\n  'purple_circle': '🟣',\n  'brown_circle': '🟤',\n  'black_circle': '⚫',\n  'white_circle': '⚪',\n  'red_square': '🟥',\n  'orange_square': '🟧',\n  'yellow_square': '🟨',\n  'green_square': '🟩',\n  'blue_square': '🟦',\n  'purple_square': '🟪',\n  'brown_square': '🟫',\n  'black_large_square': '⬛',\n  'white_large_square': '⬜',\n  'black_medium_square': '◼️',\n  'white_medium_square': '◻️',\n  'black_medium_small_square': '◾',\n  'white_medium_small_square': '◽',\n  'black_small_square': '▪️',\n  'white_small_square': '▫️',\n  'large_orange_diamond': '🔶',\n  'large_blue_diamond': '🔷',\n  'small_orange_diamond': '🔸',\n  'small_blue_diamond': '🔹',\n  'small_red_triangle': '🔺',\n  'small_red_triangle_down': '🔻',\n  'diamond_shape_with_a_dot_inside': '💠',\n  'radio_button': '🔘',\n  'white_square_button': '🔳',\n  'black_square_button': '🔲',\n  'checkered_flag': '🏁',\n  'triangular_flag_on_post': '🚩',\n  'crossed_flags': '🎌',\n  'black_flag': '🏴',\n  'white_flag': '🏳️',\n  'rainbow_flag': '🏳️‍🌈',\n  'transgender_flag': '🏳️‍⚧️',\n  'pirate_flag': '🏴‍☠️',\n  'ascension_island': '🇦🇨',\n  'andorra': '🇦🇩',\n  'united_arab_emirates': '🇦🇪',\n  'afghanistan': '🇦🇫',\n  'antigua_barbuda': '🇦🇬',\n  'anguilla': '🇦🇮',\n  'albania': '🇦🇱',\n  'armenia': '🇦🇲',\n  'angola': '🇦🇴',\n  'antarctica': '🇦🇶',\n  'argentina': '🇦🇷',\n  'american_samoa': '🇦🇸',\n  'austria': '🇦🇹',\n  'australia': '🇦🇺',\n  'aruba': '🇦🇼',\n  'aland_islands': '🇦🇽',\n  'azerbaijan': '🇦🇿',\n  'bosnia_herzegovina': '🇧🇦',\n  'barbados': '🇧🇧',\n  'bangladesh': '🇧🇩',\n  'belgium': '🇧🇪',\n  'burkina_faso': '🇧🇫',\n  'bulgaria': '🇧🇬',\n  'bahrain': '🇧🇭',\n  'burundi': '🇧🇮',\n  'benin': '🇧🇯',\n  'st_barthelemy': '🇧🇱',\n  'bermuda': '🇧🇲',\n  'brunei': '🇧🇳',\n  'bolivia': '🇧🇴',\n  'caribbean_netherlands': '🇧🇶',\n  'brazil': '🇧🇷',\n  'bahamas': '🇧🇸',\n  'bhutan': '🇧🇹',\n  'bouvet_island': '🇧🇻',\n  'botswana': '🇧🇼',\n  'belarus': '🇧🇾',\n  'belize': '🇧🇿',\n  'canada': '🇨🇦',\n  'cocos_islands': '🇨🇨',\n  'congo_kinshasa': '🇨🇩',\n  'central_african_republic': '🇨🇫',\n  'congo_brazzaville': '🇨🇬',\n  'switzerland': '🇨🇭',\n  'cote_divoire': '🇨🇮',\n  'cook_islands': '🇨🇰',\n  'chile': '🇨🇱',\n  'cameroon': '🇨🇲',\n  'cn': '🇨🇳',\n  'colombia': '🇨🇴',\n  'clipperton_island': '🇨🇵',\n  'costa_rica': '🇨🇷',\n  'cuba': '🇨🇺',\n  'cape_verde': '🇨🇻',\n  'curacao': '🇨🇼',\n  'christmas_island': '🇨🇽',\n  'cyprus': '🇨🇾',\n  'czech_republic': '🇨🇿',\n  'de': '🇩🇪',\n  'diego_garcia': '🇩🇬',\n  'djibouti': '🇩🇯',\n  'denmark': '🇩🇰',\n  'dominica': '🇩🇲',\n  'dominican_republic': '🇩🇴',\n  'algeria': '🇩🇿',\n  'ceuta_melilla': '🇪🇦',\n  'ecuador': '🇪🇨',\n  'estonia': '🇪🇪',\n  'egypt': '🇪🇬',\n  'western_sahara': '🇪🇭',\n  'eritrea': '🇪🇷',\n  'es': '🇪🇸',\n  'ethiopia': '🇪🇹',\n  'eu': '🇪🇺',\n  'european_union': '🇪🇺',\n  'finland': '🇫🇮',\n  'fiji': '🇫🇯',\n  'falkland_islands': '🇫🇰',\n  'micronesia': '🇫🇲',\n  'faroe_islands': '🇫🇴',\n  'fr': '🇫🇷',\n  'gabon': '🇬🇦',\n  'gb': '🇬🇧',\n  'uk': '🇬🇧',\n  'grenada': '🇬🇩',\n  'georgia': '🇬🇪',\n  'french_guiana': '🇬🇫',\n  'guernsey': '🇬🇬',\n  'ghana': '🇬🇭',\n  'gibraltar': '🇬🇮',\n  'greenland': '🇬🇱',\n  'gambia': '🇬🇲',\n  'guinea': '🇬🇳',\n  'guadeloupe': '🇬🇵',\n  'equatorial_guinea': '🇬🇶',\n  'greece': '🇬🇷',\n  'south_georgia_south_sandwich_islands': '🇬🇸',\n  'guatemala': '🇬🇹',\n  'guam': '🇬🇺',\n  'guinea_bissau': '🇬🇼',\n  'guyana': '🇬🇾',\n  'hong_kong': '🇭🇰',\n  'heard_mcdonald_islands': '🇭🇲',\n  'honduras': '🇭🇳',\n  'croatia': '🇭🇷',\n  'haiti': '🇭🇹',\n  'hungary': '🇭🇺',\n  'canary_islands': '🇮🇨',\n  'indonesia': '🇮🇩',\n  'ireland': '🇮🇪',\n  'israel': '🇮🇱',\n  'isle_of_man': '🇮🇲',\n  'india': '🇮🇳',\n  'british_indian_ocean_territory': '🇮🇴',\n  'iraq': '🇮🇶',\n  'iran': '🇮🇷',\n  'iceland': '🇮🇸',\n  'it': '🇮🇹',\n  'jersey': '🇯🇪',\n  'jamaica': '🇯🇲',\n  'jordan': '🇯🇴',\n  'jp': '🇯🇵',\n  'kenya': '🇰🇪',\n  'kyrgyzstan': '🇰🇬',\n  'cambodia': '🇰🇭',\n  'kiribati': '🇰🇮',\n  'comoros': '🇰🇲',\n  'st_kitts_nevis': '🇰🇳',\n  'north_korea': '🇰🇵',\n  'kr': '🇰🇷',\n  'kuwait': '🇰🇼',\n  'cayman_islands': '🇰🇾',\n  'kazakhstan': '🇰🇿',\n  'laos': '🇱🇦',\n  'lebanon': '🇱🇧',\n  'st_lucia': '🇱🇨',\n  'liechtenstein': '🇱🇮',\n  'sri_lanka': '🇱🇰',\n  'liberia': '🇱🇷',\n  'lesotho': '🇱🇸',\n  'lithuania': '🇱🇹',\n  'luxembourg': '🇱🇺',\n  'latvia': '🇱🇻',\n  'libya': '🇱🇾',\n  'morocco': '🇲🇦',\n  'monaco': '🇲🇨',\n  'moldova': '🇲🇩',\n  'montenegro': '🇲🇪',\n  'st_martin': '🇲🇫',\n  'madagascar': '🇲🇬',\n  'marshall_islands': '🇲🇭',\n  'macedonia': '🇲🇰',\n  'mali': '🇲🇱',\n  'myanmar': '🇲🇲',\n  'mongolia': '🇲🇳',\n  'macau': '🇲🇴',\n  'northern_mariana_islands': '🇲🇵',\n  'martinique': '🇲🇶',\n  'mauritania': '🇲🇷',\n  'montserrat': '🇲🇸',\n  'malta': '🇲🇹',\n  'mauritius': '🇲🇺',\n  'maldives': '🇲🇻',\n  'malawi': '🇲🇼',\n  'mexico': '🇲🇽',\n  'malaysia': '🇲🇾',\n  'mozambique': '🇲🇿',\n  'namibia': '🇳🇦',\n  'new_caledonia': '🇳🇨',\n  'niger': '🇳🇪',\n  'norfolk_island': '🇳🇫',\n  'nigeria': '🇳🇬',\n  'nicaragua': '🇳🇮',\n  'netherlands': '🇳🇱',\n  'norway': '🇳🇴',\n  'nepal': '🇳🇵',\n  'nauru': '🇳🇷',\n  'niue': '🇳🇺',\n  'new_zealand': '🇳🇿',\n  'oman': '🇴🇲',\n  'panama': '🇵🇦',\n  'peru': '🇵🇪',\n  'french_polynesia': '🇵🇫',\n  'papua_new_guinea': '🇵🇬',\n  'philippines': '🇵🇭',\n  'pakistan': '🇵🇰',\n  'poland': '🇵🇱',\n  'st_pierre_miquelon': '🇵🇲',\n  'pitcairn_islands': '🇵🇳',\n  'puerto_rico': '🇵🇷',\n  'palestinian_territories': '🇵🇸',\n  'portugal': '🇵🇹',\n  'palau': '🇵🇼',\n  'paraguay': '🇵🇾',\n  'qatar': '🇶🇦',\n  'reunion': '🇷🇪',\n  'romania': '🇷🇴',\n  'serbia': '🇷🇸',\n  'ru': '🇷🇺',\n  'rwanda': '🇷🇼',\n  'saudi_arabia': '🇸🇦',\n  'solomon_islands': '🇸🇧',\n  'seychelles': '🇸🇨',\n  'sudan': '🇸🇩',\n  'sweden': '🇸🇪',\n  'singapore': '🇸🇬',\n  'st_helena': '🇸🇭',\n  'slovenia': '🇸🇮',\n  'svalbard_jan_mayen': '🇸🇯',\n  'slovakia': '🇸🇰',\n  'sierra_leone': '🇸🇱',\n  'san_marino': '🇸🇲',\n  'senegal': '🇸🇳',\n  'somalia': '🇸🇴',\n  'suriname': '🇸🇷',\n  'south_sudan': '🇸🇸',\n  'sao_tome_principe': '🇸🇹',\n  'el_salvador': '🇸🇻',\n  'sint_maarten': '🇸🇽',\n  'syria': '🇸🇾',\n  'swaziland': '🇸🇿',\n  'tristan_da_cunha': '🇹🇦',\n  'turks_caicos_islands': '🇹🇨',\n  'chad': '🇹🇩',\n  'french_southern_territories': '🇹🇫',\n  'togo': '🇹🇬',\n  'thailand': '🇹🇭',\n  'tajikistan': '🇹🇯',\n  'tokelau': '🇹🇰',\n  'timor_leste': '🇹🇱',\n  'turkmenistan': '🇹🇲',\n  'tunisia': '🇹🇳',\n  'tonga': '🇹🇴',\n  'tr': '🇹🇷',\n  'trinidad_tobago': '🇹🇹',\n  'tuvalu': '🇹🇻',\n  'taiwan': '🇹🇼',\n  'tanzania': '🇹🇿',\n  'ukraine': '🇺🇦',\n  'uganda': '🇺🇬',\n  'us_outlying_islands': '🇺🇲',\n  'united_nations': '🇺🇳',\n  'us': '🇺🇸',\n  'uruguay': '🇺🇾',\n  'uzbekistan': '🇺🇿',\n  'vatican_city': '🇻🇦',\n  'st_vincent_grenadines': '🇻🇨',\n  'venezuela': '🇻🇪',\n  'british_virgin_islands': '🇻🇬',\n  'us_virgin_islands': '🇻🇮',\n  'vietnam': '🇻🇳',\n  'vanuatu': '🇻🇺',\n  'wallis_futuna': '🇼🇫',\n  'samoa': '🇼🇸',\n  'kosovo': '🇽🇰',\n  'yemen': '🇾🇪',\n  'mayotte': '🇾🇹',\n  'south_africa': '🇿🇦',\n  'zambia': '🇿🇲',\n  'zimbabwe': '🇿🇼',\n  'england': '🏴󠁧󠁢󠁥󠁮󠁧󠁿',\n  'scotland': '🏴󠁧󠁢󠁳󠁣󠁴󠁿',\n  'wales': '🏴󠁧󠁢󠁷󠁬󠁳󠁿',\n} as any;\n\nexport const emojisToName = Object.keys(namesToEmoji).reduce((accu: any, name: any) => {\n  const emoji = namesToEmoji[name];\n  accu[emoji] = name;\n  return accu;\n}, {});\n\nexport const names = Object.keys(namesToEmoji).map(key => key);\nexport const emojis = Object.keys(namesToEmoji).map(key => namesToEmoji[key]);\n\nexport function emojiSearch(query: any) {\n  return names\n    .filter(name => name.startsWith(query))\n    .map(name => ({\n      name,\n      emoji: namesToEmoji[name],\n    }));\n}\n","import { Node } from '@tiptap/core';\nimport { PluginKey } from '@tiptap/pm/state';\nimport { ReactRenderer } from '@tiptap/react';\nimport Suggestion from '@tiptap/suggestion';\nimport tippy from 'tippy.js';\n\nimport EmojiPicker from '@/extensions/Emoji/components/EmojiPicker/EmojiPicker';\n\nimport { EmojiList } from './components/EmojiList/EmojiList';\nimport { emojiSearch, emojisToName } from './components/EmojiList/emojis';\n\nexport const EXTENSION_PRIORITY_HIGHEST = 200;\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    emoji: {\n      setEmoji: (emoji: { name: string, emoji: string }) => ReturnType\n    }\n  }\n}\n\nexport const EmojiPluginKey = new PluginKey('emoji');\n\nexport { emojisToName };\n\nexport const Emoji = Node.create({\n  name: 'emoji',\n  content: 'text*',\n\n  priority: EXTENSION_PRIORITY_HIGHEST,\n\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      HTMLAttributes: {},\n      suggestion: {\n        char: ':',\n        pluginKey: EmojiPluginKey,\n        command: ({ editor, range, props }: any) => {\n          editor\n            .chain()\n            .focus()\n            .insertContentAt(range, `${props.emoji} `)\n            .run();\n        },\n      },\n      button: ({ editor, t }: any) => {\n        return {\n          component: EmojiPicker,\n          componentProps: {\n            editor,\n            action: () => {\n              return;\n            },\n            isActive: () => false,\n            disabled: false,\n            icon: 'EmojiIcon',\n            tooltip: t('editor.emoji.tooltip'),\n          },\n        };\n      },\n    };\n  },\n\n  addCommands() {\n    return {\n      setEmoji:\n        emojiObject =>\n          ({ commands }) => {\n            return commands.insertContent(`${emojiObject.emoji} `);\n          },\n    };\n  },\n\n  addProseMirrorPlugins() {\n    return [\n      Suggestion({\n        editor: this.editor,\n        ...this.options.suggestion,\n      }),\n    ];\n  },\n}).configure({\n  suggestion: {\n    items: ({ query }: any) => {\n      return emojiSearch(query);\n    },\n    render: () => {\n      let component: any;\n      let popup: any;\n      let isEditable: any;\n\n      return {\n        onStart: (props: any) => {\n          isEditable = props.editor.isEditable;\n          if (!isEditable)\n            return;\n\n          component = new ReactRenderer(EmojiList, {\n            props,\n            editor: props.editor,\n          });\n\n          popup = tippy('body', {\n            getReferenceClientRect: props.clientRect,\n            appendTo: () => document.body,\n            content: component.element,\n            showOnCreate: true,\n            interactive: true,\n            trigger: 'manual',\n            placement: 'bottom-start',\n          });\n        },\n\n        onUpdate(props: any) {\n          if (!isEditable)\n            return;\n\n          component.updateProps(props);\n          popup[0].setProps({\n            getReferenceClientRect: props.clientRect,\n          });\n        },\n\n        onKeyDown(props: any) {\n          if (!isEditable)\n            return;\n\n          if (props.event.key === 'Escape') {\n            popup[0].hide();\n            return true;\n          }\n          return component.ref?.onKeyDown(props);\n        },\n\n        onExit() {\n          if (!isEditable)\n            return;\n\n          popup[0].destroy();\n          component.destroy();\n        },\n      };\n    },\n  },\n});\n","import type { Editor } from '@tiptap/core';\n\nfunction printHtml(content: string) {\n  const iframe: HTMLIFrameElement = document.createElement('iframe');\n  iframe.setAttribute('style', 'position: absolute; width: 0; height: 0; top: 0; left: 0;');\n  document.body.appendChild(iframe);\n\n  iframe.textContent = `\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n      <title>Echo Editor</title>\n      <meta charset=\"UTF-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    </head>\n    <body class=\"is-print\">\n      <div class=\"tiptap ProseMirror\" translate=\"no\" aria-expanded=\"false\">\n          ${content}\n      </div>\n    </body>\n    </html>\n  `;\n\n  const frameWindow = iframe.contentWindow;\n  const doc: any = iframe.contentDocument || (iframe.contentWindow && iframe.contentWindow.document);\n\n  // load style from CDN to iframe\n  const link = document.createElement('link');\n  link.rel = 'stylesheet';\n  link.href = 'https://cdn.jsdelivr.net/npm/reactjs-tiptap-editor@latest/lib/style.css';\n  doc.head.appendChild(link);\n\n  if (doc) {\n    doc.open();\n    doc.write(content);\n    doc.close();\n  }\n\n  if (frameWindow) {\n    iframe.addEventListener('load', function () {\n      try {\n        setTimeout(() => {\n          frameWindow.focus();\n          try {\n            if (!frameWindow.document.execCommand('print', false)) {\n              frameWindow.print();\n            }\n          } catch {\n            frameWindow.print();\n          }\n          frameWindow.close();\n        }, 10);\n      } catch (err) {\n        console.error(err);\n      }\n\n      setTimeout(() => {\n        document.body.removeChild(iframe);\n      }, 100);\n    });\n  }\n}\n\nexport function printEditorContent(editor: Editor) {\n  const content = editor.getHTML();\n\n  if (content) {\n    printHtml(content);\n    return true;\n  }\n  return false;\n}\n","import { Extension } from '@tiptap/core';\n\nimport { ActionButton } from '@/components';\nimport { printEditorContent } from '@/utils/pdf';\n\nexport const ExportPdf = Extension.create<any>({\n  name: 'exportPdf',\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      button: ({ editor, t }: any) => ({\n        component: ActionButton,\n        componentProps: {\n          action: () => {\n            printEditorContent(editor);\n          },\n          icon: 'ExportPdf',\n          tooltip: t('editor.exportPdf.tooltip'),\n          isActive: () => false,\n          disabled: false,\n        },\n      }),\n    };\n  },\n});\n","import { useRef, useState } from 'react';\n\nimport type { Editor } from '@tiptap/core';\nimport mammoth from 'mammoth';\n\nimport { ActionButton, useToast } from '@/components';\nimport { useLocale } from '@/locales';\nimport { hasExtension } from '@/utils/utils';\n\nfunction base64ToBlob(base64: any, mimeType: any) {\n  const byteCharacters = atob(base64.split(',')[1]);\n  const byteNumbers = Array.from({ length: byteCharacters.length });\n  for (let i = 0; i < byteCharacters.length; i++) {\n    byteNumbers[i] = byteCharacters.charCodeAt(i);\n  }\n  const byteArray = new Uint8Array(byteNumbers as any);\n  return new Blob([byteArray], { type: mimeType });\n}\n\nfunction blobToFile(blob: any, fileName: any) {\n  return new File([blob], fileName, { type: blob.type });\n}\n\ninterface ImportWordButtonProps {\n  editor: Editor\n  disabled?: boolean\n  icon?: string\n  tooltip?: string\n  shortcutKeys?: string[]\n  action?: () => boolean\n  convert?: (file: File) => Promise<string>\n  limit?: number\n  mammothOptions?: any\n}\n\nfunction ImportWordButton(props: ImportWordButtonProps) {\n  const { toast } = useToast();\n  const { t } = useLocale();\n  const [loading, setLoading] = useState(false);\n  const fileInput = useRef<HTMLInputElement>(null);\n\n  function triggerFileInput() {\n    fileInput.current?.click();\n  }\n\n  function handleFileChange(event: any) {\n    const file = event.target.files[0];\n    if (!file) {\n      return;\n    }\n    if (file.size > props.limit!) {\n      toast({\n        variant: 'destructive',\n        title: t('editor.importWord.limitSize'),\n      });\n      return;\n    }\n    importWord(file);\n  }\n\n  async function filerImage(html: string) {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(html, 'text/html');\n    const images = doc.querySelectorAll('img');\n    if (images.length === 0) {\n      return doc.body.innerHTML;\n    }\n    const hasImage = hasExtension(props.editor, 'image');\n    if (hasImage) {\n      const uploadOptions = props.editor.extensionManager.extensions.find(\n        extension => extension.name === 'importWord',\n      )?.options;\n      if (uploadOptions && typeof uploadOptions.upload === 'function') {\n        const files: File[] = [];\n        // convert base64 image to blob file\n        for (const img of images) {\n          const originalSrc = img.getAttribute('src');\n          const blob = base64ToBlob(originalSrc, 'image/jpeg');\n          const file = blobToFile(blob, 'image.jpeg');\n          files.push(file);\n        }\n        const uploadRes = await uploadOptions.upload(files);\n        // images\n        for (const [i, img] of images.entries()) {\n          img.setAttribute('src', uploadRes[i].src);\n          const parent = img.parentElement;\n          if (parent?.tagName === 'P') {\n            parent.insertAdjacentElement('beforebegin', img);\n            if (!parent.hasChildNodes() && parent.textContent === '') {\n              parent.remove();\n            }\n          }\n        }\n        return doc.body.innerHTML;\n      } else {\n        console.warn('Image Upload method found, skip image conversion');\n        return doc.body.innerHTML;\n      }\n    } else {\n      console.error('Image extension not found, unable to convert image');\n      return doc.body.innerHTML;\n    }\n  }\n\n  async function importWord(importFile: File) {\n    setLoading(true);\n    try {\n      if (props.convert) {\n        const result = await props.convert(importFile);\n        handleResult(result);\n      } else {\n        const arrayBuffer = await importFile.arrayBuffer();\n        // TODO: add messages\n        const { value } = await mammoth.convertToHtml(\n          { arrayBuffer },\n          props?.mammothOptions,\n        );\n        handleResult(value);\n      }\n    } finally {\n      setLoading(false);\n    }\n  }\n  async function handleResult(htmlResult: string) {\n    const html = await filerImage(htmlResult);\n    props.editor.chain().setContent(html, true).run();\n  }\n\n  return (\n    <div>\n      <ActionButton action={triggerFileInput}\n        disabled={props?.disabled}\n        icon={props?.icon}\n        loading={loading}\n        tooltip={props?.tooltip}\n      />\n\n      <input\n        accept=\".docx\"\n        onChange={handleFileChange}\n        ref={fileInput}\n        type=\"file\"\n        style={{\n          display: 'none',\n        }}\n      />\n    </div>\n  );\n}\n\nexport default ImportWordButton;\n","// eslint-disable-next-line import/no-named-default\nimport type { default as Mammoth } from 'mammoth';\n\nimport { Extension } from '@tiptap/core';\nimport type { GeneralOptions } from '@/types';\n\nimport ImportWordButton from '@/extensions/ImportWord/components/ImportWordButton';\n\nexport interface ImportWordOptions extends GeneralOptions<ImportWordOptions> {\n  /** Function for converting Word files to HTML */\n  convert?: (file: File) => Promise<string>\n\n  /** Function for uploading images */\n  upload?: (files: File[]) => Promise<unknown>\n\n  /**\n   * File Size limit(10 MB)\n   *\n   * @default 1024 * 1024 * 10\n   */\n  limit?: number\n  mammothOptions?: Parameters<typeof Mammoth['convertToHtml']>[1]\n}\n\nexport const ImportWord = Extension.create<ImportWordOptions>({\n  name: 'importWord',\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      upload: undefined,\n      convert: undefined,\n      limit: 1024 * 1024 * 10, // 10 MB\n      button: ({ editor, extension, t }) => {\n        const { convert, limit, mammothOptions } = extension.options;\n        return {\n          component: ImportWordButton,\n          componentProps: {\n            editor,\n            convert,\n            limit,\n            mammothOptions,\n            action: () => editor.commands.setHorizontalRule(),\n            disabled: !editor.can().setHorizontalRule(),\n            icon: 'Word',\n            shortcutKeys: ['alt', 'mod', 'S'],\n            tooltip: t('editor.importWord.tooltip'),\n          },\n        };\n      },\n    };\n  },\n});\n","const isBrowser = typeof window !== 'undefined';\n\nexport function downloadFromBlob(blob: Blob, filename: string) {\n  if (isBrowser) {\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    a.click();\n    window.URL.revokeObjectURL(url);\n    return Promise.resolve();\n  }\n\n  console.error('Download is not supported in Node.js');\n\n  return Promise.resolve();\n}\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport { Extension } from '@tiptap/core';\nimport { Packer, WidthType } from 'docx';\nimport { DocxSerializer, defaultMarks, defaultNodes } from 'prosemirror-docx';\n\nimport { ActionButton } from '@/components';\nimport type { GeneralOptions } from '@/types';\nimport { downloadFromBlob } from '@/utils/download';\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    exportWord: {\n      exportToWord: () => ReturnType\n    }\n  }\n}\nexport interface ExportWordOptions extends GeneralOptions<ExportWordOptions> {}\n\nconst nodeSerializer = {\n  ...defaultNodes,\n  hardBreak: defaultNodes.hard_break,\n  codeBlock: defaultNodes.code_block,\n  orderedList: defaultNodes.ordered_list,\n  listItem: defaultNodes.list_item,\n  bulletList: defaultNodes.bullet_list,\n  horizontalRule: defaultNodes.horizontal_rule,\n  // Requirement Buffer on browser\n  image(state: any, node: any) {\n    // No image\n    state.renderInline(node);\n    state.closeBlock(node);\n  },\n  table(state: any, node: any) {\n    state.table(node, {\n      tableOptions: {\n        width: {\n          size: 100,\n          type: WidthType.PERCENTAGE,\n        },\n      },\n    });\n  },\n};\nconst docxSerializer = new DocxSerializer(nodeSerializer, defaultMarks);\n\nexport const ExportWord = Extension.create<ExportWordOptions>({\n  name: 'exportWord',\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      button: ({ editor, t }: any) => ({\n        component: ActionButton,\n        componentProps: {\n          icon: 'ExportWord',\n          action: () => {\n            editor?.commands.exportToWord();\n          },\n          tooltip: t('editor.exportWord.tooltip'),\n          isActive: () => false,\n          disabled: false,\n        },\n      }),\n    };\n  },\n  // @ts-expect-error\n  addCommands() {\n    return {\n      exportToWord:\n        () =>\n          async ({ editor }) => {\n            const opts: any = {\n              getImageBuffer: async (src: string) => {\n                const response = await fetch(src);\n                const arrayBuffer = await response.arrayBuffer();\n                return new Uint8Array(arrayBuffer);\n              },\n            };\n\n            const wordDocument = docxSerializer.serialize(editor.state.doc as any, opts);\n\n            Packer.toBlob(wordDocument).then(blob => downloadFromBlob(new Blob([blob]), 'export-document.docx'));\n\n            return true;\n          },\n    };\n  },\n});\n","/* eslint-disable @typescript-eslint/no-unused-expressions */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { useCallback, useEffect, useState } from 'react';\n\nimport { NodeViewWrapper } from '@tiptap/react';\nimport cls from 'clsx';\n\nimport { useLocale } from '@/locales';\nimport { useEditableEditor } from '@/store/editableEditor';\n\nimport styles from './index.module.scss';\n\nfunction arrToTree(tocs: any) {\n  const result = [] as any;\n  const levels = [result];\n\n  tocs.forEach((o: any) => {\n    let offset = -1;\n    let parent = levels[o.level + offset];\n\n    while (!parent) {\n      offset -= 1;\n      parent = levels[o.level + offset];\n    }\n\n    parent.push({ ...o, children: (levels[o.level] = []) });\n  });\n\n  return result;\n}\n\nexport function NodeViewTableOfContent({ editor }: any) {\n  const isEditable = useEditableEditor();\n  const [items, setItems] = useState([]);\n  const { t } = useLocale();\n\n  const handleUpdate = useCallback(() => {\n    const headings = [] as any;\n    const transaction = editor.state.tr;\n\n    editor.state.doc.descendants((node: any, pos: any) => {\n      if (node.type.name === 'heading') {\n        const id = `heading-${headings.length + 1}`;\n\n        if (node.attrs.id !== id) {\n          transaction.setNodeMarkup(pos, undefined, {\n            ...node.attrs,\n            id,\n          });\n        }\n\n        headings.push({\n          level: node.attrs.level,\n          text: node.textContent,\n          id,\n        });\n      }\n    });\n\n    transaction.setMeta('addToHistory', false);\n    transaction.setMeta('preventUpdate', true);\n    editor.view.dispatch(transaction);\n\n    setItems(headings);\n    editor.eventEmitter && editor.eventEmitter.emit('TableOfContents', arrToTree(headings));\n  }, [editor]);\n\n  useEffect(() => {\n    if (!editor) {\n      return;\n    }\n\n    if (!editor.options.editable) {\n      handleUpdate();\n      return;\n    }\n\n    editor.on('update', handleUpdate);\n\n    return () => {\n      editor.off('update', handleUpdate);\n    };\n  }, [editor, handleUpdate]);\n\n  useEffect(() => {\n    handleUpdate();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <NodeViewWrapper className={cls('tableOfContent', styles.toc, isEditable && styles.visible)}>\n      {isEditable\n        ? (\n          <div style={{ position: 'relative' }}>\n            <p className=\"text-[20px] richtext-mb-[8px] richtext-font-semibold\">\n              {t('editor.table_of_content')}\n            </p>\n\n            <ul className={styles.list}>\n              {items.map((item: any, index) => (\n                <li className={styles.item}\n                  key={`table-of-content-${index}`}\n                  style={{ paddingLeft: `${item.level - 1}rem` }}\n                >\n                  <a href={`#${item.id}`}>\n                    {item.text}\n                  </a>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )\n        : null}\n    </NodeViewWrapper>\n  );\n}\n","/* eslint-disable prefer-spread */\nimport { useEffect, useState } from 'react';\n\nimport type { Editor } from '@tiptap/core';\n\nexport function useActive(editor: Editor, ...args: any[]) {\n  const [active, toggleActive] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      toggleActive(editor.isActive.apply(editor, args as any));\n    };\n\n    editor.on('selectionUpdate', listener);\n    editor.on('transaction', listener);\n\n    return () => {\n      editor.off('selectionUpdate', listener);\n      editor.off('transaction', listener);\n    };\n  }, [editor, args, toggleActive]);\n\n  return active;\n}\n","import React, { useCallback } from 'react';\n\nimport type { Editor } from '@tiptap/core';\nimport { ActionButton } from '@/components/ActionButton';\nimport { TableOfContents } from '@/extensions/TableOfContent/TableOfContent';\nimport { useActive } from '@/hooks/useActive';\n\nexport function TableOfContentActionButton({ editor, icon, tooltip }: { editor: Editor, tooltip: string, icon: string }) {\n  const isTaskListActive = useActive(editor, TableOfContents.name);\n\n  const tableOfContent = useCallback(() => {\n    if (isTaskListActive) {\n      editor.chain().focus().removeTableOfContents().run();\n      return;\n    }\n    editor.chain().focus().setTableOfContents().run();\n  }, [editor, isTaskListActive]);\n\n  return (\n    <ActionButton\n      action={tableOfContent}\n      isActive={() => isTaskListActive || false}\n      icon={icon}\n      tooltip={tooltip}\n    />\n  );\n}\n","import type { Editor } from '@tiptap/core';\nimport type { Node } from '@tiptap/pm/model';\nimport type { EditorState } from '@tiptap/pm/state';\n\nexport function isTitleNode(node: Node): boolean {\n  return node && node.type.name === 'title';\n}\n\nexport function isBulletListNode(node: Node): boolean {\n  return node && node.type.name === 'bulletList';\n}\n\nexport function isOrderedListNode(node: Node): boolean {\n  return node && node.type.name === 'orderedList';\n}\n\nexport function isTodoListNode(node: Node): boolean {\n  return node && node.type.name === 'taskList';\n}\n\nexport function isListNode(node: Node): boolean {\n  return isBulletListNode(node) || isOrderedListNode(node) || isTodoListNode(node);\n}\n\nexport function getCurrentNode(state: EditorState): any {\n  const $head = state.selection.$head;\n  let node = null;\n\n  for (let d = $head.depth; d > 0; d--) {\n    node = $head.node(d);\n  }\n\n  return node;\n}\n\nexport function getNodeAtPos(state: EditorState, pos: number): any {\n  const $head = state.doc.resolve(pos);\n  let node = null;\n\n  for (let d = $head.depth; d > 0; d--) {\n    node = $head.node(d);\n  }\n\n  return node;\n}\n\nexport function isInCustomNode(state: EditorState, nodeName: string): boolean {\n  if (!state.schema.nodes[nodeName])\n    return false;\n\n  const $head = state.selection.$head;\n  for (let d = $head.depth; d > 0; d--) {\n    if ($head.node(d).type === state.schema.nodes[nodeName]) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function isInCodeBlock(state: EditorState): boolean {\n  return isInCustomNode(state, 'codeBlock');\n}\n\nexport function isInTitle(state: EditorState): boolean {\n  if (state?.selection?.$head?.pos === 0)\n    return true;\n  return isInCustomNode(state, 'title');\n}\n\nexport function isInCallout(state: EditorState): boolean {\n  return isInCustomNode(state, 'callout');\n}\n\nexport function findNode(editor: Editor, name: string) {\n  const content = editor.getJSON();\n  const queue = [content];\n  const res = [];\n\n  while (queue.length > 0) {\n    const node = queue.shift() as any;\n\n    if (node.type === name) {\n      res.push(node);\n    }\n\n    if (node.content && node.content.length > 0) {\n      queue.push(...node.content);\n    }\n  }\n\n  return res;\n}\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport { Node, mergeAttributes } from '@tiptap/core';\nimport { ReactNodeViewRenderer } from '@tiptap/react';\n\nimport { NodeViewTableOfContent } from '@/extensions/TableOfContent/components/NodeViewTableOfContent';\nimport { TableOfContentActionButton } from '@/extensions/TableOfContent/components/TableOfContentActionButton';\nimport { findNode, isTitleNode } from '@/utils/node';\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    tableOfContents: {\n      setTableOfContents: () => ReturnType\n      removeTableOfContents: () => ReturnType\n    }\n  }\n}\n\ninterface Options {\n  onHasOneBeforeInsert?: () => void\n}\n\nexport const TableOfContents = Node.create<Options>({\n  name: 'tableOfContents',\n  group: 'block',\n  atom: true,\n\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      onHasOneBeforeInsert: () => {\n        return;\n      },\n      resizable: true,\n      lastColumnResizable: true,\n      allowTableNodeSelection: false,\n      button: ({ editor, t }: any) => ({\n        component: TableOfContentActionButton,\n        componentProps: {\n          disabled: false,\n          icon: 'BookMarked',\n          tooltip: t('editor.table.tooltip'),\n          editor,\n        },\n      }),\n    };\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'toc',\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['toc', mergeAttributes(HTMLAttributes)];\n  },\n\n  addNodeView() {\n    return ReactNodeViewRenderer(NodeViewTableOfContent);\n  },\n\n  // @ts-expect-error\n  addCommands() {\n    return {\n      setTableOfContents:\n        () =>\n          ({ commands, editor, view }) => {\n            const nodes = findNode(editor, this.name);\n\n            if (nodes.length > 0) {\n              // @ts-expect-error\n              this.options.onHasOneBeforeInsert();\n              return;\n            }\n\n            const titleNode = view.props.state.doc.content.firstChild as any;\n\n            if (isTitleNode(titleNode)) {\n              const pos = ((titleNode.firstChild && titleNode.firstChild.nodeSize) || 0) + 1;\n              return commands.insertContentAt(pos, { type: this.name });\n            }\n\n            return commands.insertContent({\n              type: this.name,\n            });\n          },\n      removeTableOfContents: () =>\n        ({ state, dispatch }: any) => {\n          const { tr } = state;\n          const nodeType = state.schema.nodes.tableOfContents;\n\n          state.doc.descendants((node: any, pos: any) => {\n            if (node.type === nodeType) {\n              const from = pos;\n              const to = pos + node.nodeSize;\n              tr.delete(from, to);\n            }\n          });\n\n          if (tr.docChanged) {\n            dispatch(tr);\n            return true;\n          }\n\n          return false;\n        },\n    };\n  },\n\n  addGlobalAttributes() {\n    return [\n      {\n        types: ['heading'],\n        attributes: {\n          id: {\n            default: null,\n          },\n        },\n      },\n    ];\n  },\n});\n","import React, { useMemo } from 'react';\n\nimport { ActionButton, IconComponent } from '@/components';\nimport { Popover, PopoverContent, PopoverTrigger, Toggle, Tooltip, TooltipContent, TooltipTrigger } from '@/components/ui';\nimport type { ButtonViewReturnComponentProps } from '@/types';\nimport { getShortcutKey } from '@/utils/plateform';\n\nexport interface Item {\n  title: string\n  icon?: any\n  isActive: NonNullable<ButtonViewReturnComponentProps['isActive']>\n  action?: ButtonViewReturnComponentProps['action']\n  style?: React.CSSProperties\n  shortcutKeys?: string[]\n  disabled?: boolean\n  divider?: boolean\n  default?: boolean\n}\ninterface IPropsTextDirectionButton {\n  editor: any\n  disabled?: boolean\n  color?: string\n  maxHeight?: string | number\n  icon?: any\n  tooltip?: string\n  items?: Item[]\n}\n\nfunction TextDirectionButton(props: IPropsTextDirectionButton) {\n  const active = useMemo(() => {\n    const find: any = props?.items?.find((k: any) => k.isActive());\n    if (find && !find.default) {\n      return {\n        ...find,\n        icon: find.icon ? find.icon : props.icon,\n      };\n    }\n    const item: Item = {\n      title: props?.tooltip as any,\n      icon: props.icon,\n      isActive: () => false,\n    };\n\n    return item;\n  }, [props]);\n\n  return (\n    <Popover modal>\n      <PopoverTrigger asChild\n        disabled={props?.disabled}\n      >\n        <ActionButton\n          customClass=\"!richtext-w-12 richtext-h-12\"\n          disabled={props?.disabled}\n          icon={props?.icon}\n          tooltip={props?.tooltip}\n        >\n          <IconComponent className=\"richtext-ml-1 richtext-size-3 richtext-text-zinc-500\"\n            name=\"MenuDown\"\n          />\n        </ActionButton>\n      </PopoverTrigger>\n\n      <PopoverContent\n        align=\"start\"\n        className=\"richtext-flex richtext-w-full richtext-min-w-4 richtext-flex-row richtext-gap-1 !richtext-p-[4px]\"\n        side=\"bottom\"\n      >\n        {props?.items?.map((item, index) => {\n          return (\n            <Tooltip key={`text-align-${index}`}>\n              <TooltipTrigger asChild>\n                <Toggle\n                  className=\"richtext-size-7 richtext-p-1\"\n                  data-state={active.title === item.title ? 'on' : 'off'}\n                  onClick={item?.action}\n                  pressed={active.title === item.title}\n                  size=\"sm\"\n                >\n                  {item?.icon && <IconComponent name={item.icon} />}\n                </Toggle>\n              </TooltipTrigger>\n\n              <TooltipContent className=\"richtext-flex richtext-flex-col richtext-items-center\">\n                <span>\n                  {item.title}\n                </span>\n\n                {!!item.shortcutKeys?.length && (\n                  <span>\n                    {item.shortcutKeys?.map(item => getShortcutKey(item)).join(' ')}\n                  </span>\n                )}\n              </TooltipContent>\n            </Tooltip>\n          );\n        })}\n      </PopoverContent>\n    </Popover>\n  );\n}\n\nexport default TextDirectionButton;\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport { Extension } from '@tiptap/core';\n\nimport TextDirectionButton from '@/extensions/TextDirection/components/TextDirectionButton';\n\nconst TextDirection = Extension.create({\n  name: 'text-direction',\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      types: ['heading', 'paragraph'],\n      directions: ['auto', 'ltr', 'rtl'],\n      defaultDirection: 'auto',\n      button({\n        editor,\n        extension,\n        t,\n      }: {\n        editor: any\n        extension: Extension\n        t: (...args: any[]) => string\n      }) {\n        const directions = (extension.options?.directions as any[]) || [];\n\n        const iconMap = {\n          auto: 'TextDirection',\n          ltr: 'LeftToRight',\n          rtl: 'RightToLeft',\n        } as any;\n\n        const items = directions.map(k => ({\n          title: t(`editor.textDirection.${k}.tooltip`),\n          icon: iconMap[k],\n          isActive: () => false,\n          action: () => {\n            if (k === 'auto') {\n              editor.commands?.unsetTextDirection?.();\n              return;\n            }\n\n            editor.commands?.setTextDirection?.(k);\n          },\n          disabled: false,\n        }));\n        const disabled = items.filter(k => k.disabled).length === items.length;\n\n        return {\n          component: TextDirectionButton,\n          componentProps: {\n            icon: 'TextDirection',\n            tooltip: t('editor.textDirection.tooltip'),\n            disabled,\n            items,\n          },\n        };\n      },\n    };\n  },\n  addGlobalAttributes() {\n    return [\n      {\n        types: this.options.types,\n        attributes: {\n          dir: {\n            default: this.options.defaultDirection,\n            parseHTML: (element: any) => {\n              if (element.attributes.dir && this.options.directions.includes(element.attributes.dir)) {\n                return element.attributes.dir.value;\n              } else {\n                return this.options.defaultDirection;\n              }\n            },\n            renderHTML: (attributes) => {\n              return { dir: attributes.dir };\n            },\n          },\n        },\n      },\n    ];\n  },\n  // @ts-expect-error\n  addCommands() {\n    return {\n      setTextDirection: (direction: any) => ({ commands }: any) => {\n        if (!this.options.directions.includes(direction)) {\n          return false;\n        }\n        return this.options.types.every((type: any) => commands.updateAttributes(type, { dir: direction }));\n      },\n      unsetTextDirection: () => ({ commands }: any) => {\n        return this.options.types.every((type: any) => commands.resetAttributes(type, 'dir'));\n      },\n    };\n  },\n});\n\nexport { TextDirection };\n","/* eslint-disable @typescript-eslint/no-unused-expressions */\n/* eslint-disable @typescript-eslint/no-unsafe-argument */\n/* eslint-disable react/display-name */\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\n\nimport type { Editor } from '@tiptap/core';\nimport clsx from 'clsx';\nimport scrollIntoView from 'scroll-into-view-if-needed';\n\nimport styles from './index.module.scss';\n\ninterface IProps {\n  editor: Editor\n  items: Array<string>\n  command: any\n}\n\nexport const NodeViewMentionList: React.FC<IProps> = forwardRef((props, ref) => {\n  const $container: any = useRef<HTMLDivElement>(null);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  const selectItem = (index: any) => {\n    const userName = props.items[index];\n    if (!userName)\n      return;\n    props.command({ id: userName, label: userName });\n  };\n\n  const upHandler = () => {\n    setSelectedIndex((selectedIndex + props.items.length - 1) % props.items.length);\n  };\n\n  const downHandler = () => {\n    setSelectedIndex((selectedIndex + 1) % props.items.length);\n  };\n\n  const enterHandler = () => {\n    selectItem(selectedIndex);\n  };\n\n  useEffect(() => setSelectedIndex(0), [props.items]);\n\n  useEffect(() => {\n    if (Number.isNaN(selectedIndex + 1))\n      return;\n    const el = $container.current.querySelector(`span:nth-of-type(${selectedIndex + 1})`);\n    el && scrollIntoView(el, { behavior: 'smooth', scrollMode: 'if-needed' });\n  }, [selectedIndex]);\n\n  useImperativeHandle(ref, () => ({\n    onKeyDown: ({ event }: any) => {\n      if (event.key === 'ArrowUp') {\n        upHandler();\n        return true;\n      }\n\n      if (event.key === 'ArrowDown') {\n        downHandler();\n        return true;\n      }\n\n      if (event.key === 'Enter') {\n        enterHandler();\n        return true;\n      }\n\n      return false;\n    },\n  }));\n\n  return (\n    <div className={clsx('listUsers', styles.listUsers)}>\n      <div ref={$container}>\n        {props.items.length > 0\n          ? (\n            props.items.map((item, index) => (\n              <span\n                className={clsx('itemUser', styles.itemUser, index === selectedIndex ? styles.selectedUser : '')}\n                key={index}\n                onClick={() => selectItem(index)}\n              >\n                {item}\n              </span>\n            ))\n          )\n          : (\n            <div className={clsx('itemUserEmpty', styles.itemUser)}>\n              Empty\n            </div>\n          )}\n      </div>\n    </div>\n  );\n});\n","import BulitInMention from '@tiptap/extension-mention';\n// import { getMentionUser } from 'services/user'\n// import { MentionList } from '@/wrappers/mention-list'\nimport { ReactRenderer } from '@tiptap/react';\nimport tippy from 'tippy.js';\nimport { getDatasetAttribute } from '@/utils/dom-dataset';\nimport { NodeViewMentionList } from '@/extensions/Mention/components/NodeViewMentionList/NodeViewMentionList';\n\nconst MOCK_USERS = [\n  {\n    id: '1',\n    name: 'John Doe',\n  },\n  {\n    id: '2',\n    name: 'Jane Doe',\n  },\n  {\n    id: '3',\n    name: 'Alice',\n  },\n  {\n    id: '4',\n    name: 'Bob',\n  },\n];\n\nconst suggestion = {\n  items: async ({ query }: any) => {\n    const data = MOCK_USERS.map(item => item.name);\n    return data.filter(item => item.toLowerCase().startsWith(query.toLowerCase()));\n  },\n\n  render: () => {\n    let component: any;\n    let popup: any;\n\n    return {\n      onStart: (props: any) => {\n        component = new ReactRenderer(NodeViewMentionList, {\n          props,\n          editor: props.editor,\n        });\n\n        popup = tippy('body', {\n          getReferenceClientRect: props.clientRect,\n          appendTo: () => document.body,\n          content: component.element,\n          showOnCreate: true,\n          interactive: true,\n          trigger: 'manual',\n          placement: 'bottom-start',\n        });\n      },\n\n      onUpdate(props: any) {\n        component.updateProps(props);\n\n        popup[0].setProps({\n          getReferenceClientRect: props.clientRect,\n        });\n      },\n\n      onKeyDown(props: any) {\n        if (props.event.key === 'Escape') {\n          popup[0].hide();\n\n          return true;\n        }\n\n        return component.ref?.onKeyDown(props);\n      },\n\n      onExit() {\n        popup[0].destroy();\n        component.destroy();\n      },\n    };\n  },\n} as any;\n\nexport const Mention = BulitInMention.extend({\n  addAttributes() {\n    return {\n      id: {\n        default: '',\n        parseHTML: getDatasetAttribute('id'),\n      },\n      label: {\n        default: '',\n        parseHTML: getDatasetAttribute('label'),\n      },\n    };\n  },\n}).configure({\n  HTMLAttributes: {\n    class: 'mention',\n  },\n  suggestion,\n});\n","export const FileIconString = {\n  audio: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-audio-lines\"><path d=\"M2 10v3\"/><path d=\"M6 6v11\"/><path d=\"M10 3v18\"/><path d=\"M14 8v7\"/><path d=\"M18 5v13\"/><path d=\"M22 10v3\"/></svg>',\n  video: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-video\"><path d=\"m16 13 5.223 3.482a.5.5 0 0 0 .777-.416V7.87a.5.5 0 0 0-.752-.432L16 10.5\"/><rect x=\"2\" y=\"6\" width=\"14\" height=\"12\" rx=\"2\"/></svg>',\n  file: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-file\"><path d=\"M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z\"/><path d=\"M14 2v4a2 2 0 0 0 2 2h4\"/></svg>',\n  image: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-image\"><rect width=\"18\" height=\"18\" x=\"3\" y=\"3\" rx=\"2\" ry=\"2\"/><circle cx=\"9\" cy=\"9\" r=\"2\"/><path d=\"m21 15-3.086-3.086a2 2 0 0 0-2.828 0L6 21\"/></svg>',\n  pdf: `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 32 32\">\n      <path fill=\"currentColor\" d=\"M30 18v-2h-6v10h2v-4h3v-2h-3v-2zm-11 8h-4V16h4a3.003 3.003 0 0 1 3 3v4a3.003 3.003 0 0 1-3 3m-2-2h2a1 1 0 0 0 1-1v-4a1 1 0 0 0-1-1h-2zm-6-8H6v10h2v-3h3a2.003 2.003 0 0 0 2-2v-3a2 2 0 0 0-2-2m-3 5v-3h3l.001 3z\"></path>\n      <path fill=\"currentColor\" d=\"M22 14v-4a.91.91 0 0 0-.3-.7l-7-7A.9.9 0 0 0 14 2H4a2.006 2.006 0 0 0-2 2v24a2 2 0 0 0 2 2h16v-2H4V4h8v6a2.006 2.006 0 0 0 2 2h6v2Zm-8-4V4.4l5.6 5.6Z\"></path>\n    </svg>`,\n  word: `<svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"1em\"\n      height=\"1em\"\n      className=\"icon\"\n      viewBox=\"0 0 1024 1024\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M679.253 402.364 618.77 561.015l-60.348-158.651a30.04 30.04 0 0 0-30.447-18.637 29.76 29.76 0 0 0-30.447 18.637l-60.416 158.651-60.416-158.651a30.515 30.515 0 0 0-38.843-17.272 28.945 28.945 0 0 0-17.954 37.547l88.815 233.267c4.369 11.469 15.7 19.115 28.398 19.115a30.31 30.31 0 0 0 28.468-19.115l62.395-163.908 62.396 163.84c4.437 11.605 15.701 19.183 28.4 19.183a30.31 30.31 0 0 0 28.466-19.115l88.747-233.267a28.945 28.945 0 0 0-17.886-37.547 30.447 30.447 0 0 0-38.912 17.272zm219.478 395.605-51.883-29.218c-28.672-16.18-52.224-3.072-52.224 29.082v.273H643.209a29.833 29.833 0 0 0-30.31 29.354c0 16.18 13.584 29.218 30.31 29.218h151.825c1.092 30.516 24.03 43.077 52.224 27.648l51.063-27.989c29.013-15.906 29.15-42.189.41-58.368\"\n      />\n      <path\n        fill=\"currentColor\"\n        d=\"m810.667 913.135-.478.068H201.796c-19.865 0-36.727-11.673-36.727-25.6v-618.36h154.965c51.268 0 92.911-39.39 92.911-87.858v-87.86H810.19c19.797 0 36.522 11.742 36.522 25.669V739.26h61.987V119.262c0-46.421-44.169-84.241-98.51-84.241H328.364l-225.28 194.56v658.09c0 46.285 44.236 84.105 98.713 84.105H810.19c43.759 0 80.554-24.713 93.32-58.573h-92.842zM350.89 94.89v86.562c0 16.11-13.858 29.286-30.925 29.286H216.815L350.959 94.891z\"\n      />\n    </svg>`,\n  excel: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-sheet\"><rect width=\"18\" height=\"18\" x=\"3\" y=\"3\" rx=\"2\" ry=\"2\"/><line x1=\"3\" x2=\"21\" y1=\"9\" y2=\"9\"/><line x1=\"3\" x2=\"21\" y1=\"15\" y2=\"15\"/><line x1=\"9\" x2=\"9\" y1=\"9\" y2=\"21\"/><line x1=\"15\" x2=\"15\" y1=\"9\" y2=\"21\"/></svg>',\n  ppt: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-table-properties\"><path d=\"M15 3v18\"/><rect width=\"18\" height=\"18\" x=\"3\" y=\"3\" rx=\"2\"/><path d=\"M21 9H3\"/><path d=\"M21 15H3\"/></svg>'\n} as any;\n","import { LucideAudioLines, LucideFile, LucideImage, LucideSheet, LucideTableProperties, LucideVideo } from 'lucide-react';\n// import ReactDOMServer from 'react-dom/server';\n\nimport { ExportPdf } from '@/components/icons/ExportPdf';\nimport ExportWord from '@/components/icons/ExportWord';\nimport { FileIconString } from '@/extensions/Attachment/components/NodeViewAttachment/FileIconString';\nimport { normalizeFileType } from '@/utils/file';\n\nfunction iconToProseMirror(typeIcon: any) {\n  // Render SVG as a static string\n  const svgString = FileIconString[typeIcon];\n\n  // Parse the string into ProseMirror-compatible structure\n  const parser = new DOMParser();\n  const svgDocument = parser.parseFromString(svgString, 'image/svg+xml');\n  const svgElement = svgDocument.documentElement;\n\n  const iconToReturn = [\n    'svg',\n    {\n      ...Array.from(svgElement.attributes).reduce((acc: any, attr: any) => {\n        acc[attr.name] = attr.value;\n        return acc;\n      }, {}),\n    },\n  ];\n\n  Array.from(svgElement.childNodes).forEach((child: any) => {\n    if (child.nodeType === 1) {\n      // Element node\n      const childElement = [\n        child.tagName.toLowerCase(),\n        Array.from(child.attributes).reduce((acc: any, attr: any) => {\n          acc[attr.name] = attr.value;\n          return acc;\n        }, {}),\n      ];\n\n      if (child.textContent) {\n        childElement.push(child.textContent);\n      }\n\n      iconToReturn.push(childElement);\n    }\n  });\n\n  return iconToReturn;\n}\n\n// React components for rendering directly in JSX\nconst icons = {\n  audio: <LucideAudioLines />,\n  video: <LucideVideo />,\n  file: <LucideFile />,\n  image: <LucideImage />,\n  pdf: <ExportPdf />,\n  word: <ExportWord />,\n  excel: <LucideSheet />,\n  ppt: <LucideTableProperties />,\n};\n\nexport function getFileTypeIcon(fileType: string, forProseMirror = false) {\n  const type = normalizeFileType(fileType);\n\n  const icon = icons[type] || <></>;\n\n  // Return ProseMirror-compatible structure or React component\n  return forProseMirror ? iconToProseMirror(type) : icon;\n}\n","/* eslint-disable no-constant-binary-expression */\n/* eslint-disable @typescript-eslint/no-unused-expressions */\n/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { useCallback, useEffect, useRef, useState } from 'react';\n\nimport { NodeViewWrapper } from '@tiptap/react';\nimport clsx from 'clsx';\n\nimport { ActionButton } from '@/components';\nimport { useLocale } from '@/locales';\nimport { useEditableEditor } from '@/store/editableEditor';\nimport { extractFileExtension, extractFilename, normalizeFileSize } from '@/utils/file';\n\nimport { getFileTypeIcon } from './FileIcon';\nimport styles from './index.module.scss';\n\nexport function NodeViewAttachment({ editor, node, updateAttributes, deleteNode, extension }: any) {\n  const $upload: any = useRef<HTMLInputElement>(null);\n\n  const isEditable = useEditableEditor();\n\n  const { hasTrigger, fileName, fileSize, fileExt, fileType, url, error } = node.attrs;\n  const [loading, setLoading] = useState(false);\n  const { t } = useLocale();\n\n  const upload = extension?.options?.upload;\n\n  const selectFile = useCallback(() => {\n    if (!isEditable || url)\n      return;\n    isEditable && $upload.current.click();\n  }, [isEditable, url]);\n\n  const handleFile = useCallback(\n    async (e: any) => {\n      const file = e.target.files && e.target.files[0];\n      if (!file)\n        return;\n\n      const fileInfo = {\n        fileName: extractFilename(file.name),\n        fileSize: file.size,\n        fileType: file.type,\n        fileExt: extractFileExtension(file.name),\n      };\n      setLoading(true);\n\n      // if (file.size > FILE_CHUNK_SIZE) {\n      //   toggleShowProgress(true)\n      // }\n\n      try {\n        const url = await upload(file);\n        updateAttributes({ ...fileInfo, url });\n        setLoading(false);\n      } catch (error: any) {\n        updateAttributes({ error: `File upload fail: ${error && error.message}` || 'Unknown error' });\n        setLoading(false);\n\n        $upload.current.value = '';\n      }\n    },\n    [setLoading, updateAttributes],\n  );\n\n  useEffect(() => {\n    if (!url && !hasTrigger) {\n      selectFile();\n      updateAttributes({ hasTrigger: true });\n    }\n  }, [url, hasTrigger, selectFile, updateAttributes]);\n\n  const onDeleteAttachment = useCallback(() => deleteNode(), [editor]);\n\n  if (isEditable && !url) {\n    return (\n      <NodeViewWrapper>\n        <div className={clsx(styles.wrap, 'render-wrapper')}>\n          <p onClick={selectFile}\n            style={{ cursor: 'pointer' }}\n          >\n            {loading\n              ? (\n                <span>\n                  {t('editor.attachment.uploading')}\n                </span>\n              )\n              : (\n                <span>\n                  {t('editor.attachment.please_upload')}\n                </span>\n              )}\n          </p>\n\n          <input hidden\n            onChange={handleFile}\n            ref={$upload}\n            type=\"file\"\n          />\n        </div>\n      </NodeViewWrapper>\n    );\n  }\n\n  if (url) {\n    return (\n      <NodeViewWrapper>\n        <div className={clsx(styles.wrap, 'render-wrapper')}\n          onClick={selectFile}\n        >\n          <div className=\"richtext-flex richtext-items-center richtext-gap-[4px]\">\n            <span>\n              {getFileTypeIcon(fileType)}\n            </span>\n\n            <span>\n              {fileName}\n              .\n              {fileExt}\n            </span>\n\n            <span>\n              (\n              {normalizeFileSize(fileSize)}\n              )\n            </span>\n          </div>\n\n          <ActionButton\n            action={onDeleteAttachment}\n            icon=\"Trash2\"\n            tooltip={t('editor.delete')}\n          />\n        </div>\n      </NodeViewWrapper>\n    );\n  }\n\n  if (error !== 'null') {\n    return (\n      <NodeViewWrapper>\n        <div className={clsx(styles.wrap, 'render-wrapper')}\n          onClick={selectFile}\n        >\n          <p>\n            {error}\n          </p>\n        </div>\n      </NodeViewWrapper>\n    );\n  }\n\n  return <></>;\n}\n","/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport { Node, mergeAttributes } from '@tiptap/core';\nimport { ReactNodeViewRenderer } from '@tiptap/react';\n\nimport { ActionButton } from '@/components';\nimport { getFileTypeIcon } from '@/extensions/Attachment/components/NodeViewAttachment/FileIcon';\nimport { NodeViewAttachment } from '@/extensions/Attachment/components/NodeViewAttachment/NodeViewAttachment';\nimport type { GeneralOptions } from '@/types';\nimport { getDatasetAttribute } from '@/utils/dom-dataset';\nimport { normalizeFileSize } from '@/utils/file';\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    attachment: {\n      setAttachment: (attrs?: unknown) => ReturnType\n    }\n  }\n}\n\nexport interface AttachmentOptions extends GeneralOptions<AttachmentOptions> {\n  /** Function for uploading files */\n  upload?: (file: File) => Promise<string>\n}\n\nexport const Attachment = Node.create<AttachmentOptions>({\n  name: 'attachment',\n  content: '',\n  marks: '',\n  group: 'block',\n  selectable: true,\n  atom: true,\n  draggable: true,\n\n  addOptions() {\n    return {\n      ...this.parent?.(),\n      HTMLAttributes: {\n        class: 'attachment',\n      },\n      button: ({ editor, t }: any) => ({\n        component: ActionButton,\n        componentProps: {\n          action: () => editor.chain().focus().setAttachment().run(),\n          isActive: () => false,\n          disabled: false,\n          icon: 'Attachment',\n          tooltip: t('editor.attachment.tooltip'),\n        },\n      }),\n    };\n  },\n\n  parseHTML() {\n    return [{ tag: 'div[class=attachment]' }];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    // Destructure and provide fallback defaults\n    const {\n      url = '',\n      fileName = '',\n      fileSize = '',\n      fileType = '',\n      fileExt = '',\n    } = HTMLAttributes || {};\n\n    // Validate attributes and merge safely\n    const mergedAttributes = mergeAttributes(\n      // @ts-expect-error\n      this.options.HTMLAttributes || {},\n      HTMLAttributes || {},\n    );\n\n    // Return the structured array\n    return [\n      'div',\n      mergedAttributes,\n      url\n        ? [\n          'a',\n          { href: url || '#' },\n          [\n            'span',\n            { class: 'attachment__icon' },\n            getFileTypeIcon(fileType, true),\n          ],\n          [\n            'span',\n            { class: 'attachment__text' },\n            `${fileName}.${fileExt} (${normalizeFileSize(fileSize)})`,\n          ],\n        ]\n        : ['div', { class: 'attachment__placeholder' }],\n    ];\n  },\n\n  addAttributes() {\n    return {\n      fileName: {\n        default: null,\n        parseHTML: getDatasetAttribute('filename'),\n      },\n      fileSize: {\n        default: null,\n        parseHTML: getDatasetAttribute('filesize'),\n      },\n      fileType: {\n        default: null,\n        parseHTML: getDatasetAttribute('filetype'),\n      },\n      fileExt: {\n        default: null,\n        parseHTML: getDatasetAttribute('fileext'),\n      },\n      url: {\n        default: null,\n        parseHTML: getDatasetAttribute('url'),\n      },\n      hasTrigger: {\n        default: false,\n        parseHTML: element => getDatasetAttribute('hastrigger')(element) === 'true',\n      },\n      error: {\n        default: null,\n        parseHTML: getDatasetAttribute('error'),\n      },\n    };\n  },\n\n  addCommands() {\n    return {\n      setAttachment:\n        (attrs = {}) =>\n          ({ chain }) => {\n            // @ts-expect-error\n            return chain().insertContent({ type: this.name, attrs }).run();\n          },\n    };\n  },\n\n  addNodeView() {\n    return ReactNodeViewRenderer(NodeViewAttachment);\n  },\n});\n"],"names":["ActionMenuButton","React","asChild","props","ref","Icon","icons","Tooltip","jsx","TooltipTrigger","Slot","Button","jsxs","TooltipContent","_a","getShortcutKeys","Bold","TiptapBold","editor","t","ActionButton","Italic","TiptapItalic","Underline","TiptapUnderline","Strike","TiptapStrike","Code","TiptapCode","highlighter","highlighterPromise","loadingLanguages","loadingThemes","getShiki","loadHighlighter","opts","themes","theme","bundledThemes","langs","lang","bundledLanguages","createHighlighter","h","loadTheme","loadLanguage","language","initHighlighter","doc","name","defaultTheme","defaultLanguage","codeBlocks","findChildren","node","block","languages","getDecorations","decorations","from","themeToApply","tokens","line","token","to","decoration","Decoration","DecorationSet","ShikiPlugin","shikiPlugin","Plugin","PluginKey","view","ShikiPluginView","tr","_","transaction","decorationSet","oldState","newState","oldNodeName","newNodeName","oldNodes","newNodes","didChangeSomeCodeBlock","step","state","CodeBlockActiveButton","action","onClick","useMemo","MAP_LANGUAGE_CODE_LABELS","DropdownMenu","DropdownMenuTrigger","DropdownMenuContent","item","DropdownMenuItem","Select","SelectPrimitive","SelectValue","SelectTrigger","className","children","cn","ChevronDown","SelectScrollUpButton","ChevronUp","SelectScrollDownButton","SelectContent","position","SelectLabel","SelectItem","Check","SelectSeparator","useCopy","isCopied","setIsCopied","useState","text","error","NodeViewCodeBlock","attrs","updateAttributes","extension","copyToClipboard","listLang","DEFAULT_LANGUAGE_CODE_BLOCK","isEditable","useEditableEditor","isPrint","_b","$container","useRef","deleteMe","useCallback","deleteNode","CodeBlock","NodeViewWrapper","clsx","styles","CopyCheck","Copy","IconComponent","value","index","NodeViewContent","CodeBlockExt","_c","ReactNodeViewRenderer","FontFamilyButton","useLocale","active","find","k","style","Fragment","DropdownMenuCheckboxItem","DropdownMenuSeparator","FontFamily","FontFamilyTiptap","DEFAULT_FONT_FAMILY_LIST","extensions","fontFamilyList","ensureNameValueOptions","baseKitExt","items","font","disabled","HeadingButton","DropdownMenuShortcut","getShortcutKey","Heading","TiptapHeading","levels","level","TextAlignMenuButton","Popover","PopoverTrigger","PopoverContent","Toggle","TextAlign","TiptapTextAlign","alignments","shortcutKeysMap","iconMap","FontSizeMenuButton","FontSize","Extension","DEFAULT_FONT_SIZE_LIST","fontSizes","DEFAULT_FONT_SIZE_VALUE","defaultFontSize","fontSize","element","attributes","chain","IconC","fill","ColorActionButton","selectedColor","setSelectedColor","onChange","color","toggleColor","setSelectedColorDebounce","debounce","ColorPicker","Color","TiptapColor","Highlight","TiptapHighlight","HighlightActionButton","BulletList","TiptapBulletList","Clear","Node","OrderedList","TiptapOrderedList","TaskList","TiptapTaskList","TaskItem","Blockquote","TiptapBlockquote","LinkEditPopover","open","setOpen","onSetLink","link","openInNewTab","LinkEditBlock","Link","TiptapLink","HTMLAttributes","mergeAttributes","pos","schema","range","getMarkRange","$start","$end","TextSelection","HorizontalRule","TiptapHorizontalRule","HistoryActionButton","icon","tooltip","customClass","tooltipOptions","isActive","historys","History","TiptapHistory","Document","TiptapDocument","ColumnActionButton","Selection","TextDropdown","menus","activeItem","TextBubble","nodeEqualsType","types","TrailingNode","plugin","disabledNodes","__","shouldInsertNodeAtEnd","endPosition","type","lastNode","BaseKit","Placeholder","localeActions","_d","_e","ext","Focus","Text","Gapcursor","Dropcursor","CharacterCount","Paragraph","HardBreak","ListItem","TextStyle","Column","MultiColumn","SubAndSuperScript","subscript","superscript","subBtn","superBtn","TiptapSubscript","TiptapSuperscript","ActionMoreButton","MenuDown","MoreMark","Indent","IndentProps","identAttr","createIndentCommand","percentageToDecimal","percentageString","LineHeightDropdown","setValue","toggleLightheight","key","LineHeights","b","e","ALLOWED_NODE_TYPES","setTextLineHeight","lineHeight","selection","AllSelection","tasks","lineHeightValue","DEFAULT_LINE_HEIGHT","nodeType","task","createLineHeightCommand","dispatch","LineHeight","DEFAULT_LINE_HEIGHT_LIST","commands","actionDialogVideo","id","dispatchEvent","EVENTS","renderGroups","groups","Image","actionDialogImage","Video","CommandsList","selectedCommandIndex","setSelectedCommandIndex","selectedGroupIndex","setSelectedGroupIndex","scrollContainer","activeItemRefs","useImperativeHandle","onKeyDown","useEffect","activeItemIndex","event","upHandler","downHandler","enterHandler","newCommandIndex","newGroupIndex","selectItem","groupIndex","commandIndex","command","createCommandClickHandler","setActiveItemRef","el","group","CommandsList$1","forwardRef","extensionName","popup","SlashCommand","tippy","Suggestion","$from","isRootDepth","isParagraph","isStartOfNode","isInColumn","afterContent","isValidAfterContent","query","labelNormalized","queryNormalized","aliases","alias","labelMatch","aliasMatch","component","scrollHandler","ReactRenderer","getReferenceClientRect","rect","yPos","diff","setCellBackgroundMarkup","backgroundColor","nodeAttrs","updateCellBackground","options","CellSelection","createCellBackgroundCommand","TableCellBackground","mobileRE","notMobileRE","tabletRE","isMobile","ua","createArray","length","CreateTablePopover","withHeaderRow","setWithHeaderRow","tableGridSize","setTableGridSize","TABLE_MAX_GRID_SIZE","TABLE_INIT_GRID_SIZE","selectedTableGridSize","setSelectedTableGridSize","TABLE_DEFAULT_SELECTED_GRID_SIZE","selectTableGridSize","rows","cols","prev","onMouseDown","resetTableGridSize","row","col","TableActionButton","createTable","Table","TiptapTable","TableRow","TableHeader","TableCell","FormatPainter","marks","dom","cursorUrl","set","mouseup","mark","SearchAndReplaceButton","currentIndex","setCurrentIndex","results","setResults","searchValue","setSearchValue","replaceValue","setReplaceValue","visible","setVisible","caseSensitive","setCaseSensitive","searchExtension","SearchAndReplace","listener","preIndex","deepEqual","prevResults","listenEvent","Label","Input","Switch","updateView","regex","s","disableRegex","processSearches","searchTerm","searchResultClass","textNodesWithPosition","matches","m","r","replace","replaceTerm","rebaseNextResult","lastOffset","nextIndex","currentFrom","currentTo","offset","replaceAll","ourResults","i","rebaseNextResultResponse","gotoSearchResult","searchResults","searchResultCurrentClass","gotoIndex","result","scrollIntoView","currentResult","extensionThis","ctx","docChanged","decorationsToReturn","fromPos","toPos","EmojiPicker","EmojiPickerPrimitive","EmojiPickerSearch","SearchIcon","EmojiPickerRow","EmojiPickerEmoji","emoji","EmojiPickerCategoryHeader","category","EmojiPickerContent","LoaderIcon","EmojiPickerFooter","EmojiPickerWrap","onSelectEmoji","EmojiPickerComponent","setEmoji","$anchor","EmojiList","selectedIndex","setSelectedIndex","namesToEmoji","accu","names","emojiSearch","EXTENSION_PRIORITY_HIGHEST","EmojiPluginKey","Emoji","emojiObject","printHtml","content","iframe","frameWindow","err","printEditorContent","ExportPdf","base64ToBlob","base64","mimeType","byteCharacters","byteNumbers","byteArray","blobToFile","blob","fileName","ImportWordButton","toast","useToast","loading","setLoading","fileInput","triggerFileInput","handleFileChange","file","importWord","filerImage","html","images","hasExtension","uploadOptions","files","img","originalSrc","uploadRes","parent","importFile","handleResult","arrayBuffer","mammoth","htmlResult","ImportWord","convert","limit","mammothOptions","isBrowser","downloadFromBlob","filename","url","a","nodeSerializer","defaultNodes","WidthType","docxSerializer","DocxSerializer","defaultMarks","ExportWord","src","wordDocument","Packer","arrToTree","tocs","o","NodeViewTableOfContent","setItems","handleUpdate","headings","cls","useActive","args","toggleActive","TableOfContentActionButton","isTaskListActive","TableOfContents","tableOfContent","isTitleNode","findNode","queue","res","titleNode","TextDirectionButton","TextDirection","directions","direction","NodeViewMentionList","userName","MOCK_USERS","suggestion","Mention","BulitInMention","getDatasetAttribute","FileIconString","iconToProseMirror","typeIcon","svgString","svgElement","iconToReturn","acc","attr","child","childElement","LucideAudioLines","LucideVideo","LucideFile","LucideImage","LucideSheet","LucideTableProperties","getFileTypeIcon","fileType","forProseMirror","normalizeFileType","NodeViewAttachment","$upload","hasTrigger","fileSize","fileExt","upload","selectFile","handleFile","fileInfo","extractFilename","extractFileExtension","onDeleteAttachment","normalizeFileSize","Attachment"],"mappings":";;;;;;;;;;;;;;;;;AA8BA,MAAMA,KAAmBC,GAAM;AAAA,EAC7B,CAAC,EAAE,SAAAC,GAAS,GAAGC,EAAA,GAASC,MAAQ;;AACxB,UAAAC,IAAOC,GAAMH,EAAM,IAAI;AAG7B,6BACGI,IACC,EAAA,UAAA;AAAA,MAAC,gBAAAC,EAAAC,IAAA,EAAe,SAAO,IACrB,UAAA,gBAAAD;AAAA,QALON,IAAUQ,KAAOC;AAAA,QAKvB;AAAA,UACC,WAAU;AAAA,UACV,UAAUR,KAAA,gBAAAA,EAAO;AAAA,UACjB,KAAAC;AAAA,UACA,SAAQ;AAAA,UACP,GAAGD;AAAA,UAEJ,UAAA,gBAAAS,EAAC,OAAI,EAAA,WAAU,4EACZ,UAAA;AAAA,aAAAT,KAAA,gBAAAA,EAAO,UACL,gBAAAK,EAAA,OAAA,EAAI,WAAU,uEACZ,iCAAO,OACV;AAAA,YAGDH,KAAQ,gBAAAG,EAACH,GAAK,EAAA,WAAU,yEAAyE,CAAA;AAAA,UAAA,EACpG,CAAA;AAAA,QAAA;AAAA,MAAA,GAEJ;AAAA,MAEC,gBAAAG,EAAAK,IAAA,EACC,UAAC,gBAAAD,EAAA,OAAA,EAAI,WAAU,gGACZ,UAAA;AAAA,SAAAT,KAAA,gBAAAA,EAAO,YAAW,gBAAAK,EAAC,OACjB,EAAA,UAAAL,KAAA,gBAAAA,EAAO,SACV;AAAA,QAEC,gBAAAK,EAAA,OAAA,EAAI,WAAU,iBACZ,WAAC,GAACM,IAAAX,KAAA,gBAAAA,EAAO,iBAAP,QAAAW,EAAqB,6BAAW,QAChC,EAAA,UAAAC,GAAgBZ,KAAA,gBAAAA,EAAO,YAAY,GACtC,EACF,CAAA;AAAA,MAAA,EAAA,CACF,EACF,CAAA;AAAA,IAAA,GACF;AAAA,EAAA;AAGN,GCjEaa,KAAOC,GAAW,OAAoB;AAAA,EACjD,aAAa;;AACJ,WAAA;AAAA,MACL,IAAGH,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,QAAQ,CAAC,EAAE,QAAAI,GAAQ,GAAAC,SAAc;AAAA,QAC/B,WAAWC;AAAA,QACX,gBAAgB;AAAA,UACd,QAAQ,MAAMF,EAAO,SAAS,WAAW;AAAA,UACzC,UAAU,MAAMA,EAAO,SAAS,MAAM,KAAK;AAAA,UAC3C,UAAU,CAACA,EAAO,IAAA,EAAM,WAAW;AAAA,UACnC,MAAM;AAAA,UACN,cAAc,CAAC,OAAO,GAAG;AAAA,UACzB,SAASC,EAAE,qBAAqB;AAAA,QAAA;AAAA,MAEpC;AAAA,IACF;AAAA,EAAA;AAEJ,CAAC,GChBYE,KAASC,GAAa,OAAsB;AAAA,EACvD,aAAa;;AACJ,WAAA;AAAA,MACL,IAAGR,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,OAAO,EAAE,QAAAI,GAAQ,GAAAC,KAAwD;AAChE,eAAA;AAAA,UACL,WAAWC;AAAA,UACX,gBAAgB;AAAA,YACd,QAAQ,MAAMF,EAAO,SAAS,aAAa;AAAA,YAC3C,UAAU,MAAMA,EAAO,SAAS,QAAQ,KAAK;AAAA,YAC7C,UAAU,CAACA,EAAO,IAAA,EAAM,aAAa;AAAA,YACrC,cAAc,CAAC,OAAO,GAAG;AAAA,YACzB,MAAM;AAAA,YACN,SAASC,EAAE,uBAAuB;AAAA,UAAA;AAAA,QAEtC;AAAA,MAAA;AAAA,IAEJ;AAAA,EAAA;AAEJ,CAAC,GClBYI,KAAYC,GAAgB,OAAyB;AAAA,EAChE,aAAa;;AACJ,WAAA;AAAA,MACL,IAAGV,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,OAAO,EAAE,QAAAI,GAAQ,GAAAC,KAAU;AAClB,eAAA;AAAA,UACL,WAAWC;AAAA,UACX,gBAAgB;AAAA,YACd,QAAQ,MAAMF,EAAO,SAAS,gBAAgB;AAAA,YAC9C,UAAU,MAAMA,EAAO,SAAS,WAAW,KAAK;AAAA,YAChD,UAAU,CAACA,EAAO,IAAA,EAAM,gBAAgB;AAAA,YACxC,MAAM;AAAA,YACN,cAAc,CAAC,OAAO,GAAG;AAAA,YACzB,SAASC,EAAE,0BAA0B;AAAA,UAAA;AAAA,QAEzC;AAAA,MAAA;AAAA,IAEJ;AAAA,EAAA;AAEJ,CAAC,GCrBYM,KAASC,GAAa,OAAsB;AAAA,EACvD,aAAa;;AACJ,WAAA;AAAA,MACL,IAAGZ,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,QAAQ,CAAC,EAAE,QAAAI,GAAQ,GAAAC,SAAc;AAAA,QAC/B,WAAWC;AAAA,QACX,gBAAgB;AAAA,UACd,QAAQ,MAAMF,EAAO,SAAS,aAAa;AAAA,UAC3C,UAAU,MAAMA,EAAO,SAAS,QAAQ,KAAK;AAAA,UAC7C,UAAU,CAACA,EAAO,IAAA,EAAM,aAAa;AAAA,UACrC,MAAM;AAAA,UACN,cAAc,CAAC,SAAS,OAAO,GAAG;AAAA,UAClC,SAASC,EAAE,uBAAuB;AAAA,QAAA;AAAA,MAEtC;AAAA,IACF;AAAA,EAAA;AAEJ,CAAC,GCjBYQ,KAAOC,GAAW,OAAoB;AAAA,EACjD,aAAa;;AACJ,WAAA;AAAA,MACL,IAAGd,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,QAAQ,CAAC,EAAE,QAAAI,GAAQ,GAAAC,SAAS;AAAA,QAC1B,WAAWC;AAAA,QACX,gBAAgB;AAAA,UACd,QAAQ,MAAMF,EAAO,SAAS,WAAW;AAAA,UACzC,UAAU,MAAMA,EAAO,SAAS,MAAM,KAAK;AAAA,UAC3C,UAAU,CAACA,EAAO,IAAA,EAAM,WAAW;AAAA,UACnC,MAAM;AAAA,UACN,cAAc,CAAC,OAAO,GAAG;AAAA,UACzB,SAASC,EAAE,qBAAqB;AAAA,QAAA;AAAA,MAEpC;AAAA,IACF;AAAA,EAAA;AAEJ,CAAC;ACZD,IAAIU,GACAC;AACJ,MAAMC,yBAAuB,IAAqB,GAC5CC,yBAAoB,IAAkB;AAcrC,SAASC,KAAW;AAClB,SAAAJ;AACT;AAKO,SAASK,GAAgBC,GAA0B;AACpD,MAAA,CAACN,KAAe,CAACC,IAAoB;AACjC,UAAAM,IAASD,EAAK,OAAO;AAAA,MACzB,CAACE,MAAiC,CAAC,CAACA,KAASA,KAASC;AAAA,IACxD,GACMC,IAAQJ,EAAK,UAAU;AAAA,MAC3B,CAACK,MAAkC,CAAC,CAACA,KAAQA,KAAQC;AAAA,IACvD;AACqB,WAAAX,KAAAY,GAAkB,EAAE,QAAAN,GAAQ,OAAAG,EAAA,CAAO,EAAE,KAAK,CAACI,MAAM;AACtD,MAAAd,IAAAc;AAAA,IAAA,CACf,GACMb;AAAA,EAAA;AAGT,MAAIA;AACK,WAAAA;AAEX;AAMA,eAAsBc,GAAUP,GAAqB;AACnD,SACER,KACG,CAACA,EAAY,gBAAA,EAAkB,SAASQ,CAAK,KAC7C,CAACL,GAAc,IAAIK,CAAK,KACxBA,KAASC,MAEZN,GAAc,IAAIK,CAAK,GACjB,MAAAR,EAAY,UAAUQ,CAAK,GACjCL,GAAc,OAAOK,CAAK,GACnB,MAGF;AACT;AAMA,eAAsBQ,GAAaC,GAA2B;AAC5D,SACEjB,KACG,CAACA,EAAY,mBAAA,EAAqB,SAASiB,CAAQ,KACnD,CAACf,GAAiB,IAAIe,CAAQ,KAC9BA,KAAYL,MAEfV,GAAiB,IAAIe,CAAQ,GACvB,MAAAjB,EAAY,aAAaiB,CAAQ,GACvCf,GAAiB,OAAOe,CAAQ,GACzB,MAGF;AACT;AAMA,eAAsBC,GAAgB;AAAA,EACpC,KAAAC;AAAA,EACA,MAAAC;AAAA,EACA,cAAAC;AAAA,EACA,iBAAAC;AACF,GAKG;AACD,QAAMC,IAAaC,GAAaL,GAAK,OAAQM,EAAK,KAAK,SAASL,CAAI,GAE9Db,IAAS;AAAA,IACb,GAAGgB,EAAW,IAAI,OAASG,EAAM,KAAK,MAAM,KAAqB;AAAA,IACjEL;AAAA,EACF,GACMM,IAAY;AAAA,IAChB,GAAGJ,EAAW,IAAI,OAASG,EAAM,KAAK,MAAM,QAA2B;AAAA,IACvEJ;AAAA,EACF;AAEA,EAAKtB,IAIH,MAAM,QAAQ,IAAI;AAAA,IAChB,GAAGO,EAAO,QAAQ,CAASC,MAAAO,GAAUP,CAAK,CAAC;AAAA,IAC3C,GAAGmB,EAAU,QAAQ,CAAAV,MAAY,CAAC,CAACA,KAAYD,GAAaC,CAAQ,CAAC;AAAA,EAAA,CACtE,IALK,MADSZ,GAAgB,EAAE,WAAAsB,GAAW,QAAApB,GAAQ;AAQxD;ACnHA,SAASqB,GAAe;AAAA,EACtB,KAAAT;AAAA,EACA,MAAAC;AAAA,EACA,cAAAC;AAAA,EACA,iBAAAC;AACF,GAKG;AACD,QAAMO,IAA4B,CAAC;AAIxB,SAFQL,GAAaL,GAAK,OAAQM,EAAK,KAAK,SAASL,CAAI,EAEzD,QAAQ,CAACM,MAAU;AACxB,QAAAI,IAAOJ,EAAM,MAAM,GACnBT,IAAWS,EAAM,KAAK,MAAM,YAAYJ;AAC5C,UAAMd,IAAQkB,EAAM,KAAK,MAAM,SAASL,GAElCrB,IAAcI,GAAS;AAE7B,QAAI,CAACJ;AACH;AAEF,IAAKA,EAAY,mBAAqB,EAAA,SAASiB,CAAQ,MAC1CA,IAAA;AAGP,UAAAc,IAAe/B,EAAY,gBAAA,EAAkB,SAASQ,CAAK,IAC7DA,IACAR,EAAY,gBAAgB,EAAE,CAAC,GAE7BgC,IAAShC,EAAY,iBAAiB0B,EAAM,KAAK,aAAa;AAAA,MAClE,MAAMT;AAAA,MACN,OAAOc;AAAA,IAAA,CACR;AAED,eAAWE,KAAQD,GAAQ;AACzB,iBAAWE,KAASD,GAAM;AAClB,cAAAE,IAAKL,IAAOI,EAAM,QAAQ,QAE1BE,IAAaC,GAAW,OAAOP,GAAMK,GAAI;AAAA,UAC7C,OAAO,UAAUD,EAAM,KAAK;AAAA,QAAA,CAC7B;AAED,QAAAL,EAAY,KAAKO,CAAU,GAEpBN,IAAAK;AAAA,MAAA;AAGD,MAAAL,KAAA;AAAA,IAAA;AAAA,EACV,CACD,GAEMQ,GAAc,OAAOnB,GAAKU,CAAW;AAC9C;AAEO,SAASU,GAAY;AAAA,EAC1B,MAAAnB;AAAA,EACA,iBAAAE;AAAA,EACA,cAAAD;AACF,GAIG;AAEK,QAAAmB,IAAc,IAAIC,GAAY;AAAA,IAClC,KAAK,IAAIC,EAAU,OAAO;AAAA,IAE1B,KAAKC,GAAM;AAAA,MAET,MAAMC,EAAsC;AAAA,QAC1C,cAAc;AACZ,eAAK,gBAAgB;AAAA,QAAA;AAAA,QAGvB,SAAS;AACP,eAAK,uBAAuB;AAAA,QAAA;AAAA,QAG9B,UAAU;AAAA,QACR;AAAA;AAAA,QAIF,MAAM,kBAAkB;AAChB,gBAAAzB,IAAMwB,EAAK,MAAM;AACvB,gBAAMzB,GAAgB,EAAE,KAAAC,GAAK,MAAAC,GAAM,iBAAAE,GAAiB,cAAAD,GAAc;AAClE,gBAAMwB,IAAKF,EAAK,MAAM,GAAG,QAAQ,8BAA8B,EAAI;AACnE,UAAAA,EAAK,SAASE,CAAE;AAAA,QAAA;AAAA;AAAA;AAAA,QAKlB,MAAM,yBAAyB;AAC7B,gBAAMtB,IAAaC;AAAA,YACjBmB,EAAK,MAAM;AAAA,YACX,CAAAlB,MAAQA,EAAK,KAAK,SAASL;AAAA,UAC7B;AAgBA,eAXmB,MAAM,QAAQ;AAAA,YAC/BG,EAAW,QAAQ,CAASG,MAAA;AAAA,cAC1BX,GAAUW,EAAM,KAAK,MAAM,KAAK;AAAA,cAChCV,GAAaU,EAAM,KAAK,MAAM,QAAQ;AAAA,YACvC,CAAA;AAAA,UACH,GACoC,SAAS,EAAI,GAK3B;AACpB,kBAAMmB,IAAKF,EAAK,MAAM,GAAG,QAAQ,8BAA8B,EAAI;AACnE,YAAAA,EAAK,SAASE,CAAE;AAAA,UAAA;AAAA,QAClB;AAAA,MACF;AAGF,aAAO,IAAID,EAAgB;AAAA,IAC7B;AAAA,IAEA,OAAO;AAAA,MACL,MAAM,CAACE,GAAG,EAAE,KAAA3B,QACHS,GAAe;AAAA,QACpB,KAAAT;AAAA,QACA,MAAAC;AAAA,QACA,iBAAAE;AAAA,QACA,cAAAD;AAAA,MAAA,CACD;AAAA,MAEH,OAAO,CAAC0B,GAAaC,GAAeC,GAAUC,MAAa;AACzD,cAAMC,IAAcF,EAAS,UAAU,MAAM,OAAO,KAAK,MACnDG,IAAcF,EAAS,UAAU,MAAM,OAAO,KAAK,MACnDG,IAAW7B;AAAA,UACfyB,EAAS;AAAA,UACT,CAAAxB,MAAQA,EAAK,KAAK,SAASL;AAAA,QAC7B,GACMkC,IAAW9B;AAAA,UACf0B,EAAS;AAAA,UACT,CAAAzB,MAAQA,EAAK,KAAK,SAASL;AAAA,QAC7B,GAEMmC,IACFR,EAAY,eAGR,CAACI,GAAaC,CAAW,EAAE,SAAShC,CAAI,KAEvCkC,EAAS,WAAWD,EAAS,UAI7BN,EAAY,MAAM,KAAK,CAACS,MAEvBA,EAAK,SAAS,UACXA,EAAK,OAAO,UACZH,EAAS,KAAK,CAAC5B,MAEdA,EAAK,OAAO+B,EAAK,QACd/B,EAAK,MAAMA,EAAK,KAAK,YAAY+B,EAAK,EAE5C,CAEJ;AAGP,eACET,EAAY,QAAQ,4BAA4B,KAC7CQ,IAEI3B,GAAe;AAAA,UACpB,KAAKmB,EAAY;AAAA,UACjB,MAAA3B;AAAA,UACA,iBAAAE;AAAA,UACA,cAAAD;AAAA,QAAA,CACD,IAGI2B,EAAc,IAAID,EAAY,SAASA,EAAY,GAAG;AAAA,MAAA;AAAA,IAEjE;AAAA,IAEA,OAAO;AAAA;AAAA,MAEL,YAAYU,GAAO;AACV,eAAAjB,EAAY,SAASiB,CAAK;AAAA,MAAA;AAAA,IACnC;AAAA,EACF,CACD;AAEM,SAAAjB;AACT;AC5LA,SAASkB,GAAsB,EAAE,QAAAC,GAAQ,WAAAhC,GAAW,GAAGrD,KAAgB;AAC/D,QAAAsF,IAAU,CAAC3C,MAAqB;AACpC,IAAA0C,EAAO1C,CAAQ;AAAA,EACjB,GAEMP,IAAQmD,EAAQ,MACblC,KAAA,gBAAAA,EAAW,IAAI,CAACV,OAGd;AAAA,IACL,OAHY6C,GAAyB7C,CAAQ,KAAKA;AAAA;AAAA,IAKlD,UAAAA;AAAA,EACF,KAED,CAACU,CAAS,CAAC;AAEd,2BACGoC,GACC,EAAA,UAAA;AAAA,IAAA,gBAAApF,EAACqF,GAAoB,EAAA,UAAU1F,KAAA,gBAAAA,EAAO,UAAU,SAAO,IACrD,UAAA,gBAAAK;AAAA,MAACY;AAAA,MAAA;AAAA,QACC,SAASjB,KAAA,gBAAAA,EAAO;AAAA,QAChB,UAAUA,KAAA,gBAAAA,EAAO;AAAA,QACjB,MAAMA,KAAA,gBAAAA,EAAO;AAAA,MAAA;AAAA,IAAA,GAEjB;AAAA,sBACC2F,GAAoB,EAAA,WAAU,uEAC5B,UAAOvD,KAAA,gBAAAA,EAAA,IAAI,CAACwD,wBAERC,IAAiD,EAAA,SAAS,MAAMP,EAAQM,EAAK,QAAQ,GACpF,UAAA,gBAAAvF,EAAC,OAAI,EAAA,WAAU,iCACZ,UAAKuF,EAAA,MACR,CAAA,KAHqB,aAAaA,EAAK,KAAK,EAI9C,GAGN,CAAA;AAAA,EAAA,GACF;AAEJ;ACvDA,MAAME,KAASC,EAAgB,MAIzBC,KAAcD,EAAgB,OAE9BE,KAAgBnG,EAAM,WAG1B,CAAC,EAAE,WAAAoG,GAAW,UAAAC,GAAU,GAAGnG,KAASC,MACpC,gBAAAQ;AAAA,EAACsF,EAAgB;AAAA,EAAhB;AAAA,IACC,KAAA9F;AAAA,IACA,WAAWmG;AAAA,MACT;AAAA,MACAF;AAAA,IACF;AAAA,IACC,GAAGlG;AAAA,IAEH,UAAA;AAAA,MAAAmG;AAAA,MACD,gBAAA9F,EAAC0F,EAAgB,MAAhB,EAAqB,SAAO,IAC3B,UAAC,gBAAA1F,EAAAgG,IAAA,EAAY,WAAU,gDAAgD,CAAA,EACzE,CAAA;AAAA,IAAA;AAAA,EAAA;AACF,CACD;AACDJ,GAAc,cAAcF,EAAgB,QAAQ;AAEpD,MAAMO,KAAuBxG,EAAM,WAGjC,CAAC,EAAE,WAAAoG,GAAW,GAAGlG,EAAM,GAAGC,MAC1B,gBAAAI;AAAA,EAAC0F,EAAgB;AAAA,EAAhB;AAAA,IACC,KAAA9F;AAAA,IACA,WAAWmG;AAAA,MACT;AAAA,MACAF;AAAA,IACF;AAAA,IACC,GAAGlG;AAAA,IAEJ,UAAA,gBAAAK,EAACkG,IAAU,EAAA,WAAU,4BAA4B,CAAA;AAAA,EAAA;AACnD,CACD;AACDD,GAAqB,cAAcP,EAAgB,eAAe;AAElE,MAAMS,KAAyB1G,EAAM,WAGnC,CAAC,EAAE,WAAAoG,GAAW,GAAGlG,EAAM,GAAGC,MAC1B,gBAAAI;AAAA,EAAC0F,EAAgB;AAAA,EAAhB;AAAA,IACC,KAAA9F;AAAA,IACA,WAAWmG;AAAA,MACT;AAAA,MACAF;AAAA,IACF;AAAA,IACC,GAAGlG;AAAA,IAEJ,UAAA,gBAAAK,EAACgG,IAAY,EAAA,WAAU,4BAA4B,CAAA;AAAA,EAAA;AACrD,CACD;AACDG,GAAuB,cACnBT,EAAgB,iBAAiB;AAErC,MAAMU,KAAgB3G,EAAM,WAG1B,CAAC,EAAE,WAAAoG,GAAW,UAAAC,GAAU,UAAAO,IAAW,UAAU,GAAG1G,KAASC,MACxD,gBAAAI,EAAA0F,EAAgB,QAAhB,EACC,UAAA,gBAAAtF;AAAA,EAACsF,EAAgB;AAAA,EAAhB;AAAA,IACC,KAAA9F;AAAA,IACA,WAAWmG;AAAA,MACT;AAAA,MACAM,MAAa,YACV;AAAA,MACHR;AAAA,IACF;AAAA,IACA,UAAAQ;AAAA,IACC,GAAG1G;AAAA,IAEJ,UAAA;AAAA,MAAA,gBAAAK,EAACiG,IAAqB,EAAA;AAAA,MACtB,gBAAAjG;AAAA,QAAC0F,EAAgB;AAAA,QAAhB;AAAA,UACC,WAAWK;AAAA,YACT;AAAA,YACAM,MAAa,YACV;AAAA,UACL;AAAA,UAEC,UAAAP;AAAA,QAAA;AAAA,MACH;AAAA,wBACCK,IAAuB,CAAA,CAAA;AAAA,IAAA;AAAA,EAAA;AAC1B,EAAA,CACF,CACD;AACDC,GAAc,cAAcV,EAAgB,QAAQ;AAEpD,MAAMY,KAAc7G,EAAM,WAGxB,CAAC,EAAE,WAAAoG,GAAW,GAAGlG,EAAM,GAAGC,MAC1B,gBAAAI;AAAA,EAAC0F,EAAgB;AAAA,EAAhB;AAAA,IACC,KAAA9F;AAAA,IACA,WAAWmG,EAAG,uFAAuFF,CAAS;AAAA,IAC7G,GAAGlG;AAAA,EAAA;AACN,CACD;AACD2G,GAAY,cAAcZ,EAAgB,MAAM;AAEhD,MAAMa,KAAa9G,EAAM,WAGvB,CAAC,EAAE,WAAAoG,GAAW,UAAAC,GAAU,GAAGnG,KAASC,MACpC,gBAAAQ;AAAA,EAACsF,EAAgB;AAAA,EAAhB;AAAA,IACC,KAAA9F;AAAA,IACA,WAAWmG;AAAA,MACT;AAAA,MACAF;AAAA,IACF;AAAA,IACC,GAAGlG;AAAA,IAEJ,UAAA;AAAA,MAAA,gBAAAK,EAAC,QAAK,EAAA,WAAU,+HACd,UAAA,gBAAAA,EAAC0F,EAAgB,eAAhB,EACC,UAAA,gBAAA1F,EAACwG,IAAM,EAAA,WAAU,4BAA4B,CAAA,EAC/C,CAAA,GACF;AAAA,MAEC,gBAAAxG,EAAA0F,EAAgB,UAAhB,EACE,UAAAI,EACH,CAAA;AAAA,IAAA;AAAA,EAAA;AACF,CACD;AACDS,GAAW,cAAcb,EAAgB,KAAK;AAE9C,MAAMe,KAAkBhH,EAAM,WAG5B,CAAC,EAAE,WAAAoG,GAAW,GAAGlG,EAAM,GAAGC,MAC1B,gBAAAI;AAAA,EAAC0F,EAAgB;AAAA,EAAhB;AAAA,IACC,KAAA9F;AAAA,IACA,WAAWmG,EAAG,gEAAgEF,CAAS;AAAA,IACtF,GAAGlG;AAAA,EAAA;AACN,CACD;AACD8G,GAAgB,cAAcf,EAAgB,UAAU;AClJxD,SAASgB,KAAU;AACjB,QAAM,CAACC,GAAUC,CAAW,IAAIC,EAAS,EAAK;AAavC,SAAA,EAAE,UAAAF,GAAU,iBAXK,OAAOG,MAAiB;AAC1C,QAAA;AACI,YAAA,UAAU,UAAU,UAAUA,CAAI,GACxCF,EAAY,EAAI,GAChB,WAAW,MAAMA,EAAY,EAAK,GAAG,GAAI;AAAA,aAClCG,GAAO;AACN,cAAA,MAAM,yBAAyBA,CAAK,GAC5CH,EAAY,EAAK;AAAA,IAAA;AAAA,EAErB,EAEmC;AACrC;;;;;;;;;;;ACDgB,SAAAI,GAAkB,EAAE,QAAAtG,GAAQ,MAAM,EAAE,OAAAuG,KAAS,kBAAAC,GAAkB,WAAAC,KAAkB;;AAC/F,QAAM,EAAE,UAAAR,GAAU,iBAAAS,EAAgB,IAAIV,GAAQ,GAExCW,IAAWnC,EAAQ,MAAM;;AAC7B,YAAO5E,IAAA6G,EAAU,QAAQ,cAAlB,QAAA7G,EAA6B,SAAS6G,EAAU,QAAQ,YAAYG;AAAA,EAC1E,GAAA,CAACH,EAAU,QAAQ,SAAS,CAAC,GAE1BI,IAAaC,GAAkB,GAE/BC,KAAUC,KAAApH,IAAAI,KAAA,gBAAAA,EAAQ,YAAR,gBAAAJ,EAAiB,gBAAjB,gBAAAoH,EAA8B,OACxC,EAAE,UAAU/E,EAAA,IAAoBsE,GAChCU,IAAkBC,EAAuB,IAAI,GAE7CC,IAAWC,EAAY,MAAMC,GAAWC,GAAU,MAAMtH,CAAM,GAAG,CAACA,CAAM,CAAC;AAG7E,SAAA,gBAAAN,EAAC6H,IAAgB,EAAA,WAAWC,EAAKC,EAAO,MAAM,CAACV,KAAWU,EAAO,WAAW,gBAAgB,GAE1F,UAAA;AAAA,IAAA,gBAAA/H;AAAA,MAAC;AAAA,MAAA;AAAA,QAAI,WAAW8H,EAAKC,EAAO,WAAW;AAAA,UACrC,CAACA,EAAO,iBAAiB,GAAG,CAACZ;AAAA,QAAA,CAC9B;AAAA,QAGC,UAAA;AAAA,UAAA,gBAAAvH;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAWkI,EAAKC,EAAO,SAASxB,KAAYwB,EAAO,MAAM;AAAA,cACzD,SAAS,MAAMf,EAAgBO,EAAW,QAAQ,SAAS;AAAA,cAE1D,UAAChB,IAAgC,gBAAA3G,EAACoI,IAAU,EAAA,MAAM,GAAI,CAAA,IAA1C,gBAAApI,EAACqI,IAAK,EAAA,MAAM,GAAI,CAAA;AAAA,YAA0B;AAAA,UACzD;AAAA,UAEA,gBAAArI;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAWmI,EAAO;AAAA,cAClB,SAASN;AAAA,cAET,UAAA,gBAAA7H;AAAA,gBAACsI;AAAA,gBAAA;AAAA,kBACC,MAAK;AAAA,gBAAA;AAAA,cAAA;AAAA,YACP;AAAA,UACF;AAAA,UAEC,gBAAAtI,EAAA,OAAA,EAAI,WAAWmI,EAAO,YACrB,UAAA,gBAAA/H;AAAA,YAACqF;AAAA,YAAA;AAAA,cACC,cAAc9C,KAAmB;AAAA,cACjC,UAAU,CAAC4E;AAAA,cACX,eAAe,CAASgB,MAAArB,EAAiB,EAAE,UAAUqB,GAAO;AAAA,cAE5D,UAAA;AAAA,gBAAA,gBAAAvI,EAAC4F,IACC,EAAA,UAAA,gBAAA5F,EAAC2F,IAAY,EAAA,aAAY,WAAW,CAAA,GACtC;AAAA,gBAEA,gBAAAvF,EAACgG,IAAc,EAAA,WAAU,8CACvB,UAAA;AAAA,kBAAC,gBAAApG,EAAAuG,IAAA,EAAW,OAAM,QAAO,UAEzB,QAAA;AAAA,kBAECc,EAAS,IAAI,CAACrF,GAAWwG,MACxB,gBAAAxI;AAAA,oBAACuG;AAAA,oBAAA;AAAA,sBACC,OAAOvE;AAAA,sBAEN,UAAAA,EAAK,OAAO,CAAC,EAAE,gBAAgBA,EAAK,MAAM,CAAC;AAAA,oBAAA;AAAA,oBAH7B,aAAawG,CAAK;AAAA,kBAKpC,CAAA;AAAA,gBAAA,EACH,CAAA;AAAA,cAAA;AAAA,YAAA;AAAA,UAAA,EAEJ,CAAA;AAAA,QAAA;AAAA,MAAA;AAAA,IAEF;AAAA,IAEA,gBAAAxI,EAAC,SAAI,KAAK2H,GACR,4BAACc,IAAgB,EAAA,IAAG,OAAO,CAAA,EAC7B,CAAA;AAAA,EAAA,GACF;AAEJ;ACxEa,MAAAT,KAAYU,GAAa,OAAyB;AAAA,EAC7D,aAAa;;AACJ,WAAA;AAAA,MACL,IAAGpI,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,WAAW,CAAC;AAAA,MACZ,QAAQ,CAAC,EAAE,QAAAI,GAAQ,GAAAC,GAAG,WAAAwG,QAAqB;;AACzC,cAAMnE,KAAY0E,KAAApH,IAAA6G,KAAA,gBAAAA,EAAW,YAAX,gBAAA7G,EAAoB,cAApB,QAAAoH,EAA+B,UAASiB,IAAAxB,KAAA,gBAAAA,EAAW,YAAX,gBAAAwB,EAAoB,YAAYrB;AAEnF,eAAA;AAAA,UACL,WAAWvC;AAAA,UACX,gBAAgB;AAAA,YACd,QAAQ,CAACzC,IAAW,SAAS5B,EAAO,SAAS,aAAa;AAAA,cACxD,UAAA4B;AAAA,YAAA,CACD;AAAA,YACD,UAAU,MAAM5B,EAAO,SAAS,WAAW,KAAK;AAAA,YAChD,UAAU,CAACA,EAAO,IAAA,EAAM,gBAAgB;AAAA,YACxC,MAAM;AAAA,YACN,SAASC,EAAE,0BAA0B;AAAA,YACrC,WAAAqC;AAAA,UAAA;AAAA,QAEJ;AAAA,MAAA;AAAA,IAEJ;AAAA,EACF;AAAA,EACA,cAAc;AACZ,WAAO4F,GAAsB5B,EAAiB;AAAA,EAChD;AAAA,EACA,wBAAwB;;AACf,WAAA;AAAA,MACL,KAAI1G,IAAA,KAAK,WAAL,gBAAAA,EAAA,eAAmB,CAAC;AAAA,MACxBsD,GAAY;AAAA,QACV,MAAM,KAAK;AAAA,QACX,iBAAiB;AAAA,QACjB,cAAc,KAAK,QAAQ;AAAA,MAC5B,CAAA;AAAA,IACH;AAAA,EAAA;AAEJ,CAAC;ACjBD,SAASiF,GAAiBlJ,GAAc;;AACtC,QAAM,EAAE,GAAG,MAAAqC,EAAK,IAAI8G,EAAU,GAExBC,IAAS7D,EAAQ,MAAM;;AACrB,UAAA8D,KAAY1I,IAAAX,KAAA,gBAAAA,EAAO,UAAP,gBAAAW,EAAc,KAAK,CAAC2I,MAAWA,EAAE;AAE/C,WAAAD,KAAQ,CAACA,EAAK,UACT;AAAA,MACL,GAAGA;AAAA,IACL,IAEiB;AAAA,MACjB,OAAOrJ,EAAM;AAAA,MACb,MAAM,EAAE,mCAAmC;AAAA,MAC3C,UAAU,MAAM;AAAA,MAChB,UAAU;AAAA,MACV,QAAQ,MAAMA,EAAM,OAAO,QAAQ,MAAM,EAAE,gBAAgB,EAAE,IAAI;AAAA,IACnE;AAAA,EAEC,GAAA,CAAC,GAAGqC,GAAMrC,CAAK,CAAC;AAEnB,2BACGyF,GACC,EAAA,UAAA;AAAA,IAAA,gBAAApF;AAAA,MAACqF;AAAA,MAAA;AAAA,QAAoB,SAAO;AAAA,QAC1B,UAAU1F,KAAA,gBAAAA,EAAO;AAAA,QAEjB,UAAA,gBAAAK;AAAA,UAACR;AAAA,UAAA;AAAA,YACC,UAAUG,KAAA,gBAAAA,EAAO;AAAA,YACjB,MAAK;AAAA,YACL,SAAOW,IAAAyI,KAAA,gBAAAA,EAAQ,SAAR,gBAAAzI,EAAc,UAAS,IAAI,IAAGoH,IAAAqB,KAAA,gBAAAA,EAAQ,SAAR,gBAAArB,EAAc,MAAM,GAAG,EAAE,QAAQqB,KAAA,gBAAAA,EAAQ;AAAA,YAC9E,SAASpJ,KAAA,gBAAAA,EAAO;AAAA,UAAA;AAAA,QAAA;AAAA,MAClB;AAAA,IACF;AAAA,IAEA,gBAAAK,EAACsF,KAAoB,WAAU,mBAC5B,sCAAO,4BAAO,IAAI,CAACC,GAAWiD,MAAU;AACjC,YAAAU,IACF3D,EAAK,SAAS,EAAE,mCAAmC,IAAI,CAAA,IAAK,EAAE,YAAYA,EAAK,KAAK;AAExF,+BACG4D,IACC,EAAA,UAAA;AAAA,QAAA,gBAAAnJ;AAAA,UAACoJ;AAAA,UAAA;AAAA,YAAyB,UAASL,KAAA,gBAAAA,EAAQ,UAASxD,EAAK;AAAA,YACvD,SAASA,EAAK;AAAA,YAEd,UAAA,gBAAAvF;AAAA,cAAC;AAAA,cAAA;AAAA,gBAAI,WAAU;AAAA,gBACb,OAAAkJ;AAAA,gBAEC,UAAK3D,EAAA;AAAA,cAAA;AAAA,YAAA;AAAA,UACR;AAAA,QACF;AAAA,QAECA,EAAK,SAAS,EAAE,mCAAmC,uBAAM8D,IAAsB,CAAA,CAAA;AAAA,MAXnE,EAAA,GAAA,eAAeb,CAAK,EAYnC;AAAA,IAAA,GAGN,CAAA;AAAA,EAAA,GACF;AAEJ;AC7Ea,MAAAc,KAAaC,GAAiB,OAA0B;AAAA,EACnE,aAAa;;AACJ,WAAA;AAAA,MACL,IAAGjJ,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,gBAAgBkJ;AAAA,MAChB,OAAO,EAAE,QAAA9I,GAAQ,WAAAyG,GAAW,GAAAxG,KAAU;;AACpC,cAAM,EAAE,YAAA8I,IAAa,CAAA,EAAO,IAAA/I,EAAO,oBAAoB,CAAC,GAClDgJ,IAAiBC,KAAuBrJ,IAAA6G,KAAA,gBAAAA,EAAW,YAAX,gBAAA7G,EAAoB,mBAAkB,CAAA,CAAE,GAChFsJ,IAAaH,EAAW;AAAA,UAC5B,CAACR,MAAWA,EAAE,SAAS;AAAA,QACzB,GAEMY,IAAQH,EAAe,IAAI,CAASI,OAAA;AAAA,UACxC,QAAQ,MAAM;AACL,YAAApJ,EAAA,QAAQ,MAAM,EAAE,cAAcoJ,EAAK,KAAK,EAAE,IAAI;AAAA,UACvD;AAAA,UACA,UAAU,MAAMpJ,EAAO,SAAS,aAAa,EAAE,YAAYoJ,EAAK,MAAO,CAAA,KAAK;AAAA,UAC5E,UAAU,CAACpJ,EAAO,IAAM,EAAA,cAAcoJ,EAAK,KAAK;AAAA,UAChD,OAAOA,EAAK;AAAA,UACZ,MAAMA,EAAK;AAAA,QAAA,EACX;AAEF,QAAIF,KAAcA,EAAW,QAAQ,cAAc,MACjDC,EAAM,QAAQ;AAAA,UACZ,QAAQ,MAAMnJ,EAAO,MAAA,EAAQ,QAAQ,gBAAgB,EAAE,IAAI;AAAA,UAC3D,UAAU,MAAM;AAAA,UAChB,UAAU;AAAA,UACV,MAAMC,EAAE,mCAAmC;AAAA,UAC3C,OAAOA,EAAE,2BAA2B;AAAA,QAAA,CACrC;AAGG,cAAAoJ,IAAWF,EAAM,OAAO,CAACZ,MAAWA,EAAE,QAAQ,EAAE,WAAWY,EAAM;AAEhE,eAAA;AAAA,UACL,WAAWhB;AAAA,UACX,gBAAgB;AAAA,YACd,SAASlI,EAAE,2BAA2B;AAAA,YACtC,UAAAoJ;AAAA,YACA,OAAAF;AAAA,YACA,QAAAnJ;AAAA,UAAA;AAAA,QAEJ;AAAA,MAAA;AAAA,IAEJ;AAAA,EAAA;AAEJ,CAAC;AC1BD,SAASsJ,GAAcrK,GAAc;;AAC7B,QAAAoJ,IAAS7D,EAAQ,MAAM;;AACrB,UAAA8D,KAAY1I,IAAAX,KAAA,gBAAAA,EAAO,UAAP,gBAAAW,EAAc,KAAK,CAAC2I,MAAWA,EAAE;AAE/C,WAAAD,KAAQ,CAACA,EAAK,UACT;AAAA,MACL,GAAGA;AAAA,IACL,IAEiB;AAAA,MACjB,OAAOrJ,EAAM;AAAA,MACb,OAAO;AAAA,MACP,UAAU,MAAM;AAAA,IAClB;AAAA,EACO,GACN,CAACA,CAAK,CAAC;AAEV,2BACGyF,GACC,EAAA,UAAA;AAAA,IAAA,gBAAApF;AAAA,MAACqF;AAAA,MAAA;AAAA,QAAoB,SAAO;AAAA,QAC1B,UAAU1F,KAAA,gBAAAA,EAAO;AAAA,QAEjB,UAAA,gBAAAK;AAAA,UAACR;AAAA,UAAA;AAAA,YACC,UAAUG,KAAA,gBAAAA,EAAO;AAAA,YACjB,MAAK;AAAA,YACL,OAAOoJ,KAAA,gBAAAA,EAAQ;AAAA,YACf,SAASpJ,KAAA,gBAAAA,EAAO;AAAA,UAAA;AAAA,QAAA;AAAA,MAClB;AAAA,IACF;AAAA,IAEA,gBAAAK,EAACsF,KAAoB,WAAU,mBAC5B,sCAAO,4BAAO,IAAI,CAACC,GAAWiD,MAAU;;AACvC,+BACGW,IACC,EAAA,UAAA;AAAA,QAAA,gBAAA/I;AAAA,UAACgJ;AAAA,UAAA;AAAA,YACC,UAASL,KAAA,gBAAAA,EAAQ,WAAUxD,EAAK;AAAA,YAChC,SAASA,EAAK;AAAA,YAEd,UAAA;AAAA,cAAA,gBAAAvF,EAAC,SAAI,WAAW,yCAAyCuF,EAAK,KAAK,IAChE,YAAK,MACR,CAAA;AAAA,cAEC,CAAC,GAACjF,IAAAiF,KAAA,gBAAAA,EAAM,iBAAN,QAAAjF,EAAoB,WACpB,gBAAAN,EAAAiK,IAAA,EAAqB,WAAU,iBAC7B,WAAAvC,IAAAnC,KAAA,gBAAAA,EAAM,iBAAN,gBAAAmC,EAAoB,IAAI,CAACnC,MAAc2E,GAAe3E,CAAI,GAAG,KAAK,KACrE,CAAA;AAAA,YAAA;AAAA,UAAA;AAAA,QAEJ;AAAA,QAECA,EAAK,UAAU,KAAK,gBAAAvF,EAACqJ,IAAsB,CAAA,CAAA;AAAA,MAhB/B,EAAA,GAAA,aAAab,CAAK,EAiBjC;AAAA,IAAA,GAGN,CAAA;AAAA,EAAA,GACF;AAEJ;ACnFa,MAAA2B,KAAUC,GAAc,OAAuB;AAAA,EAC1D,aAAa;;AACJ,WAAA;AAAA,MACL,IAAG9J,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,QAAQ,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,MACzB,OAAO,EAAE,QAAAI,GAAQ,WAAAyG,GAAW,GAAAxG,KAAK;;AAC/B,cAAM,EAAE,YAAA8I,IAAa,CAAA,EAAO,IAAA/I,EAAO,oBAAoB,CAAC,GAClD2J,MAAS/J,IAAA6G,EAAU,YAAV,gBAAA7G,EAAmB,WAAU,CAAC,GACvCsJ,IAAaH,EAAW;AAAA,UAC5B,CAAAR,MAAKA,EAAE,SAAS;AAAA,QAClB,GAEMY,IAAeQ,EAAO,IAAI,CAAUC,OAAA;AAAA,UACxC,QAAQ,MAAM5J,EAAO,SAAS,cAAc,EAAE,OAAA4J,GAAO;AAAA,UACrD,UAAU,MAAM5J,EAAO,SAAS,WAAW,EAAE,OAAA4J,EAAO,CAAA,KAAK;AAAA,UACzD,UAAU,CAAC5J,EAAO,MAAM,cAAc,EAAE,OAAA4J,GAAO;AAAA,UAC/C,OAAO3J,EAAE,mBAAmB2J,CAAK,UAAU;AAAA,UAC3C,OAAAA;AAAA,UACA,cAAc,CAAC,OAAO,OAAO,GAAGA,CAAK,EAAE;AAAA,QAAA,EACvC;AAEF,QAAIV,KAAcA,EAAW,QAAQ,cAAc,MACjDC,EAAM,QAAQ;AAAA,UACZ,QAAQ,MAAMnJ,EAAO,SAAS,aAAa;AAAA,UAC3C,UAAU,MAAMA,EAAO,SAAS,WAAW,KAAK;AAAA,UAChD,UAAU,CAACA,EAAO,IAAA,EAAM,aAAa;AAAA,UACrC,OAAO;AAAA,UACP,OAAOC,EAAE,0BAA0B;AAAA,UACnC,cAAc,CAAC,OAAO,OAAO,GAAG;AAAA,QAAA,CACjC;AAGG,cAAAoJ,IAAWF,EAAM,OAAO,CAACZ,MAAWA,EAAE,QAAQ,EAAE,WAAWY,EAAM;AAEhE,eAAA;AAAA,UACL,WAAWG;AAAA,UACX,gBAAgB;AAAA,YACd,SAASrJ,EAAE,wBAAwB;AAAA,YACnC,UAAAoJ;AAAA,YACA,OAAAF;AAAA,YACA,QAAAnJ;AAAA,UAAA;AAAA,QAEJ;AAAA,MAAA;AAAA,IAEJ;AAAA,EAAA;AAEJ,CAAC;AC5BD,SAAS6J,GAAoB5K,GAAkC;;AACvD,QAAAoJ,IAAS7D,EAAQ,MAAM;;AACrB,UAAA8D,KAAY1I,IAAAX,KAAA,gBAAAA,EAAO,UAAP,gBAAAW,EAAc,KAAK,CAAC2I,MAAWA,EAAE;AAC/C,WAAAD,KAAQ,CAACA,EAAK,UACT;AAAA,MACL,GAAGA;AAAA,MACH,MAAMA,EAAK,OAAOA,EAAK,OAAOrJ,EAAM;AAAA,IACtC,IAEiB;AAAA,MACjB,OAAOA,KAAA,gBAAAA,EAAO;AAAA,MACd,MAAMA,EAAM;AAAA,MACZ,UAAU,MAAM;AAAA,IAClB;AAAA,EAEO,GACN,CAACA,CAAK,CAAC;AAGR,SAAA,gBAAAS,EAACoK,IAAQ,EAAA,OAAK,IACZ,UAAA;AAAA,IAAA,gBAAAxK;AAAA,MAACyK;AAAA,MAAA;AAAA,QAAe,SAAO;AAAA,QACrB,UAAU9K,KAAA,gBAAAA,EAAO;AAAA,QAEjB,UAAA,gBAAAK;AAAA,UAACY;AAAA,UAAA;AAAA,YACC,aAAY;AAAA,YACZ,UAAUjB,KAAA,gBAAAA,EAAO;AAAA,YACjB,MAAMA,KAAA,gBAAAA,EAAO;AAAA,YACb,SAASA,KAAA,gBAAAA,EAAO;AAAA,YAEhB,UAAA,gBAAAK;AAAA,cAACsI;AAAA,cAAA;AAAA,gBAAc,WAAU;AAAA,gBACvB,MAAK;AAAA,cAAA;AAAA,YAAA;AAAA,UACP;AAAA,QAAA;AAAA,MACF;AAAA,IACF;AAAA,IAEA,gBAAAtI;AAAA,MAAC0K;AAAA,MAAA;AAAA,QACC,OAAM;AAAA,QACN,WAAU;AAAA,QACV,MAAK;AAAA,QAEJ,WAAOpK,IAAAX,KAAA,gBAAAA,EAAA,UAAA,gBAAAW,EAAO,IAAI,CAACiF,GAAMiD,MAAU;;AAClC,mCACGzI,IACC,EAAA,UAAA;AAAA,YAAC,gBAAAC,EAAAC,IAAA,EAAe,SAAO,IACrB,UAAA,gBAAAD;AAAA,cAAC2K;AAAA,cAAA;AAAA,gBACC,WAAU;AAAA,gBACV,cAAY5B,EAAO,UAAUxD,EAAK,QAAQ,OAAO;AAAA,gBACjD,SAASA,KAAA,gBAAAA,EAAM;AAAA,gBACf,SAASwD,EAAO,UAAUxD,EAAK;AAAA,gBAC/B,MAAK;AAAA,gBAEJ,kCAAM,SAAQ,gBAAAvF,EAACsI,GAAc,EAAA,MAAM/C,EAAK,KAAM,CAAA;AAAA,cAAA;AAAA,YAAA,GAEnD;AAAA,YAEA,gBAAAnF,EAACC,IAAe,EAAA,WAAU,yDACxB,UAAA;AAAA,cAAC,gBAAAL,EAAA,QAAA,EACE,YAAK,MACR,CAAA;AAAA,cAEC,CAAC,GAACM,IAAAiF,EAAK,iBAAL,QAAAjF,EAAmB,WACpB,gBAAAN,EAAC,UACE,WAAK0H,IAAAnC,EAAA,iBAAA,gBAAAmC,EAAc,IAAI,CAAAnC,MAAQ2E,GAAe3E,CAAI,GAAG,KAAK,KAC7D,CAAA;AAAA,YAAA,EAEJ,CAAA;AAAA,UAvBY,EAAA,GAAA,cAAciD,CAAK,EAwBjC;AAAA,QAEH;AAAA,MAAA;AAAA,IAAA;AAAA,EACH,GACF;AAEJ;ACjFa,MAAAoC,KAAYC,GAAgB,OAAyB;AAAA,EAChE,aAAa;;AACJ,WAAA;AAAA,MACL,IAAGvK,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,OAAO,CAAC,WAAW,aAAa,aAAa,OAAO;AAAA,MACpD,OAAO;AAAA,QACL,QAAAI;AAAA,QACA,WAAAyG;AAAA,QACA,GAAAxG;AAAA,MAAA,GAKC;;AACD,cAAMmK,MAAcxK,IAAA6G,EAAU,YAAV,gBAAA7G,EAAmB,eAA+B,CAAC,GACjEyK,IAAkB;AAAA,UACtB,MAAM,CAAC,OAAO,SAAS,GAAG;AAAA,UAC1B,QAAQ,CAAC,OAAO,SAAS,GAAG;AAAA,UAC5B,OAAO,CAAC,OAAO,SAAS,GAAG;AAAA,UAC3B,SAAS,CAAC,OAAO,SAAS,GAAG;AAAA,QAC/B,GACMC,IAAU;AAAA,UACd,MAAM;AAAA,UACN,QAAQ;AAAA,UACR,OAAO;AAAA,UACP,SAAS;AAAA,QACX,GACMnB,IAAQiB,EAAW,IAAI,CAAM7B,MAAA;;AAAA;AAAA,YACjC,OAAOtI,EAAE,oBAAoBsI,CAAC,UAAU;AAAA,YACxC,MAAM+B,EAAQ/B,CAAC;AAAA,YACf,cAAc8B,EAAgB9B,CAAC;AAAA,YAC/B,UAAU,MAAMvI,EAAO,SAAS,EAAE,WAAWuI,EAAG,CAAA,KAAK;AAAA,YACrD,QAAQ,MAAA;;AAAM,sBAAAvB,KAAApH,IAAAI,EAAO,aAAP,gBAAAJ,EAAiB,iBAAjB,gBAAAoH,EAAA,KAAApH,GAAgC2I;AAAA;AAAA,YAC9C,UAAU,GAACN,KAAAjB,KAAApH,IAAAI,KAAA,gBAAAA,EAAQ,QAAR,gBAAAJ,EAAA,KAAAI,OAAA,gBAAAgH,EAAiB,iBAAjB,QAAAiB,EAAA,KAAAjB,GAAgCuB;AAAA,UAAC;AAAA,SAC5C,GACIc,IAAWF,EAAM,OAAO,CAAAZ,MAAKA,EAAE,QAAQ,EAAE,WAAWY,EAAM;AACzD,eAAA;AAAA,UACL,WAAWU;AAAA,UACX,gBAAgB;AAAA,YACd,MAAM;AAAA,YACN,SAAS5J,EAAE,0BAA0B;AAAA,YACrC,UAAAoJ;AAAA,YACA,OAAAF;AAAA,UAAA;AAAA,QAEJ;AAAA,MAAA;AAAA,IAEJ;AAAA,EAAA;AAEJ,CAAC;ACnCD,SAASoB,GAAmBtL,GAAiC;;AACrD,QAAA,EAAE,EAAE,IAAImJ,EAAU,GAElBC,IAAS7D,EAAQ,MAAM;AACrB,UAAA8D,KAAarJ,EAAM,SAAS,CAAA,GAAI,KAAK,CAACsJ,MAAWA,EAAE,UAAU;AACnE,WAAID,KAGe;AAAA,MACjB,OAAO,EAAE,iCAAiC;AAAA,MAC1C,UAAU,MAAM;AAAA,IAClB;AAAA,EACO,GACN,CAACrJ,CAAK,CAAC;AAEV,2BACGyF,GACC,EAAA,UAAA;AAAA,IAAA,gBAAApF;AAAA,MAACqF;AAAA,MAAA;AAAA,QAAoB,SAAO;AAAA,QAC1B,UAAU1F,KAAA,gBAAAA,EAAO;AAAA,QAEjB,UAAA,gBAAAK;AAAA,UAACR;AAAA,UAAA;AAAA,YACC,UAAUG,KAAA,gBAAAA,EAAO;AAAA,YACjB,MAAK;AAAA,YACL,OAAOoJ,KAAA,gBAAAA,EAAQ;AAAA,YACf,SAAS,GAAGpJ,KAAA,gBAAAA,EAAO,OAAO;AAAA,UAAA;AAAA,QAAA;AAAA,MAC5B;AAAA,IACF;AAAA,IAEA,gBAAAK,EAACsF,KAAoB,WAAU,4DAC5B,sCAAO,4BAAO,IAAI,CAACC,GAAWiD,MAE3B,gBAAAxI;AAAA,MAACoJ;AAAA,MAAA;AAAA,QACC,SAASL,EAAO,UAAUxD,EAAK;AAAA,QAE/B,SAASA,EAAK;AAAA,QAEd,UAAC,gBAAAvF,EAAA,OAAA,EAAI,WAAU,iCACZ,YAAK,MACR,CAAA;AAAA,MAAA;AAAA,MALK,aAAawI,CAAK;AAAA,IAMzB,GAGN,CAAA;AAAA,EAAA,GACF;AAEJ;ACxCa,MAAA0C,KAAWC,EAAU,OAAwB;AAAA,EACxD,MAAM;AAAA,EACN,aAAa;;AACJ,WAAA;AAAA,MACL,IAAG7K,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,OAAO,CAAC,WAAW;AAAA,MACnB,WAAW,CAAC,GAAG8K,EAAsB;AAAA,MACrC,OAAO,EAAE,QAAA1K,GAAQ,WAAAyG,GAAW,GAAAxG,KAAK;;AAC/B,cAAM0K,IAAY1B,KAAuBrJ,IAAA6G,EAAU,YAAV,gBAAA7G,EAAmB,cAAagL,EAAuB,GAC1FC,IAAkB5B,GAAuB,CAAC2B,EAAuB,CAAC,EAAE,CAAC,GACrEzB,IAAQwB,EAAU,IAAI,CAAMpC,OAAA;AAAA,UAChC,OAAOA,EAAE,UAAUsC,EAAgB,QAAQ5K,EAAE,iCAAiC,IAAI,OAAOsI,EAAE,IAAI;AAAA,UAC/F,UAAU,MAAM;AACd,kBAAM,EAAE,UAAAuC,EAAa,IAAA9K,EAAO,cAAc,WAAW;AAGrD,mBAFkBuI,EAAE,UAAUsC,EAAgB,SAC1BC,MAAa,SAExB,KAEF9K,EAAO,SAAS,EAAE,UAAU,OAAOuI,EAAE,KAAK,EAAG,CAAA,KAAK;AAAA,UAC3D;AAAA,UACA,QAAQ,MAAM;AACR,gBAAAA,EAAE,UAAUsC,EAAgB,OAAO;AACrC,cAAA7K,EAAO,SAAS,cAAc;AAC9B;AAAA,YAAA;AAEF,YAAAA,EAAO,SAAS,YAAY,OAAOuI,EAAE,KAAK,CAAC;AAAA,UAC7C;AAAA,UACA,UAAU,CAACvI,EAAO,MAAM,YAAY,OAAOuI,EAAE,KAAK,CAAC;AAAA,UACnD,SAASA,EAAE,UAAUsC,EAAgB,SAAS;AAAA,UAC9C,SAAStC,EAAE,UAAUsC,EAAgB,SAAS;AAAA,QAAA,EAC9C,GACIxB,IAAWF,EAAM,OAAO,CAAAZ,MAAKA,EAAE,QAAQ,EAAE,WAAWY,EAAM;AACzD,eAAA;AAAA,UACL,WAAWoB;AAAA,UACX,gBAAgB;AAAA,YACd,QAAAvK;AAAA,YACA,SAASC,EAAE,yBAAyB;AAAA,YACpC,UAAAoJ;AAAA,YACA,OAAAF;AAAA,YACA,WAAW;AAAA,UAAA;AAAA,QAEf;AAAA,MAAA;AAAA,IAEJ;AAAA,EACF;AAAA,EACA,sBAAsB;AACb,WAAA;AAAA,MACL;AAAA,QACE,OAAO,KAAK,QAAQ;AAAA,QACpB,YAAY;AAAA,UACV,UAAU;AAAA,YACR,SAAS;AAAA,YACT,WAAW,CAAW4B,MAAAA,EAAQ,MAAM,SAAS,WAAW,UAAU,EAAE;AAAA,YACpE,YAAY,CAACC,MACNA,EAAW,WAGT;AAAA,cACL,OAAO,cAAcA,EAAW,QAAQ;AAAA,YAC1C,IAJS,CAAC;AAAA,UAKZ;AAAA,QACF;AAAA,MACF;AAAA,IAEJ;AAAA,EACF;AAAA,EACA,cAAc;AACL,WAAA;AAAA,MACL,aACE,CAAAF,MACE,CAAC,EAAE,OAAAG,QACMA,IAAQ,QAAQ,aAAa,EAAE,UAAAH,EAAS,CAAC,EAAE,IAAI;AAAA,MAE5D,eACE,MACE,CAAC,EAAE,OAAAG,QACMA,EAAA,EAAQ,QAAQ,aAAa,EAAE,UAAU,MAAM,EAAE,qBAAqB,EAAE,IAAI;AAAA,IAE3F;AAAA,EAAA;AAEJ,CAAC;AC9FD,SAASC,GAAM,EAAE,MAAAC,KAAoB;AAEjC,SAAA,gBAAA7L;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,OAAM;AAAA,MACN,QAAO;AAAA,MACP,SAAQ;AAAA,MACR,SAAQ;AAAA,MACR,OAAM;AAAA,MAEN,4BAAC,KAAE,EAAA,QAAO,QAAO,aAAa,GAAG,MAAK,QAAO,UAAS,WACpD,4BAAC,KAAE,EAAA,WAAU,iCACX,UAAC,gBAAAI,EAAA,KAAA,EAAE,WAAU,mCACX,UAAA;AAAA,QAAA,gBAAAJ;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,GAAE;AAAA,YACF,IAAG;AAAA,YACH,MAAM6L,KAAQ;AAAA,YACd,UAAS;AAAA,UAAA;AAAA,QACX;AAAA,QACA,gBAAA7L;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,GAAE;AAAA,YACF,IAAG;AAAA,YACH,MAAK;AAAA,YACL,UAAS;AAAA,UAAA;AAAA,QACX;AAAA,QACA,gBAAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,GAAE;AAAA,YACF,IAAG;AAAA,YACH,MAAK;AAAA,YACL,UAAS;AAAA,UAAA;AAAA,QAAA;AAAA,MACX,EACF,CAAA,EACF,CAAA,EACF,CAAA;AAAA,IAAA;AAAA,EACF;AAEJ;AAEA,SAAS8L,GAAkBnM,GAA+B;AACxD,QAAM,CAACoM,GAAeC,CAAgB,IAAInF,EAA6B,MAAS;AAEhF,WAASoF,EAASC,GAA2B;;AAC3C,KAAA5L,IAAAX,EAAM,WAAN,QAAAW,EAAA,KAAAX,GAAeuM;AAAA,EAAK;AAGtB,WAASC,IAAc;;AACrB,KAAA7L,IAAAX,EAAM,WAAN,QAAAW,EAAA,KAAAX,GAAeoM;AAAA,EAAa;AAG9B,QAAMK,IAA2BtE;AAAA,IAC/BuE,GAAS,CAACH,MAA8B;AACtC,MAAAF,EAAiBE,CAAK;AAAA,OACrB,GAAG;AAAA,IACN,CAAA;AAAA,EACF;AAGE,SAAA,gBAAA9L,EAAC,OAAI,EAAA,WAAU,yDACb,UAAA;AAAA,IAAA,gBAAAJ,EAACY,KAAa,SAASjB,KAAA,gBAAAA,EAAO,SAAS,UAAUA,KAAA,gBAAAA,EAAO,UAAU,QAAQwM,GACxE,UAAC,gBAAAnM,EAAA,QAAA,EAAK,WAAU,gFACd,UAAA,gBAAAA,EAAC4L,MAAM,MAAMG,GAAe,GAC9B,EACF,CAAA;AAAA,IAEA,gBAAA/L;AAAA,MAACsM;AAAA,MAAA;AAAA,QACC,eAAAP;AAAA,QACA,kBAAkBK;AAAA,QAClB,UAAAH;AAAA,QACA,UAAUtM,KAAA,gBAAAA,EAAO;AAAA,QACjB,QAAQA,KAAA,gBAAAA,EAAO;AAAA,QACf,cAAcA,KAAA,gBAAAA,EAAO;AAAA,QAErB,4BAACQ,GAAO,EAAA,SAAQ,SAAQ,MAAK,QAAO,WAAU,oCAAmC,UAAUR,KAAA,gBAAAA,EAAO,UAChG,UAAC,gBAAAK,EAAAsI,GAAA,EAAc,WAAU,sDAAqD,MAAK,YAAW,EAChG,CAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EACF,GACF;AAEJ;ACnFa,MAAAiE,KAAQC,GAAY,OAAqB;AAAA,EACpD,aAAa;;AACJ,WAAA;AAAA,MACL,IAAGlM,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,OAAO,EAAE,QAAAI,GAAQ,GAAAC,GAAG,WAAAwG,KAAa;AACxB,eAAA;AAAA,UACL,WAAW2E;AAAA,UACX,gBAAgB;AAAA,YACd,QAAQ3E,EAAU,QAAQ;AAAA,YAC1B,cAAcA,EAAU,QAAQ;AAAA,YAChC,QAAQ,CAAC+E,MAAoB;AAC3B,cAAIA,MAAU,UACZxL,EAAO,QAAQ,MAAQ,EAAA,WAAA,EAAa,IAAI,GAEtC,OAAOwL,KAAU,YACnBxL,EAAO,QAAQ,MAAA,EAAQ,SAASwL,CAAK,EAAE,IAAI;AAAA,YAE/C;AAAA,YACA,UAAU,MAAM;AACd,oBAAM,EAAE,OAAAA,EAAU,IAAAxL,EAAO,cAAc,WAAW;AAClD,qBAAKwL,KAGExL,EAAO,SAAS,EAAE,OAAAwL,EAAA,CAAO,KAAK;AAAA,YACvC;AAAA,YACA,QAAAxL;AAAA,YACA,UAAU,CAACA,EAAO,IAAI,EAAE,SAAS,EAAE;AAAA,YACnC,SAASC,EAAE,sBAAsB;AAAA,UAAA;AAAA,QAErC;AAAA,MAAA;AAAA,IAEJ;AAAA,EAAA;AAEJ,CAAC,GCzCY8L,KAAYC,GAAgB,OAAyB;AAAA,EAChE,aAAa;;AACJ,WAAA;AAAA,MACL,IAAGpM,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,YAAY;AAAA,MACZ,QAAQ,CAAC,EAAE,QAAAI,GAAQ,GAAAC,SAAS;AAAA,QAC1B,WAAWgM;AAAA,QACX,gBAAgB;AAAA,UACd,QAAQ,CAACT,MAAoB;AACvB,YAAA,OAAOA,KAAU,YACZxL,EAAA,QAAQ,MAAM,EAAE,aAAa,EAAE,OAAAwL,EAAA,CAAO,EAAE,IAAI,GAEjDA,MAAU,UACZxL,EAAO,QAAQ,MAAQ,EAAA,eAAA,EAAiB,IAAI;AAAA,UAEhD;AAAA,UACA,QAAAA;AAAA,UACA,UAAU,MAAMA,EAAO,SAAS,WAAW,KAAK;AAAA,UAChD,UAAU,CAACA,EAAO,IAAA,EAAM,aAAa;AAAA,UACrC,cAAc,CAAC,KAAK,OAAO,GAAG;AAAA,UAC9B,SAASC,EAAE,0BAA0B;AAAA,QAAA;AAAA,MAEzC;AAAA,IACF;AAAA,EAAA;AAEJ,CAAC,GCzBYiM,KAAaC,GAAiB,OAA0B;AAAA,EACnE,aAAa;;AACJ,WAAA;AAAA,MACL,IAAGvM,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,QAAQ,CAAC,EAAE,QAAAI,GAAQ,GAAAC,SAAS;AAAA,QAC1B,WAAWC;AAAA,QACX,gBAAgB;AAAA,UACd,QAAQ,MAAMF,EAAO,SAAS,iBAAiB;AAAA,UAC/C,UAAU,MAAMA,EAAO,SAAS,YAAY,KAAK;AAAA,UACjD,UAAU;AAAA,UACV,cAAc,CAAC,SAAS,OAAO,GAAG;AAAA,UAClC,MAAM;AAAA,UACN,SAASC,EAAE,2BAA2B;AAAA,QAAA;AAAA,MAE1C;AAAA,IACF;AAAA,EAAA;AAEJ,CAAC,GCpBYmM,KAAQC,GAAK,OAAqB;AAAA,EAC7C,MAAM;AAAA,EACN,aAAa;;AACJ,WAAA;AAAA,MACL,IAAGzM,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,QAAQ,CAAC,EAAE,QAAAI,GAAQ,GAAAC,SAAS;AAAA,QAC1B,WAAWC;AAAA,QACX,gBAAgB;AAAA,UACd,QAAQ,MAAMF,EAAO,QAAQ,MAAM,EAAE,WAAW,EAAE,cAAc,EAAE,IAAI;AAAA,UACtE,UAAU,CAACA,EAAO,IAAA,EAAM,MAAA,EAAQ,MAAA,EAAQ,WAAA,EAAa,cAAA,EAAgB,IAAI;AAAA,UACzE,MAAM;AAAA,UACN,SAASC,EAAE,sBAAsB;AAAA,QAAA;AAAA,MAErC;AAAA,IACF;AAAA,EAAA;AAEJ,CAAC,GCbYqM,KAAcC,GAAkB,OAA2B;AAAA,EACtE,aAAa;;AACJ,WAAA;AAAA,MACL,IAAG3M,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,QAAQ,CAAC,EAAE,QAAAI,GAAQ,GAAAC,SAAS;AAAA,QAC1B,WAAWC;AAAA,QACX,gBAAgB;AAAA,UACd,QAAQ,MAAMF,EAAO,SAAS,kBAAkB;AAAA,UAChD,UAAU,MAAMA,EAAO,SAAS,aAAa,KAAK;AAAA,UAClD,UAAU;AAAA,UACV,MAAM;AAAA,UACN,cAAc,CAAC,OAAO,SAAS,GAAG;AAAA,UAClC,SAASC,EAAE,4BAA4B;AAAA,QAAA;AAAA,MAE3C;AAAA,IACF;AAAA,EAAA;AAEJ,CAAC,GCXYuM,KAAWC,GAAe,OAAwB;AAAA,EAC7D,aAAa;;AACJ,WAAA;AAAA,MACL,IAAG7M,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,gBAAgB;AAAA,QACd,OAAO;AAAA,MACT;AAAA,MACA,UAAU;AAAA,QACR,gBAAgB;AAAA,UACd,OAAO;AAAA,QAAA;AAAA,MAEX;AAAA,MACA,QAAQ,CAAC,EAAE,QAAAI,GAAQ,GAAAC,SAAS;AAAA,QAC1B,WAAWC;AAAA,QACX,gBAAgB;AAAA,UACd,QAAQ,MAAMF,EAAO,SAAS,eAAe;AAAA,UAC7C,UAAU,MAAMA,EAAO,SAAS,UAAU,KAAK;AAAA,UAC/C,UAAU;AAAA,UACV,MAAM;AAAA,UACN,cAAc,CAAC,SAAS,OAAO,GAAG;AAAA,UAClC,SAASC,EAAE,yBAAyB;AAAA,QAAA;AAAA,MAExC;AAAA,IACF;AAAA,EACF;AAAA,EAEA,gBAAgB;AACd,WAAO,CAACyM,GAAS,UAAU,KAAK,QAAQ,QAAQ,CAAC;AAAA,EAAA;AAErD,CAAC,GCnCYC,KAAaC,GAAiB,OAA0B;AAAA,EACnE,aAAa;;AACJ,WAAA;AAAA,MACL,IAAGhN,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,gBAAgB;AAAA,QACd,OAAO;AAAA,MACT;AAAA,MACA,QAAQ,CAAC,EAAE,QAAAI,GAAQ,GAAAC,SAAc;AAAA,QAC/B,WAAWC;AAAA,QACX,gBAAgB;AAAA,UACd,QAAQ,MAAMF,EAAO,SAAS,iBAAiB;AAAA,UAC/C,UAAU,MAAMA,EAAO,SAAS,YAAY,KAAK;AAAA,UACjD,UAAU,CAACA,EAAO,IAAA,EAAM,iBAAiB;AAAA,UACzC,MAAM;AAAA,UACN,cAAc,CAAC,SAAS,OAAO,GAAG;AAAA,UAClC,SAASC,EAAE,2BAA2B;AAAA,QAAA;AAAA,MAE1C;AAAA,IACF;AAAA,EAAA;AAEJ,CAAC;ACbD,SAAS4M,GAAgB5N,GAA8B;AACrD,QAAM,CAAC6N,GAAMC,CAAO,IAAI5G,EAAS,EAAK;AAE7B,WAAA6G,EAAUC,GAAc7G,GAAe8G,GAAwB;AACtE,IAAIjO,EAAM,WACRA,EAAM,OAAO,EAAE,MAAAgO,GAAM,MAAA7G,GAAM,cAAA8G,GAAc,GACzCH,EAAQ,EAAK;AAAA,EACf;AAGF,2BACGjD,IAAQ,EAAA,OAAK,IAAC,MAAAgD,GAAY,cAAcC,GACvC,UAAA;AAAA,IAAA,gBAAAzN,EAACyK,IAAe,EAAA,UAAU9K,KAAA,gBAAAA,EAAO,UAAU,SAAO,IAChD,UAAA,gBAAAK;AAAA,MAACY;AAAA,MAAA;AAAA,QACC,SAASjB,KAAA,gBAAAA,EAAO;AAAA,QAChB,UAAUA,KAAA,gBAAAA,EAAO;AAAA,QACjB,UAAUA,KAAA,gBAAAA,EAAO;AAAA,QAEjB,UAAC,gBAAAK,EAAAsI,GAAA,EAAc,MAAM3I,KAAA,gBAAAA,EAAO,KAAM,CAAA;AAAA,MAAA;AAAA,IAAA,GAEtC;AAAA,sBACC+K,IAAe,EAAA,kBAAgB,IAAC,WAAU,mBAAkB,OAAM,SAAQ,MAAK,UAC9E,4BAACmD,IAAc,EAAA,QAAQlO,EAAM,QAAQ,WAAA+N,GAAsB,EAC7D,CAAA;AAAA,EAAA,GACF;AAEJ;AChCa,MAAAI,KAAOC,GAAW,OAAoB;AAAA,EACjD,WAAW;AAAA,EACX,YAAY;AACH,WAAA;AAAA,MACL;AAAA,QACE,KAAK;AAAA,MAAA;AAAA,IAET;AAAA,EACF;AAAA,EACA,WAAW,EAAE,gBAAAC,KAAkB;AACtB,WAAA;AAAA,MACL;AAAA,MACAC,GAAgB,KAAK,QAAQ,gBAAgBD,GAAgB;AAAA,QAC3D,OAAO;AAAA,MAAA,CACR;AAAA,MACD;AAAA,IACF;AAAA,EACF;AAAA,EAEA,aAAa;;AACJ,WAAA;AAAA,MACL,IAAG1N,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,aAAa;AAAA,MACb,QAAQ,CAAC,EAAE,QAAAI,GAAQ,GAAAC,SACV;AAAA,QACL,WAAW4M;AAAA,QACX,gBAAgB;AAAA,UACd,QAAA7M;AAAA,UACA,QAAQ,CAAC6H,MAAU;AACjB,kBAAM,EAAE,MAAAoF,GAAM,MAAA7G,GAAM,cAAA8G,EAAiB,IAAArF;AACrC,YAAA7H,EACG,MAAM,EACN,gBAAgB,MAAM,EACtB,cAAc;AAAA,cACb,MAAM;AAAA,cACN,MAAAoG;AAAA,cACA,OAAO;AAAA,gBACL;AAAA,kBACE,MAAM;AAAA,kBACN,OAAO;AAAA,oBACL,MAAM6G;AAAA,oBACN,QAAQC,IAAe,WAAW;AAAA,kBAAA;AAAA,gBACpC;AAAA,cACF;AAAA,YACF,CACD,EACA,QAAQ,EAAE,MAAMD,GAAM,EACtB,MAAM,EACN,IAAI;AAAA,UACT;AAAA,UACA,IAAI;AAAA,UACJ,UAAU,MAAMjN,EAAO,SAAS,MAAM,KAAK;AAAA,UAC3C,UAAU,CAACA,EAAO,IAAA,EAAM,QAAQ,EAAE,MAAM,IAAI;AAAA,UAC5C,MAAM;AAAA,UACN,SAASC,EAAE,qBAAqB;AAAA,QAAA;AAAA,MAEpC;AAAA,IAEJ;AAAA,EACF;AAAA,EAEA,wBAAwB;AACf,WAAA;AAAA,MACL,IAAImD,GAAO;AAAA,QACT,OAAO;AAAA,UACL,aAAa,CAACE,GAAkBkK,MAAgB;AAC9C,kBAAM,EAAE,QAAAC,GAAQ,KAAA3L,GAAK,IAAA0B,MAAOF,EAAK,OAC3BoK,IAAQC,GAAa7L,EAAI,QAAQ0L,CAAG,GAAGC,EAAO,MAAM,IAAI;AAC9D,gBAAI,CAACC;AACI,qBAAA;AAET,kBAAME,IAAS9L,EAAI,QAAQ4L,EAAM,IAAI,GAC/BG,IAAO/L,EAAI,QAAQ4L,EAAM,EAAE,GAC3BhK,IAAcF,EAAG,aAAa,IAAIsK,GAAcF,GAAQC,CAAI,CAAC;AACnE,YAAAvK,EAAK,SAASI,CAAW;AAAA,UAAA;AAAA,QAC3B;AAAA,MAEH,CAAA;AAAA,IACH;AAAA,EAAA;AAEJ,CAAC,GChFYqK,KAAiBC,GAAqB,OAA8B;AAAA,EAC/E,aAAa;AACJ,WAAA;AAAA,MACL;AAAA,MACAT,GAAgB,KAAK,QAAQ,gBAAgB;AAAA,QAC3C,aAAa,KAAK;AAAA,MAAA,CACnB;AAAA,MACD,CAAC,IAAI;AAAA,IACP;AAAA,EACF;AAAA,EACA,aAAa;;AACJ,WAAA;AAAA,MACL,IAAG3N,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,QAAQ,CAAC,EAAE,QAAAI,GAAQ,GAAAC,SAAS;AAAA,QAC1B,WAAWC;AAAA,QACX,gBAAgB;AAAA,UACd,QAAQ,MAAMF,EAAO,SAAS,kBAAkB;AAAA,UAChD,UAAU,CAACA,EAAO,IAAA,EAAM,kBAAkB;AAAA,UAC1C,MAAM;AAAA,UACN,cAAc,CAAC,OAAO,OAAO,GAAG;AAAA,UAChC,SAASC,EAAE,+BAA+B;AAAA,QAAA;AAAA,MAE9C;AAAA,IACF;AAAA,EACF;AAAA,EACA,uBAAuB;AACd,WAAA;AAAA,MACL,aAAa,MAAM,KAAK,OAAO,SAAS,kBAAkB;AAAA,IAC5D;AAAA,EAAA;AAEJ,CAAC;AClBD,SAASgO,GAAoBhP,GAA4C;;AACjE,QAAA;AAAA,IACJ,MAAAiP,IAAO;AAAA;AAAA,IAEP,SAAAC,IAAU;AAAA;AAAA,IAEV,aAAAC,IAAc;AAAA;AAAA;AAAA;AAAA,IAId,gBAAAC,IAAiB,CAAC;AAAA,IAClB,QAAA/J,IAAS;AAAA,IACT,UAAAgK,IAAW;AAAA,IACX,UAAAlJ;AAAA,EAAA,IACEnG,GAEEE,IAAOC,GAAM8O,CAAc;AAEjC,2BACG7O,IACC,EAAA,UAAA;AAAA,IAAC,gBAAAC,EAAAC,IAAA,EAAe,SAAO,IACrB,UAAA,gBAAAG;AAAA,MAACuK;AAAA,MAAA;AAAA,QACC,MAAK;AAAA,QACL,WAAW,uCAAuCmE,CAAW;AAAA,QAC7D,UAAUE,KAAA,gBAAAA;AAAA,QACV,SAAShK;AAAA,QAGR,UAAA;AAAA,UAAQnF,KAAA,gBAAAG,EAACH,GAAK,EAAA,WAAU,4BAA4B,CAAA;AAAA,UACpDiG,6BACE,UAAAA,EACH,CAAA;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA,GAEJ;AAAA,IACC+I,uBACExO,IAAgB,EAAA,GAAG0O,GAClB,UAAC,gBAAA3O,EAAA,OAAA,EAAI,WAAU,gGACb,UAAA;AAAA,MAAA,gBAAAJ,EAAC,SACE,UACH6O,EAAA,CAAA;AAAA,MACC,CAAC,GAACvO,IAAAX,KAAA,gBAAAA,EAAO,iBAAP,QAAAW,EAAqB,6BAAW,QAChC,EAAA,UAAAC,GAAgBZ,KAAA,gBAAAA,EAAO,YAAY,EACtC,CAAA;AAAA,IAAA,EAAA,CACF,EACF,CAAA;AAAA,EAAA,GAEJ;AAEJ;AC/DA,MAAMsP,KAA6B,CAAC,QAAQ,MAAM,GAErCC,KAAUC,GAAc,OAAuB;AAAA,EAC1D,aAAa;;AACJ,WAAA;AAAA,MACL,IAAG7O,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,OAAO;AAAA,MACP,eAAe;AAAA,MACf,QAAQ,CAAC,EAAE,QAAAI,GAAQ,GAAAC,QACVsO,GAAS,IAAI,CAAS1J,OAAA;AAAA,QAC3B,WAAWoJ;AAAA,QACX,gBAAgB;AAAA,UACd,QAAQ,MAAM;AACZ,YAAIpJ,MAAS,UACX7E,EAAO,QAAQ,MAAQ,EAAA,KAAA,EAAO,IAAI,GAEhC6E,MAAS,UACX7E,EAAO,QAAQ,MAAQ,EAAA,KAAA,EAAO,IAAI;AAAA,UAEtC;AAAA,UACA,cAAc6E,MAAS,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,OAAO,GAAG;AAAA,UACnE,UAAUA,MAAS,SAAS,CAAC7E,EAAO,IAAA,EAAM,KAAA,IAAS,CAACA,EAAO,IAAA,EAAM,KAAK;AAAA,UACtE,UAAU,MAAO6E,MAAS,SAAS,CAAC7E,EAAO,MAAM,KAAS,IAAA,CAACA,EAAO,IAAA,EAAM,KAAK;AAAA,UAC7E,MAAM6E,MAAS,SAAS,UAAU;AAAA,UAClC,SAAS5E,EAAE,UAAU4E,CAAI,UAAU;AAAA,QAAA;AAAA,MACrC,EACA;AAAA,IAEN;AAAA,EAAA;AAEJ,CAAC,GCpCY6J,KAAWC,GAAe,OAAO;AAAA,EAC5C,SAAS;AAAA;AAEX,CAAC,GCDYC,KAAqBnE,EAAU,OAAY;AAAA,EACtD,MAAM;AAAA,EACN,aAAa;;AACJ,WAAA;AAAA,MACL,IAAG7K,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,QAAQ,CAAC,EAAE,QAAAI,GAAQ,GAAAC,SAAc;AAAA,QAC/B,WAAWC;AAAA,QACX,gBAAgB;AAAA,UACd,QAAQ,MAAM;AACL,YAAAF,EAAA,QAAQ,QAAQ,cAAc,EAAE,MAAM,GAAG,EAAE,IAAI;AAAA,UACxD;AAAA,UACA,MAAM;AAAA,UACN,SAASC,EAAE,wBAAwB;AAAA,QAAA;AAAA,MAEvC;AAAA,IACF;AAAA,EAAA;AAEJ,CAAC,GCjBY4O,KAAYpE,EAAU,OAAO;AAAA,EACxC,MAAM;AAAA,EACN,wBAAwB;AAChB,UAAA,EAAE,QAAAzK,MAAW;AACZ,WAAA;AAAA,MACL,IAAIoD,GAAO;AAAA,QACT,KAAK,IAAIC,EAAU,WAAW;AAAA,QAC9B,OAAO;AAAA,UACL,YAAYe,GAAO;AAIb,mBAHAA,EAAM,UAAU,SAGhBpE,EAAO,cAAc,KAChB,OAEFiD,GAAc,OAAOmB,EAAM,KAAK;AAAA,cACrCpB,GAAW,OAAOoB,EAAM,UAAU,MAAMA,EAAM,UAAU,IAAI;AAAA,gBAC1D,OAAO;AAAA,cACR,CAAA;AAAA,YAAA,CACF;AAAA,UAAA;AAAA,QACH;AAAA,MAEH,CAAA;AAAA,IACH;AAAA,EAAA;AAEJ,CAAC;ACbD,SAAS0K,GAAa7P,GAA2B;AACzC,QAAA,EAAE,EAAE,IAAImJ,EAAU,GAElB2G,IAAQvK,EAAQ,MACb;AAAA,IACL;AAAA,MACE,MAAM;AAAA,MACN,OAAO,EAAE,0BAA0B;AAAA,MACnC,UAAU;AAAA,MACV,UAAU,MACRvF,EAAM,OAAO,SAAS,WAAW,KAC9B,CAACA,EAAM,OAAO,SAAS,aAAa,KACpC,CAACA,EAAM,OAAO,SAAS,YAAY,KACnC,CAACA,EAAM,OAAO,SAAS,UAAU;AAAA,MACtC,QAAQ,MAAMA,EAAM,OAAO,QAAQ,MAAM,EAAE,WAAW,EAAE,IAAI;AAAA,IAC9D;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,OAAO,EAAE,2BAA2B;AAAA,MACpC,UAAU,MAAMA,EAAM,OAAO,SAAS,WAAW,EAAE,OAAO,GAAG;AAAA,MAC7D,UAAU;AAAA,MACV,QAAQ,MAAMA,EAAM,OAAO,QAAQ,MAAM,EAAE,WAAW,EAAE,cAAc,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI;AAAA,IAC1F;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,OAAO,EAAE,2BAA2B;AAAA,MACpC,UAAU,MAAMA,EAAM,OAAO,SAAS,WAAW,EAAE,OAAO,GAAG;AAAA,MAC7D,UAAU;AAAA,MACV,QAAQ,MAAMA,EAAM,OAAO,QAAQ,MAAM,EAAE,WAAW,EAAE,cAAc,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI;AAAA,IAC1F;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,OAAO,EAAE,2BAA2B;AAAA,MACpC,UAAU,MAAMA,EAAM,OAAO,SAAS,WAAW,EAAE,OAAO,GAAG;AAAA,MAC7D,UAAU;AAAA,MACV,QAAQ,MAAMA,EAAM,OAAO,QAAQ,MAAM,EAAE,WAAW,EAAE,cAAc,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI;AAAA,IAC1F;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,OAAO,EAAE,2BAA2B;AAAA,MACpC,UAAU,MAAMA,EAAM,OAAO,SAAS,YAAY;AAAA,MAClD,UAAU;AAAA,MACV,QAAQ,MAAMA,EAAM,OAAO,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,iBAAiB,EAAE,IAAI;AAAA,IACjF;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,OAAO,EAAE,4BAA4B;AAAA,MACrC,UAAU,MAAMA,EAAM,OAAO,SAAS,aAAa;AAAA,MACnD,UAAU;AAAA,MACV,QAAQ,MAAMA,EAAM,OAAO,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,kBAAkB,EAAE,IAAI;AAAA,IAClF;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,OAAO,EAAE,yBAAyB;AAAA,MAClC,UAAU,MAAMA,EAAM,OAAO,SAAS,UAAU;AAAA,MAChD,UAAU;AAAA,MACV,QAAQ,MAAMA,EAAM,OAAO,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,eAAe,EAAE,IAAI;AAAA,IAC/E;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,OAAO,EAAE,2BAA2B;AAAA,MACpC,UAAU,MAAMA,EAAM,OAAO,SAAS,YAAY;AAAA,MAClD,UAAU;AAAA,MACV,QAAQ,MAAMA,EAAM,OAAO,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,iBAAiB,EAAE,IAAI;AAAA,IACjF;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,OAAO,EAAE,0BAA0B;AAAA,MACnC,UAAU,MAAMA,EAAM,OAAO,SAAS,WAAW;AAAA,MACjD,UAAU;AAAA,MACV,QAAQ,MAAMA,EAAM,OAAO,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,gBAAgB,EAAE,IAAI;AAAA,IAAA;AAAA,EAElF,GACC,CAACA,EAAM,QAAQ,CAAC,CAAC,GAEd+P,IAAaxK,EAAQ,MAEvBuK,EAAM,SAAS,CAAAlK,MAAQA,EAAK,SAAA,CAAU,KAAK;AAAA,IACzC,OAAO;AAAA,EACT,GAED,CAACkK,CAAK,CAAC;AAEV,2BACGrK,GACC,EAAA,UAAA;AAAA,IAAC,gBAAApF,EAAAqF,GAAA,EAAoB,SAAO,IAC1B,UAAA,gBAAAjF;AAAA,MAACD;AAAA,MAAA;AAAA,QAAO,WAAU;AAAA,QAChB,SAAQ;AAAA,QAER,UAAA;AAAA,UAAC,gBAAAC,EAAA,QAAA,EAAK,WAAU,oEACb,UAAA;AAAA,YAAA;AAAA,YACAsP,KAAA,gBAAAA,EAAY;AAAA,UAAA,GACf;AAAA,UAEA,gBAAA1P,EAACgG,IAAY,EAAA,WAAU,kBAAkB,CAAA;AAAA,QAAA;AAAA,MAAA;AAAA,IAAA,GAE7C;AAAA,IAEA,gBAAAhG;AAAA,MAACsF;AAAA,MAAA;AAAA,QAAoB,OAAM;AAAA,QACzB,WAAU;AAAA,QACV,kBAAgB;AAAA,QAChB,YAAY;AAAA,QAEX,UAAMmK,EAAA,IAAI,CAAClK,GAAMiD,MAAU;;AACpB,gBAAA3I,IAAOC,GAAMyF,EAAK,QAAe;AAGrC,iBAAA,gBAAAvF;AAAA,YAACoJ;AAAA,YAAA;AAAA,cACC,WAAS9I,IAAAiF,EAAK,aAAL,gBAAAjF,EAAA,KAAAiF,OAAqB;AAAA,cAC9B,WAAU;AAAA,cAEV,SAAS,MAAMA,EAAK,OAAO;AAAA,cAE3B,UAAA,gBAAAnF,EAAC,OAAI,EAAA,WAAU,oEACb,UAAA;AAAA,gBAAC,gBAAAJ,EAAAH,GAAA,EAAK,WAAU,2BAA2B,CAAA;AAAA,kCAE1C,QACE,EAAA,UAAA;AAAA,kBAAA;AAAA,kBACA0F,EAAK;AAAA,gBAAA,EACR,CAAA;AAAA,cAAA,EACF,CAAA;AAAA,YAAA;AAAA,YAVK,eAAeiD,CAAK;AAAA,UAW3B;AAAA,QAEH,CAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EACH,GACF;AAEJ;ACxIa,MAAAmH,KAAaxE,EAAU,OAA0B;AAAA,EAC5D,MAAM;AAAA,EACN,aAAa;;AACJ,WAAA;AAAA,MACL,IAAG7K,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,SAAS;AAAA,MACT,QAAQ,OAAO;AAAA,QACb,WAAWkP;AAAA,QACX,gBAAgB,CAAA;AAAA,MAClB;AAAA,IACF;AAAA,EAAA;AAEJ,CAAC;ACdD,SAASI,GAAe,EAAE,OAAAC,GAAO,MAAA/M,KAAQ;AAC/B,SAAA,MAAM,QAAQ+M,CAAK,KAAKA,EAAM,SAAS/M,EAAK,IAAI,KAAMA,EAAK,SAAS+M;AAC9E;AAaa,MAAAC,KAAe3E,EAAU,OAA4B;AAAA,EAChE,MAAM;AAAA,EAEN,aAAa;AACJ,WAAA;AAAA,MACL,MAAM;AAAA,MACN,UAAU,CAAC,WAAW;AAAA,IACxB;AAAA,EACF;AAAA,EAEA,wBAAwB;AACtB,UAAM4E,IAAS,IAAIhM,EAAU,KAAK,IAAI,GAChCiM,IAAgB,OAAO,QAAQ,KAAK,OAAO,OAAO,KAAK,EAC1D,IAAI,CAAC,CAAG,EAAAzH,CAAK,MAAMA,CAAK,EACxB,OAAO,CAAQzF,MAAA,KAAK,QAAQ,SAAS,SAASA,EAAK,IAAI,CAAC;AAEpD,WAAA;AAAA,MACL,IAAIgB,GAAO;AAAA,QACT,KAAKiM;AAAA,QACL,mBAAmB,CAAC5L,GAAG8L,GAAInL,MAAU;AACnC,gBAAM,EAAE,KAAAtC,GAAK,IAAA0B,GAAI,QAAAiK,EAAW,IAAArJ,GACtBoL,IAAwBH,EAAO,SAASjL,CAAK,GAC7CqL,IAAc3N,EAAI,QAAQ,MAC1B4N,IAAOjC,EAAO,MAAM,KAAK,QAAQ,IAAI;AAE3C,cAAK+B;AAIL,mBAAOhM,EAAG,OAAOiM,GAAaC,EAAK,QAAQ;AAAA,QAC7C;AAAA,QACA,OAAO;AAAA,UACL,MAAM,CAACjM,GAAGW,MAAU;AACZ,kBAAAuL,IAAWvL,EAAM,GAAG,IAAI;AAE9B,mBAAO,CAAC8K,GAAe,EAAE,MAAMS,GAAU,OAAOL,GAAe;AAAA,UACjE;AAAA,UACA,OAAO,CAAC9L,GAAIqE,MAAU;AAChB,gBAAA,CAACrE,EAAG;AACC,qBAAAqE;AAGH,kBAAA8H,IAAWnM,EAAG,IAAI;AAExB,mBAAO,CAAC0L,GAAe,EAAE,MAAMS,GAAU,OAAOL,GAAe;AAAA,UAAA;AAAA,QACjE;AAAA,MAEH,CAAA;AAAA,IACH;AAAA,EAAA;AAEJ,CAAC,GCgFYM,KAAUnF,EAAU,OAAuB;AAAA,EACtD,MAAM;AAAA,EAEN,gBAAgB;AACd,UAAM1B,IAA6B,CAAC;AAEhC,WAAA,KAAK,QAAQ,aAAa,MACjBA,EAAA,KAAK2F,GAAS,WAAW,GAGlC,KAAK,QAAQ,gBAAgB,MACpB3F,EAAA;AAAA,MACT8G,GAAY,UAAU;AAAA,QACpB,aAAa,CAAC,EAAE,MAAAzN,GAAM,KAAAoL,GAAK,QAAAxN,QAAa;;AACtC,mBAAIJ,IAAAwC,KAAA,gBAAAA,EAAM,SAAN,gBAAAxC,EAAY,UAAS,eAAaoH,IAAA5E,KAAA,gBAAAA,EAAM,YAAN,gBAAA4E,EAAe,UAAS,IACrD,OAGLiB,IAAA7F,KAAA,gBAAAA,EAAM,SAAN,gBAAA6F,EAAY,UAAS,YAEhB,GAAG6H,EAAc,EAAE,mBAAmB1N,EAAK,MAAM,KAAK,UAAU,CAAC,OAEtE2N,IAAA3N,KAAA,gBAAAA,EAAM,SAAN,gBAAA2N,EAAY,UAAS,iBAAeC,IAAA5N,KAAA,gBAAAA,EAAM,SAAN,gBAAA4N,EAAY,UAAS,UACpD,KAELhQ,EAAO,iBAAiB,WAAW,KAAK,OAAOiQ,EAAI,SAAS,cAAc,IACrEH,EAAc,EAAE,cAAc,IAEnCtC,MAAQ,IACHsC,EAAc,EAAE,gBAAgB,IAElCA,EAAc,EAAE,gBAAgB;AAAA,QACzC;AAAA,QACA,GAAG,KAAK,QAAQ;AAAA,MACjB,CAAA;AAAA,IACH,GAGE,KAAK,QAAQ,UAAU,MACd/G,EAAA;AAAA,MACTmH,GAAM,UAAU;AAAA,QACd,WAAW;AAAA,QACX,GAAG,KAAK,QAAQ;AAAA,MACjB,CAAA;AAAA,IACH,GAGE,KAAK,QAAQ,SAAS,MACbnH,EAAA,KAAKoH,GAAK,WAAW,GAE9B,KAAK,QAAQ,eAAe,MACnBpH,EAAA,KAAKkG,GAAW,WAAW,GAGpC,KAAK,QAAQ,cAAc,MAClBlG,EAAA,KAAKqH,GAAU,WAAW,GAGnC,KAAK,QAAQ,eAAe,MACnBrH,EAAA;AAAA,MACTsH,GAAW,UAAU;AAAA,QACnB,GAAG,KAAK,QAAQ;AAAA,QAChB,OAAO;AAAA,QACP,OAAO;AAAA,MACR,CAAA;AAAA,IACH,GAGE,KAAK,QAAQ,mBAAmB,MAClCtH,EAAW,KAAKuH,GAAe,UAAU,KAAK,QAAQ,cAAc,CAAC,GAGnE,KAAK,QAAQ,cAAc,MAC7BvH,EAAW,KAAKwH,GAAU,UAAU,KAAK,QAAQ,SAAS,CAAC,GAGzD,KAAK,QAAQ,cAAc,MAC7BxH,EAAW,KAAKyH,GAAU,UAAU,KAAK,QAAQ,SAAS,CAAC,GAGzD,KAAK,QAAQ,aAAa,MAC5BzH,EAAW,KAAK0H,GAAS,UAAU,KAAK,QAAQ,QAAQ,CAAC,GAGvD,KAAK,QAAQ,cAAc,MAC7B1H,EAAW,KAAK2H,GAAU,UAAU,KAAK,QAAQ,SAAS,CAAC,GAGzD,KAAK,QAAQ,iBAAiB,MAChC3H,EAAW,KAAKqG,GAAa,UAAU,KAAK,QAAQ,YAAY,CAAC,GAG/D,KAAK,QAAQ,cAAc,MAC7BrG,EAAW,KAAK8F,EAAS,GAGvB,KAAK,QAAQ,gBAAgB,MACpB9F,EAAA,KAAK4H,IAAQC,EAAW,GAG9B7H;AAAA,EAAA;AAEX,CAAC,GChOY8H,KAAoBpG,EAAU,OAAiC;AAAA,EAC1E,MAAM;AAAA,EAEN,aAAa;;AACJ,WAAA;AAAA,MACL,IAAG7K,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,QAAQ,CAAC,EAAE,QAAAI,GAAQ,WAAAyG,GAAW,GAAAxG,QAAQ;AAC9B,cAAA6Q,IAAYrK,EAAU,QAAQ,WAC9BsK,IAActK,EAAU,QAAQ,aAEhCuK,IAA2B;AAAA,UAC/B,WAAW9Q;AAAA,UACX,gBAAgB;AAAA,YACd,QAAQ,MAAMF,EAAO,SAAS,gBAAgB;AAAA,YAC9C,UAAU,MAAMA,EAAO,SAAS,WAAW,KAAK;AAAA,YAChD,UAAU,CAACA,EAAO,IAAA,EAAM,gBAAgB;AAAA,YACxC,MAAM;AAAA,YACN,SAASC,EAAE,0BAA0B;AAAA,UAAA;AAAA,QAEzC,GAEMgR,IAA6B;AAAA,UACjC,WAAW/Q;AAAA,UACX,gBAAgB;AAAA,YACd,QAAQ,MAAMF,EAAO,SAAS,kBAAkB;AAAA,YAChD,UAAU,MAAMA,EAAO,SAAS,aAAa,KAAK;AAAA,YAClD,UAAU,CAACA,EAAO,IAAA,EAAM,kBAAkB;AAAA,YAC1C,MAAM;AAAA,YACN,SAASC,EAAE,4BAA4B;AAAA,UAAA;AAAA,QAE3C,GAEMkJ,IAA4B,CAAC;AAEnC,eAAI2H,MAAc,MAChB3H,EAAM,KAAK6H,CAAM,GAEfD,MAAgB,MAClB5H,EAAM,KAAK8H,CAAQ,GAGd9H;AAAA,MAAA;AAAA,IAEX;AAAA,EACF;AAAA,EAEA,gBAAgB;AACd,UAAMJ,IAAyB,CAAC;AAE5B,WAAA,KAAK,QAAQ,cAAc,MAC7BA,EAAW,KAAKmI,GAAgB,UAAU,KAAK,QAAQ,SAAS,CAAC,GAG/D,KAAK,QAAQ,gBAAgB,MAC/BnI,EAAW,KAAKoI,GAAkB,UAAU,KAAK,QAAQ,WAAW,CAAC,GAGhEpI;AAAA,EAAA;AAEX,CAAC;ACpDD,SAASqI,GAAiBnS,GAA+B;;AACjD,QAAAoJ,IAAS7D,EAAQ,MAAM;;AACrB,UAAA8D,KAAY1I,IAAAX,KAAA,gBAAAA,EAAO,UAAP,gBAAAW,EAAc,KAAK,CAAC2I,MAAWA,EAAE;AAC/C,WAAAD,KAAQ,CAACA,EAAK,UACT;AAAA,MACL,GAAGA;AAAA,MACH,MAAMA,KAAA,QAAAA,EAAM,OAAOA,KAAA,gBAAAA,EAAM,OAAOrJ,KAAA,gBAAAA,EAAO;AAAA,IACzC,IAEiB;AAAA,MACjB,OAAOA,EAAM;AAAA,MACb,MAAMA,EAAM;AAAA,MACZ,UAAU,MAAM;AAAA,IAClB;AAAA,EAEO,GACN,CAACA,CAAK,CAAC;AAEV,2BACGyF,GACC,EAAA,UAAA;AAAA,IAAA,gBAAApF;AAAA,MAACqF;AAAA,MAAA;AAAA,QAAoB,SAAO;AAAA,QAC1B,UAAU1F,KAAA,gBAAAA,EAAO;AAAA,QAEjB,UAAA,gBAAAK;AAAA,UAACY;AAAA,UAAA;AAAA,YACC,aAAY;AAAA,YACZ,UAAUjB,KAAA,gBAAAA,EAAO;AAAA,YACjB,MAAMA,KAAA,gBAAAA,EAAO;AAAA,YACb,SAASA,KAAA,gBAAAA,EAAO;AAAA,YAEhB,UAAA,gBAAAK,EAAC+R,IAAS,EAAA,WAAU,yCAAyC,CAAA;AAAA,UAAA;AAAA,QAAA;AAAA,MAC/D;AAAA,IACF;AAAA,IAEA,gBAAA/R,EAACsF,KAAoB,WAAU,UAC5B,sCAAO,4BAAO,IAAI,CAACC,GAAWiD,MAE3B,gBAAApI;AAAA,MAACgJ;AAAA,MAAA;AAAA,QACC,SAASL,EAAO,UAAUxD,EAAK;AAAA,QAC/B,WAAU;AAAA,QAEV,SAASA,EAAK;AAAA,QAEd,UAAA;AAAA,UAAC,gBAAAvF,EAAAsI,GAAA,EAAc,MAAM/C,KAAA,gBAAAA,EAAM,KAAM,CAAA;AAAA,UAEhC,gBAAAvF,EAAA,QAAA,EAAK,WAAU,iBACb,YAAK,OACR;AAAA,UAEC,CAAC,EAACuF,KAAA,QAAAA,EAAM,iBACP,gBAAAvF,EAAC,QAAK,EAAA,WAAU,kFACb,UAAAO,GAAgBgF,EAAK,YAAY,EACpC,CAAA;AAAA,QAAA;AAAA,MAAA;AAAA,MAZG,aAAaiD,CAAK;AAAA,IAczB,GAGN,CAAA;AAAA,EAAA,GACF;AAEJ;ACpEa,MAAAwJ,KAAW7G,EAAU,OAAwB;AAAA,EACxD,MAAM;AAAA,EACN,aAAa;;AACJ,WAAA;AAAA,MACL,IAAG7K,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,OAAO,EAAE,QAAAI,GAAQ,WAAAyG,GAAW,GAAAxG,KAAK;AACzB,cAAA6Q,IAAYrK,EAAU,QAAQ,WAC9BsK,IAActK,EAAU,QAAQ,aAChCuK,IAAe;AAAA,UACnB,QAAQ,MAAMhR,EAAO,SAAS,gBAAgB;AAAA,UAC9C,UAAU,MAAMA,EAAO,SAAS,WAAW,KAAK;AAAA,UAChD,UAAU,CAACA,EAAO,IAAA,EAAM,gBAAgB;AAAA,UACxC,MAAM;AAAA,UACN,OAAOC,EAAE,0BAA0B;AAAA,UACnC,cAAc,CAAC,OAAO,GAAG;AAAA,QAC3B,GAEMgR,IAAiB;AAAA,UACrB,QAAQ,MAAMjR,EAAO,SAAS,kBAAkB;AAAA,UAChD,UAAU,MAAMA,EAAO,SAAS,aAAa,KAAK;AAAA,UAClD,UAAU,CAACA,EAAO,IAAA,EAAM,kBAAkB;AAAA,UAC1C,MAAM;AAAA,UACN,OAAOC,EAAE,4BAA4B;AAAA,UACrC,cAAc,CAAC,OAAO,GAAG;AAAA,QAC3B,GAGMkJ,IAAgB,CAAC;AAEvB,eAAI2H,MAAc,MAChB3H,EAAM,KAAK6H,CAAM,GAEfD,MAAgB,MAClB5H,EAAM,KAAK8H,CAAQ,GAgBd;AAAA,UACL,WAAWG;AAAA,UACX,gBAAgB;AAAA,YACd,MAAM;AAAA,YACN,SAASnR,EAAE,iBAAiB;AAAA,YAC5B,UAAU,CAACD,EAAO;AAAA,YAClB,OAAAmJ;AAAA,UAAA;AAAA,QAEJ;AAAA,MAAA;AAAA,IAEJ;AAAA,EACF;AAAA,EAEA,gBAAgB;AACd,UAAMJ,IAAyB,CAAC;AAE5B,WAAA,KAAK,QAAQ,cAAc,MAC7BA,EAAW,KAAKmI,GAAgB,UAAU,KAAK,QAAQ,SAAS,CAAC,GAG/D,KAAK,QAAQ,gBAAgB,MAC/BnI,EAAW,KAAKoI,GAAkB,UAAU,KAAK,QAAQ,WAAW,CAAC,GAGhEpI;AAAA,EAAA;AAEX,CAAC,GCzEYwI,KAAS9G,EAAU,OAAsB;AAAA,EACpD,MAAM;AAAA,EACN,aAAa;;AACJ,WAAA;AAAA,MACL,IAAG7K,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,OAAO,CAAC,aAAa,WAAW,YAAY;AAAA,MAC5C,WAAW4R,GAAY;AAAA,MACvB,WAAWA,GAAY;AAAA,MACvB,OAAO,EAAE,QAAAxR,GAAQ,GAAAC,KAAwD;AAChE,eAAA;AAAA,UACL;AAAA,YACE,WAAWC;AAAA,YACX,gBAAgB;AAAA,cACd,QAAQ,MAAM;AACZ,gBAAAF,EAAO,SAAS,OAAO;AAAA,cACzB;AAAA,cACA,cAAc,CAAC,KAAK;AAAA,cACpB,MAAM;AAAA,cACN,SAASC,EAAE,uBAAuB;AAAA,YAAA;AAAA,UAEtC;AAAA,UACA;AAAA,YACE,WAAWC;AAAA,YACX,gBAAgB;AAAA,cACd,QAAQ,MAAM;AACZ,gBAAAF,EAAO,SAAS,QAAQ;AAAA,cAC1B;AAAA,cACA,cAAc,CAAC,SAAS,KAAK;AAAA,cAC7B,MAAM;AAAA,cACN,SAASC,EAAE,wBAAwB;AAAA,YAAA;AAAA,UACrC;AAAA,QAEJ;AAAA,MAAA;AAAA,IAEJ;AAAA,EACF;AAAA,EAEA,sBAAsB;AACb,WAAA;AAAA,MACL;AAAA,QACE,OAAO,KAAK,QAAQ;AAAA,QACpB,YAAY;AAAA,UACV,QAAQ;AAAA,YACN,SAAS;AAAA,YACT,WAAW,CAAC8K,MAAY;AAChB,oBAAA0G,IAAY1G,EAAQ,QAAQ;AAClC,sBAAQ0G,IAAY,OAAO,SAASA,GAAW,EAAE,IAAI,MAAM;AAAA,YAC7D;AAAA,YACA,YAAY,CAACzG,MACNA,EAAW,SAGT,EAAE,eAAeA,EAAW,OAAO,IAFjC,CAAC;AAAA,UAGZ;AAAA,QACF;AAAA,MACF;AAAA,IAEJ;AAAA,EACF;AAAA,EAEA,cAAc;AACL,WAAA;AAAA,MACL,QAAQ,MACN0G,GAAoB;AAAA,QAClB,OAAOF,GAAY;AAAA,QACnB,OAAO,KAAK,QAAQ;AAAA,MAAA,CACrB;AAAA,MACH,SAAS,MACPE,GAAoB;AAAA,QAClB,OAAOF,GAAY;AAAA,QACnB,OAAO,KAAK,QAAQ;AAAA,MACrB,CAAA;AAAA,IACL;AAAA,EACF;AAAA,EAEA,uBAAuB;AACd,WAAA;AAAA,MACL,KAAO,MAAM,KAAK,OAAO,SAAS,OAAO;AAAA,MACzC,aAAa,MAAM,KAAK,OAAO,SAAS,QAAQ;AAAA,IAClD;AAAA,EAAA;AAEJ,CAAC;ACvFD,SAASG,GAAoBC,GAAuB;AAG3C,SAFY,OAAO,WAAWA,EAAiB,QAAQ,KAAK,EAAE,CAAC,IACzC;AAE/B;AAEA,SAASC,GAAmB5S,GAAiC;AACrD,QAAA,EAAE,EAAE,IAAImJ,EAAU,GAClB,CAACP,GAAOiK,CAAQ,IAAI3L,EAAS,SAAS;AAE5C,WAAS4L,EAAkBC,GAAa;AACtC,IAAIA,MAAQ,YACJ/S,EAAA,OAAO,SAAS,gBAAgB,IAEhCA,EAAA,OAAO,SAAS,cAAc+S,CAAG,GAEzCF,EAASE,CAAG;AAAA,EAAA;AAGR,QAAAC,IAAczN,EAAQ,MAAM;AAKhC,UAAM0N,IAJoBjT,EAAM,OAAO,iBAAiB,WAAW;AAAA,MACjE,CAACkT,MAAWA,EAAE,SAAS;AAAA,IAAA,EACtB,QACyB,YAChB,IAAI,CAACtN,OAAe;AAAA,MAC9B,OAAO8M,GAAoB9M,CAAI;AAAA,MAC/B,OAAOA;AAAA,IAAA,EACP;AAEF,WAAAqN,EAAE,QAAQ;AAAA,MACR,OAAO,EAAE,gBAAgB;AAAA,MACzB,OAAO;AAAA,IAAA,CACR,GACMA;AAAA,EAAA,GACN,CAACjT,CAAK,CAAC;AAEV,2BACGyF,GACC,EAAA,UAAA;AAAA,IAAA,gBAAApF;AAAA,MAACqF;AAAA,MAAA;AAAA,QAAoB,SAAO;AAAA,QAC1B,UAAU1F,KAAA,gBAAAA,EAAO;AAAA,QAEjB,UAAA,gBAAAK;AAAA,UAACY;AAAA,UAAA;AAAA,YACC,aAAY;AAAA,YACZ,UAAUjB,KAAA,gBAAAA,EAAO;AAAA,YACjB,MAAK;AAAA,YACL,SAASA,KAAA,gBAAAA,EAAO;AAAA,YAEhB,UAAA,gBAAAK;AAAA,cAACsI;AAAA,cAAA;AAAA,gBAAc,WAAU;AAAA,gBACvB,MAAK;AAAA,cAAA;AAAA,YAAA;AAAA,UACP;AAAA,QAAA;AAAA,MACF;AAAA,IACF;AAAA,IAEA,gBAAAtI,EAACsF,KAAoB,WAAU,qBAC5B,iCAAa,IAAI,CAACC,GAAWiD,MAE1B,gBAAAxI;AAAA,MAACoJ;AAAA,MAAA;AAAA,QACC,SAAS7D,EAAK,UAAUgD;AAAA,QAExB,SAAS,MAAMkK,EAAkBlN,EAAK,KAAK;AAAA,QAE1C,UAAKA,EAAA;AAAA,MAAA;AAAA,MAHD,cAAciD,CAAK;AAAA,IAI1B,GAGN,CAAA;AAAA,EAAA,GACF;AAEJ;ACnFO,MAAMsK,KAAqB,CAAC,aAAa,WAAW,aAAa,WAAW;AAkCnE,SAAAC,GAAkB7O,GAAiB8O,GAAwC;AACnF,QAAA,EAAE,WAAAC,GAAW,KAAAzQ,EAAA,IAAQ0B;AAM3B,MAJI,CAAC+O,KAAa,CAACzQ,KAIf,EAAEyQ,aAAqBzE,MAAiByE,aAAqBC;AACxD,WAAAhP;AAGH,QAAA,EAAE,MAAAf,GAAM,IAAAK,EAAA,IAAOyP,GAEfE,IAAkC,CAAC,GACnCC,IAAkBJ,KAAcA,MAAeK,KAAsBL,IAAa;AAkBpF,MAhBJxQ,EAAI,aAAaW,GAAMK,GAAI,CAACV,GAAMoL,MAAQ;AACxC,UAAMoF,IAAWxQ,EAAK;AACtB,WAAIgQ,GAAmB,SAASQ,EAAS,IAAI,MACxBxQ,EAAK,MAAM,cAAc,UACzBsQ,KACjBD,EAAM,KAAK;AAAA,MACT,MAAArQ;AAAA,MACA,KAAAoL;AAAA,MACA,UAAAoF;AAAA,IAAA,CACD,GAEIA,EAAS,SAAS,eAAeA,EAAS,SAAS,eAErD;AAAA,EAAA,CACR,GAEGH,EAAM,WAAW;AACZ,WAAAjP;AAGT,aAAWqP,KAAQJ,GAAO;AACxB,UAAM,EAAE,MAAArQ,GAAM,KAAAoL,GAAK,UAAAoF,EAAa,IAAAC;AAC5B,QAAA,EAAE,OAAAtM,MAAUnE;AAER,IAAAmE,IAAA;AAAA,MACN,GAAGA;AAAA,MACH,YAAYmM;AAAA,IACd,GAEAlP,IAAKA,EAAG,cAAcgK,GAAKoF,GAAUrM,GAAOnE,EAAK,KAAK;AAAA,EAAA;AAGjD,SAAAoB;AACT;AAEO,SAASsP,GAAwBR,GAA6B;AACnE,SAAO,CAAC,EAAE,OAAAlO,GAAO,UAAA2O,QAAe;AACxB,UAAA,EAAE,WAAAR,MAAcnO;AAClB,QAAA,EAAE,IAAAZ,MAAOY;AAKb,WAJKZ,IAAAA,EAAG,aAAa+O,CAAS,GAEzB/O,IAAA6O,GAAkB7O,GAAI8O,CAAU,GAEjC9O,EAAG,cACDuP,KACFA,EAASvP,CAAE,GACN,MAGF;AAAA,EACT;AACF;ACrFa,MAAAwP,KAAavI,EAAU,OAA0B;AAAA,EAC5D,MAAM;AAAA,EACN,aAAa;;AACJ,WAAA;AAAA,MACL,IAAG7K,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,OAAO,CAAC,aAAa,WAAW,aAAa,WAAW;AAAA,MACxD,aAAaqT;AAAA,MACb,eAAeN;AAAA,MACf,OAAO,EAAE,QAAA3S,GAAQ,GAAAC,KAAiC;AACzC,eAAA;AAAA,UACL,WAAW4R;AAAA,UACX,gBAAgB;AAAA,YACd,QAAA7R;AAAA,YACA,SAASC,EAAE,2BAA2B;AAAA,UAAA;AAAA,QAE1C;AAAA,MAAA;AAAA,IAEJ;AAAA,EACF;AAAA,EAEA,sBAAsB;AACb,WAAA;AAAA,MACL;AAAA,QACE,OAAO,KAAK,QAAQ;AAAA,QACpB,YAAY;AAAA,UACV,YAAY;AAAA,YACV,SAAS;AAAA,YACT,WAAW,CAAC8K,MACHA,EAAQ,MAAM,cAAc,KAAK,QAAQ;AAAA,YAElD,YAAY,CAACC,MACPA,EAAW,eAAe,KAAK,QAAQ,iBAAiB,CAACA,EAAW,aAC/D,CAAC,IAEH,EAAE,OAAO,gBAAgBA,EAAW,UAAU,GAAG;AAAA,UAC1D;AAAA,QACF;AAAA,MACF;AAAA,IAEJ;AAAA,EACF;AAAA,EAEA,cAAc;AACL,WAAA;AAAA,MACL,eAAe,CAAcsH,MAAAQ,GAAwBR,CAAU;AAAA,MAC/D,iBACE,MACE,CAAC,EAAE,UAAAY,QACM,KAAK,QAAQ,MAAM,MAAM,OAAQA,EAAS,gBAAgBxD,GAAM,YAAY,CAAC;AAAA,IAE5F;AAAA,EAAA;AAEJ,CAAC,GCjEYyD,KAAoB;AAAA,EAC/B,SAAS,CAACC,GAASvL,MAAmB;AACpC,IAAAwL,EAAcC,EAAO,aAAaF,CAAE,GAAGvL,CAAK;AAAA,EAAA;AAEhD;ACLO,SAAS0L,GAAaxK,GAAwB;AACnD,QAAMyK,IAAkB;AAAA,IACtB;AAAA,MACE,MAAM;AAAA,MACN,OAAO1D,EAAc,EAAE,qBAAqB;AAAA,MAC5C,UAAU,CAAA;AAAA,IACZ;AAAA,IACA;AAAA,MACE,MAAM;AAAA,MACN,OAAOA,EAAc,EAAE,qBAAqB;AAAA,MAC5C,UAAU,CAAA;AAAA,IAAC;AAAA,EAEf;AAEW,SAAA/G,EAAA,QAAQ,CAACtC,MAAc;AAEhC,IAAIA,EAAU,KAAK,YAAY,MAAM,aACnCA,EAAU,QAAQ,OAAO,QAAQ,CAACmD,MAA4C;AACrE,MAAA4J,EAAA,CAAC,EAAE,SAAS,KAAK;AAAA,QACtB,MAAM,UAAU5J,CAAK;AAAA,QACrB,OAAOkG,EAAc,EAAE,mBAAmBlG,CAAK,UAAU;AAAA,QACzD,SAAS,CAAC,IAAIA,CAAK,IAAI,MAAM,KAAKA,CAAK,EAAE;AAAA,QACzC,UAAU,UAAUA,CAAK;AAAA,QACzB,QAAQ,CAAC,EAAE,QAAA5J,GAAQ,OAAA0N,QAAY;AAC7B,UAAA1N,EAAO,MAAM,EAAE,MAAM,EAAE,YAAY0N,CAAK,EAAE,WAAW,EAAE,OAAA9D,EAAO,CAAA,EAAE,IAAI;AAAA,QAAA;AAAA,MACtE,CACD;AAAA,IAAA,CACF,GAGCnD,EAAU,KAAK,YAAY,MAAM,gBAC5B+M,EAAA,CAAC,EAAE,SAAS,KAAK;AAAA,MACtB,MAAM;AAAA,MACN,OAAO1D,EAAc,EAAE,2BAA2B;AAAA,MAClD,SAAS,CAAC,MAAM,MAAM;AAAA,MACtB,UAAU;AAAA,MACV,QAAQ,CAAC,EAAE,QAAA9P,GAAQ,OAAA0N,QAAY;AACtB,QAAA1N,EAAA,QAAQ,MAAM,EAAE,YAAY0N,CAAK,EAAE,iBAAiB,EAAE,IAAI;AAAA,MAAA;AAAA,IACnE,CACD,GAGCjH,EAAU,KAAK,YAAY,MAAM,iBAC5B+M,EAAA,CAAC,EAAE,SAAS,KAAK;AAAA,MACtB,MAAM;AAAA,MACN,OAAO1D,EAAc,EAAE,4BAA4B;AAAA,MACnD,SAAS,CAAC,MAAM,MAAM;AAAA,MACtB,UAAU;AAAA,MACV,QAAQ,CAAC,EAAE,QAAA9P,GAAQ,OAAA0N,QAAY;AACtB,QAAA1N,EAAA,QAAQ,MAAM,EAAE,YAAY0N,CAAK,EAAE,kBAAkB,EAAE,IAAI;AAAA,MAAA;AAAA,IACpE,CACD,GAGCjH,EAAU,KAAK,YAAY,MAAM,cAC5B+M,EAAA,CAAC,EAAE,SAAS,KAAK;AAAA,MACtB,MAAM;AAAA,MACN,OAAO1D,EAAc,EAAE,yBAAyB;AAAA,MAChD,UAAU;AAAA,MACV,aAAa;AAAA,MACb,SAAS,CAAC,MAAM;AAAA,MAChB,QAAQ,CAAC,EAAE,QAAA9P,GAAQ,OAAA0N,QAAY;AACtB,QAAA1N,EAAA,QAAQ,MAAM,EAAE,YAAY0N,CAAK,EAAE,eAAe,EAAE,IAAI;AAAA,MAAA;AAAA,IACjE,CACD,GAGCjH,EAAU,KAAK,YAAY,MAAM,gBAC5B+M,EAAA,CAAC,EAAE,SAAS,KAAK;AAAA,MACtB,MAAM;AAAA,MACN,OAAO1D,EAAc,EAAE,2BAA2B;AAAA,MAClD,aAAa;AAAA,MACb,SAAS,CAAC,IAAI;AAAA,MACd,UAAU;AAAA,MACV,QAAQ,CAAC,EAAE,QAAA9P,GAAQ,OAAA0N,QAAY;AACtB,QAAA1N,EAAA,QAAQ,MAAM,EAAE,YAAY0N,CAAK,EAAE,cAAc,EAAE,IAAI;AAAA,MAAA;AAAA,IAChE,CACD,GAGCjH,EAAU,KAAK,YAAY,MAAM,eAC5B+M,EAAA,CAAC,EAAE,SAAS,KAAK;AAAA,MACtB,MAAM;AAAA,MACN,OAAO1D,EAAc,EAAE,0BAA0B;AAAA,MACjD,UAAU;AAAA,MACV,aAAa;AAAA,MACb,gBAAgB,CAAA9P,MAAUA,EAAO,SAAS,SAAS;AAAA,MACnD,QAAQ,CAAC,EAAE,QAAAA,GAAQ,OAAA0N,QAAY;AACtB,QAAA1N,EAAA,QAAQ,MAAM,EAAE,YAAY0N,CAAK,EAAE,aAAa,EAAE,IAAI;AAAA,MAAA;AAAA,IAC/D,CACD,GAICjH,EAAU,KAAK,YAAY,MAAMgN,GAAM,QAClCD,EAAA,CAAC,EAAE,SAAS,KAAK;AAAA,MACtB,MAAM;AAAA,MACN,OAAO1D,EAAc,EAAE,sBAAsB;AAAA,MAC7C,UAAU;AAAA,MACV,aAAa;AAAA,MACb,SAAS,CAAC,SAAS,MAAM,QAAQ;AAAA,MACjC,gBAAgB,CAAA9P,MAAUA,EAAO,SAAS,SAAS;AAAA,MACnD,QAAQ,CAAC,EAAE,QAAAA,GAAQ,OAAA0N,QAAiB;AAClC,QAAA1N,EAAO,QAAQ,MAAA,EAAQ,YAAY0N,CAAK,EAAE,IAAI,GAE5BgG,GAAA,QAAQ1T,EAAO,IAAI,EAAI;AAAA,MAAA;AAAA,IAC3C,CACD,GAGCyG,EAAU,KAAK,YAAY,MAAMkN,GAAM,QAClCH,EAAA,CAAC,EAAE,SAAS,KAAK;AAAA,MACtB,MAAM;AAAA,MACN,OAAO1D,EAAc,EAAE,sBAAsB;AAAA,MAC7C,UAAU;AAAA,MACV,aAAa;AAAA,MACb,SAAS,CAAC,SAAS,MAAM,QAAQ;AAAA,MACjC,gBAAgB,CAAA9P,MAAUA,EAAO,SAAS,SAAS;AAAA,MACnD,QAAQ,CAAC,EAAE,QAAAA,GAAQ,OAAA0N,QAAiB;AAClC,QAAA1N,EAAO,QAAQ,MAAA,EAAQ,YAAY0N,CAAK,EAAE,IAAI,GAC5ByF,GAAA,QAAQnT,EAAO,IAAI,EAAI;AAAA,MAAA;AAAA,IAC3C,CACD,GAGCyG,EAAU,KAAK,YAAY,MAAM,WAC5B+M,EAAA,CAAC,EAAE,SAAS,KAAK;AAAA,MACtB,MAAM;AAAA,MACN,OAAO1D,EAAc,EAAE,sBAAsB;AAAA,MAC7C,UAAU;AAAA,MACV,aAAa;AAAA,MACb,SAAS,CAAC,SAAS,MAAM,UAAU,MAAM;AAAA,MACzC,gBAAgB,CAAA9P,MAAUA,EAAO,SAAS,SAAS;AAAA,MACnD,QAAQ,CAAC,EAAE,QAAAA,GAAQ,OAAA0N,QAAY;AAC7B,QAAA1N,EACG,QACA,MACA,EAAA,YAAY0N,CAAK,EACjB,YAAY,EAAE,MAAM,GAAG,MAAM,GAAG,eAAe,GAAM,CAAC,EACtD,IAAI;AAAA,MAAA;AAAA,IACT,CACD,GAGCjH,EAAU,KAAK,YAAY,MAAM,oBAC5B+M,EAAA,CAAC,EAAE,SAAS,KAAK;AAAA,MACtB,MAAM;AAAA,MACN,OAAO1D,EAAc,EAAE,+BAA+B;AAAA,MACtD,UAAU;AAAA,MACV,aAAa;AAAA,MACb,SAAS,CAAC,MAAM,OAAO,IAAI;AAAA,MAC3B,QAAQ,CAAC,EAAE,QAAA9P,GAAQ,OAAA0N,QAAY;AACtB,QAAA1N,EAAA,QAAQ,MAAM,EAAE,YAAY0N,CAAK,EAAE,kBAAkB,EAAE,IAAI;AAAA,MAAA;AAAA,IACpE,CACD,GAGCjH,EAAU,KAAK,YAAY,MAAM,aAC5B+M,EAAA,CAAC,EAAE,SAAS,KAAK;AAAA,MACtB,MAAM;AAAA,MACN,OAAO1D,EAAc,EAAE,wBAAwB;AAAA,MAC/C,UAAU;AAAA,MACV,aAAa;AAAA,MACb,QAAQ,CAAC,EAAE,QAAA9P,QAAa;AACf,QAAAA,EAAA,QAAQ,QAAQ,cAAc,EAAE,MAAM,GAAG,EAAE,IAAI;AAAA,MAAA;AAAA,IACxD,CACD;AAAA,EACH,CACD,GAEMwT;AACT;ACvKA,SAASI,GAAa3U,GAAYC,GAAU;;AAE1C,QAAM,CAAC2U,GAAsBC,CAAuB,IAAI3N,EAAS,CAAC,GAC5D,CAAC4N,GAAoBC,CAAqB,IAAI7N,EAAS,CAAC,GAExD8N,IAAkB/M,EAA8B,IAAI,GAEpD,EAAE,GAAAjH,EAAE,IAAImI,EAAU,GAElB8L,IAAiBhN,EAAqC,EAAE;AAE9D,EAAAiN,GAAoBjV,GAAK,OAChB;AAAA,IACL,WAAAkV;AAAA,EACF,EACD,GAEDC,EAAU,MAAM;AACV,QAAA,CAACJ,EAAgB;AACnB;AAEI,UAAAK,IAAkBP,IAAqB,MAAOF,GAC9C7E,IAAakF,EAAe,QAAQI,CAAe;AACzD,IAAItF,KACFA,EAAW,eAAe;AAAA,MACxB,UAAU;AAAA,MACV,OAAO;AAAA,IAAA,CACR;AAAA,EACH,GACC,CAAC6E,GAAsBE,CAAkB,CAAC;AAEpC,WAAAK,EAAU,EAAE,OAAAG,KAAc;AAC7B,WAAAA,EAAM,QAAQ,aACNC,EAAA,GACH,MAGLD,EAAM,QAAQ,eACJE,EAAA,GACL,MAGLF,EAAM,QAAQ,WACHG,EAAA,GACN,MAGF;AAAA,EAAA;AAGT,WAASF,IAAY;;AACf,QAAAvV,EAAM,MAAM,WAAW;AAClB,aAAA;AAET,QAAI0V,IAAkBd,IAAuB,GACzCe,IAAgBb;AAEpB,IAAIY,IAAkB,MACpBC,IAAgBb,IAAqB,GACrCY,MAAkB/U,IAAAX,EAAM,MAAM2V,CAAa,MAAzB,gBAAAhV,EAA4B,SAAS,UAAS,KAAK,IAGnEgV,IAAgB,MACFA,IAAA3V,EAAM,MAAM,SAAS,GACrC0V,IAAkB1V,EAAM,MAAM2V,CAAa,EAAE,SAAS,SAAS,IAGjEd,EAAwBa,CAAe,GACvCX,EAAsBY,CAAa;AAAA,EAAA;AAGrC,WAASH,IAAc;AACjB,QAAAxV,EAAM,MAAM,WAAW;AAClB,aAAA;AAET,UAAMiU,IAAWjU,EAAM,MAAM8U,CAAkB,EAAE;AACjD,QAAIY,IAAkBd,IAAuB,GACzCe,IAAgBb;AAEhB,IAAAb,EAAS,SAAS,IAAIyB,MACNA,IAAA,GAClBC,IAAgBb,IAAqB,IAEnC9U,EAAM,MAAM,SAAS,IAAI2V,MACXA,IAAA,IAElBd,EAAwBa,CAAe,GACvCX,EAAsBY,CAAa;AAAA,EAAA;AAGrC,WAASF,IAAe;AACtB,QAAIzV,EAAM,MAAM,WAAW,KAAK8U,MAAuB,MAAMF,MAAyB;AAC7E,aAAA;AAGT,IAAAgB,EAAWd,GAAoBF,CAAoB;AAAA,EAAA;AAG5C,WAAAgB,EAAWC,GAAoBC,GAAsB;AAC5D,UAAMC,IAAU/V,EAAM,MAAM6V,CAAU,EAAE,SAASC,CAAY;AAC7D,IAAA9V,EAAM,QAAQ+V,CAAO;AAAA,EAAA;AAGd,WAAAC,EAA0BH,GAAoBC,GAAsB;AAC3E,IAAAF,EAAWC,GAAYC,CAAY;AAAA,EAAA;AAE5B,WAAAG,EAAiBJ,GAAoBC,GAAsBI,GAAS;AAC3E,IAAAjB,EAAe,QAAQY,IAAa,MAAOC,CAAY,IAAII;AAAA,EAAA;AAI3D,SAAA,gBAAA7V;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAU;AAAA,MACV,KAAK2U;AAAA,MAEJ,WAAOrU,IAAAX,KAAA,gBAAAA,EAAA,UAAA,QAAAW,EAAO,SAEX,gBAAAN,EAAC,OAAI,EAAA,WAAU,yEACZ,WAAA0H,IAAA/H,KAAA,gBAAAA,EAAO,UAAP,gBAAA+H,EAAc,IAAI,CAACoO,GAAYN,wBAE3BrM,IACC,EAAA,UAAA;AAAA,QAAA,gBAAAnJ,EAAC,OAAI,EAAA,WAAU,mNACZ,UAAA8V,EAAM,OACT;AAAA,QAECA,EAAM,SAAS,IAAI,CAACJ,GAAcD,MAE/B,gBAAArV;AAAA,UAAC;AAAA,UAAA;AAAA,YAEC,SAAS,MAAMuV,EAA0BH,GAAYC,CAAY;AAAA,YACjE,KAAK,CAAAI,MAAMD,EAAiBJ,GAAYC,GAAcI,CAAE;AAAA,YACxD,WAAW9P,EAAG,4TAA4T;AAAA,cACxU,wBAAwB0O,MAAuBe,KAAcjB,MAAyBkB;AAAA,YAAA,CACvF;AAAA,YAEA,UAAA;AAAA,cAAAC,EAAQ,WAAW,gBAAA1V;AAAA,gBAAC;AAAA,gBAAA;AAAA,kBAAI,KAAI;AAAA,kBAC3B,WAAU;AAAA,kBACV,KAAK0V,EAAQ;AAAA,gBAAA;AAAA,cACf;AAAA,cAECA,EAAQ,YACP,gBAAA1V;AAAA,gBAACsI;AAAA,gBAAA;AAAA,kBAAc,WAAU;AAAA,kBACvB,MAAMoN,EAAQ;AAAA,gBAAA;AAAA,cAChB;AAAA,cAGDA,EAAQ;AAAA,YAAA;AAAA,UAAA;AAAA,UAlBJ,WAAWD,CAAY;AAAA,QAmB9B,CAEH;AAAA,MA7BY,EAAA,GAAA,SAASK,EAAM,KAAK,EA8BnC,GAEH,CACH,IAGA,gBAAA9V,EAAC,SAAI,WAAU,gBACb,UAAC,gBAAAA,EAAA,QAAA,EAAK,WAAU,uEACb,UAAEW,EAAA,oBAAoB,GACzB,EACF,CAAA;AAAA,IAAA;AAAA,EAEN;AAEJ;AAEA,MAAeoV,KAAAC,GAAW1B,EAAY,GCxKhC2B,IAAgB;AACtB,IAAIC;AACS,MAAAC,KAAehL,EAAU,OAAO;AAAA,EAC3C,MAAM8K;AAAA,EACN,UAAU;AAAA,EACV,WAAW;AACT,IAAAC,IAAQE,GAAM,QAAQ;AAAA,MACpB,aAAa;AAAA,MACb,SAAS;AAAA,MACT,WAAW;AAAA,MACX,OAAO;AAAA,MACP,UAAU;AAAA,MACV,QAAQ,CAAC,IAAI,CAAC;AAAA,MACd,eAAe;AAAA,QACb,UAAU;AAAA,QACV,WAAW;AAAA,UACT;AAAA,YACE,MAAM;AAAA,YACN,SAAS;AAAA,UAAA;AAAA,QACX;AAAA,MACF;AAAA,IACF,CACD;AAAA,EACH;AAAA,EAEA,wBAAwB;AACf,WAAA;AAAA,MACLC,GAAW;AAAA,QACT,QAAQ,KAAK;AAAA,QACb,MAAM;AAAA,QACN,aAAa;AAAA,QACb,aAAa;AAAA,QACb,WAAW,IAAItS,EAAUkS,CAAa;AAAA,QACtC,OAAO,CAAC,EAAE,OAAAnR,GAAO,OAAAsJ,QAAY;;AAC3B,gBAAMkI,IAAQxR,EAAM,IAAI,QAAQsJ,EAAM,IAAI,GACpCmI,IAAcD,EAAM,UAAU,GAC9BE,IAAcF,EAAM,OAAO,KAAK,SAAS,aACzCG,MAAgBnW,IAAAgW,EAAM,OAAO,gBAAb,gBAAAhW,EAA0B,OAAO,QAAO,KAExDoW,IAAa,KAAK,OAAO,SAAS,QAAQ,GAC1CC,KAAehO,IAAA2N,EAAM,OAAO,gBAAb,gBAAA3N,EAA0B;AAAA,YAC7C,KAAK,IAAI,IAAGjB,IAAA4O,EAAM,OAAO,gBAAb,gBAAA5O,EAA0B,QAAQ,IAAI;AAAA,aAE9CkP,IAAsB,EAACD,KAAA,QAAAA,EAAc,SAAS;AAEpD,kBACIJ,KAAeC,KAAeC,KAC1BC,KAAcF,KAAeC,MAChCG;AAAA,QAEP;AAAA,QACA,SAAS,CAAC,EAAE,QAAAlW,GAAQ,OAAA0N,GAAO,OAAAzO,QAA0D;AAC7E,gBAAA,EAAE,MAAAqE,MAAStD;AACjB,UAAAf,EAAM,OAAO,EAAE,QAAAe,GAAQ,OAAA0N,EAAA,CAAO,GAC9BpK,EAAK,MAAM;AAAA,QACb;AAAA,QACA,OAAO,CAAC,EAAE,OAAA6S,GAAO,QAAAnW,QAGAuT,GAAavT,EAAO,iBAAiB,UAAU,EAC1B,IAAI,CAAUoV,OAAA;AAAA,UAChD,GAAGA;AAAA,UACH,UAAUA,EAAM,SACb,OAAO,CAACvQ,MAAS;AAChB,kBAAMuR,IAAkBvR,EAAK,MAAM,YAAA,EAAc,KAAK,GAChDwR,IAAkBF,EAAM,YAAY,EAAE,KAAK;AAEjD,gBAAItR,EAAK,SAAS;AACV,oBAAAyR,IAAUzR,EAAK,QAAQ,IAAI,OAAS0R,EAAM,cAAc,MAAM,GAC9DC,IAAaJ,EAAgB,MAAMC,CAAe,GAClDI,IAAaH,EAAQ,KAAK,OAASC,EAAM,MAAMF,CAAe,CAAC;AAErE,qBAAOG,KAAcC;AAAA,YAAA;AAGhB,mBAAAL,EAAgB,MAAMC,CAAe;AAAA,UAC7C,CAAA,EACA;AAAA,YAAO,CAAArB,MACNA,EAAQ,iBAAiB,CAACA,EAAQ,eAAe,KAAK,MAAM,IAAI;AAAA,UAAA;AAAA,QAClE,EACF,EAE8C,OAAO,CAACI,MAClDA,EAAM,SAAS,SAAS,CAK7B,EAC8C,IAAI,CAAUA,OAAA;AAAA,UAC3D,GAAGA;AAAA,UACH,UAAUA,EAAM,SAAS,IAAI,CAAYJ,OAAA;AAAA,YACvC,GAAGA;AAAA,YACH,WAAW;AAAA,UAAA,EACX;AAAA,QAAA,EACF;AAAA,QAIJ,QAAQ,MAAM;AACR,cAAA0B,GACAC,IAAqC;AAClC,iBAAA;AAAA,YACL,SAAS,CAAC1X,MAA2B;;AACvB,cAAAyX,IAAA,IAAIE,GAAchD,IAAc;AAAA,gBAC1C,OAAA3U;AAAA,gBACA,QAAQA,EAAM;AAAA,cAAA,CACf;AACK,oBAAA,EAAE,MAAAqE,MAASrE,EAAM,QAEjB4X,IAAyB,MAAM;AAC/B,oBAAA,CAAC5X,EAAM;AACT,yBAAOA,EAAM,OAAO,QAAQsW,CAAa,EAAE;AAGvC,sBAAAuB,IAAO7X,EAAM,WAAW;AAE9B,oBAAI,CAAC6X;AACH,yBAAO7X,EAAM,OAAO,QAAQsW,CAAa,EAAE;AAG7C,oBAAIwB,IAAOD,EAAK;AAEhB,oBAAIA,EAAK,MAAMJ,EAAU,QAAQ,eAAe,KAAK,OAAO,aAAa;AACvE,wBAAMM,IAAOF,EAAK,MAAMJ,EAAU,QAAQ,eAAe,OAAO,cAAc;AAC9E,kBAAAK,IAAOD,EAAK,IAAIE;AAAA,gBAAA;AAKX,uBAAA,IAAI,QAAQF,EAAK,GAAGC,GAAMD,EAAK,OAAOA,EAAK,MAAM;AAAA,cAC1D;AAEA,cAAAH,IAAgB,MAAM;AACZ,gBAAAnB,KAAA,QAAAA,EAAA,GAAG,SAAS;AAAA,kBAClB,wBAAAqB;AAAA,gBAAA;AAAA,cAEJ,IAEAjX,IAAA0D,EAAK,IAAI,kBAAT,QAAA1D,EAAwB,iBAAiB,UAAU+W,IAE3CnB,KAAA,QAAAA,EAAA,GAAG,SAAS;AAAA,gBAClB,wBAAAqB;AAAA,gBACA,UAAU,MAAM,SAAS;AAAA,gBACzB,SAASH,EAAU;AAAA,cAAA,IAGblB,KAAA,QAAAA,EAAA,GAAG;AAAA,YACb;AAAA,YAEA,SAASvW,GAAwB;;AAC/B,cAAAyX,EAAU,YAAYzX,CAAK;AAErB,oBAAA,EAAE,MAAAqE,MAASrE,EAAM,QAIjB4X,IAAyB,MAAM;AAC/B,oBAAA,CAAC5X,EAAM;AACT,yBAAOA,EAAM,OAAO,QAAQsW,CAAa,EAAE;AAGvC,sBAAAuB,IAAO7X,EAAM,WAAW;AAE9B,uBAAK6X,IAKE,IAAI,QAAQA,EAAK,GAAGA,EAAK,GAAGA,EAAK,OAAOA,EAAK,MAAM,IAJjD7X,EAAM,OAAO,QAAQsW,CAAa,EAAE;AAAA,cAK/C,GAEMoB,IAAgB,MAAM;AAClB,gBAAAnB,KAAA,QAAAA,EAAA,GAAG,SAAS;AAAA,kBAClB,wBAAAqB;AAAA,gBAAA;AAAA,cAEJ;AAEA,eAAAjX,IAAA0D,EAAK,IAAI,kBAAT,QAAA1D,EAAwB,iBAAiB,UAAU+W,IAE7C1X,EAAA,OAAO,QAAQsW,CAAa,EAAE,OAAOtW,EAAM,aAC7C4X,MACA;AAAA,gBACA,OAAO;AAAA,gBACP,QAAQ;AAAA,gBACR,MAAM;AAAA,gBACN,KAAK;AAAA,gBACL,OAAO;AAAA,gBACP,QAAQ;AAAA,cACV,GACMrB,KAAA,QAAAA,EAAA,GAAG,SAAS;AAAA,gBAClB,wBAAAqB;AAAA,cAAA;AAAA,YAEJ;AAAA,YAEA,UAAU5X,GAA+B;;AACnC,qBAAAA,EAAM,MAAM,QAAQ,YACduW,KAAA,QAAAA,EAAA,GAAG,QAEJ,OAGJA,KAAA,QAAAA,EAAQ,GAAG,MAAM,WACZA,KAAA,QAAAA,EAAA,GAAG,SAGN5V,IAAA8W,EAAU,QAAV,gBAAA9W,EAAe,UAAUX;AAAA,YAClC;AAAA,YAEA,OAAOA,GAAO;;AAEZ,kBADQuW,KAAA,QAAAA,EAAA,GAAG,QACPmB,GAAe;AACX,sBAAA,EAAE,MAAArT,MAASrE,EAAM;AACvB,iBAAAW,IAAA0D,EAAK,IAAI,kBAAT,QAAA1D,EAAwB,oBAAoB,UAAU+W;AAAA,cAAa;AAErE,cAAAD,EAAU,QAAQ;AAAA,YAAA;AAAA,UAEtB;AAAA,QAAA;AAAA,MAEH,CAAA;AAAA,IACH;AAAA,EACF;AAAA,EAEA,aAAa;AACJ,WAAA;AAAA,MACL,MAAM;AAAA,QACJ,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,KAAK;AAAA,QACL,OAAO;AAAA,QACP,QAAQ;AAAA,MAAA;AAAA,IAEZ;AAAA,EAAA;AAEJ,CAAC;AClOe,SAAAO,GAAwBzT,GAAiBgK,GAAa0J,GAAsC;AACtG,MAAA,CAAC1T,EAAG;AACC,WAAAA;AAGT,QAAMpB,IAAOoB,EAAG,IAAI,OAAOgK,CAAG;AAK1B,MAJA,CAACpL,KAID8U,MAAoB9U,EAAK,MAAM;AAC1B,WAAAoB;AAGT,QAAM2T,IAAY;AAAA,IAChB,GAAG/U,EAAK;AAAA,IACR,iBAAA8U;AAAA,EACF;AAEA,SAAO1T,EAAG,cAAcgK,GAAKpL,EAAK,MAAM+U,GAAW/U,EAAK,KAAK;AAC/D;AAEgB,SAAAgV,GAAqB5T,GAAiB6T,GAAqCH,GAAsC;AACzH,QAAA,EAAE,KAAApV,GAAK,WAAAyQ,EAAA,IAAc/O;AAE3B,SAAI,CAAC1B,KAAO,CAACyQ,KAAa,EAAEA,aAAqB+E,OAIvC/E,EAAA,YAAY,CAACnQ,GAAMoL,MAAQ;AAC9B,IAAAhK,IAAAyT,GAAwBzT,GAAIgK,GAAK0J,CAAe;AAAA,EAAA,CACtD,GAEM1T;AACT;AAEgB,SAAA+T,GAA4BL,GAAyBG,GAA8C;AACjH,SAAO,CAAC,EAAE,IAAA7T,GAAI,OAAAY,GAAO,UAAA2O,QAAe;AAC5B,UAAA,EAAE,WAAAR,MAAcnO;AAItB,WAHKZ,IAAAA,EAAG,aAAa+O,CAAS,GACzB/O,IAAA4T,GAAqB5T,GAAI6T,GAASH,CAAe,GAElD1T,EAAG,cACLuP,KAAA,QAAAA,EAAWvP,IACJ,MAGF;AAAA,EACT;AACF;AAGa,MAAAgU,KAAsB/M,EAAU,OAAmC;AAAA,EAC9E,MAAM;AAAA,EACN,aAAa;AACJ,WAAA;AAAA,MACL,OAAO,CAAC,WAAW;AAAA,MACnB,gBAAgB,CAAA;AAAA,IAClB;AAAA,EACF;AAAA,EAEA,sBAAsB;AACb,WAAA;AAAA,MACL;AAAA,QACE,OAAO,KAAK,QAAQ;AAAA,QACpB,YAAY;AAAA,UACV,iBAAiB;AAAA,YACf,WAAW,CAACM,MACHA,EAAQ,MAAM,mBAAmB;AAAA,YAE1C,YAAY,CAACC,MACP,CAACA,EAAW,mBAAmBA,EAAW,oBAAoB,KACzD,CAAC,IAED;AAAA,cACL,OAAO,qBAAqBA,EAAW,eAAe;AAAA,YACxD;AAAA,UAEJ;AAAA,QACF;AAAA,MACF;AAAA,IAEJ;AAAA,EACF;AAAA,EACA,cAAc;AACL,WAAA;AAAA,MACL,wBAAwB,CAACkM,MACvBK,GAA4BL,GAAiB,KAAK,OAAO;AAAA,MAC3D,0BAA0B,MAAMK,GAA4B,IAAI,KAAK,OAAO;AAAA,IAC9E;AAAA,EAAA;AAEJ,CAAC,GChGKE,KACF,iWACEC,KAAc,QACdC,KAAW;AAOD,SAAAC,GAAS3W,IAAwB,IAAa;AAC5D,MAAI4W,IAAK5W,EAAK,MAAO,OAAO,YAAc,OAAe,UAAU;AAM/D,SAJA4W,KAAM,OAAOA,KAAO,YAAYA,EAAG,WAAW,OAAOA,EAAG,QAAQ,YAAY,KAAM,aAC/EA,IAAAA,EAAG,QAAQ,YAAY,IAG1B,OAAOA,KAAO,WACT,KAGL,GAAAJ,GAAS,KAAKI,CAAE,KAAK,CAACH,GAAY,KAAKG,CAAE,KAIzC5W,EAAK,UAAU0W,GAAS,KAAKE,CAAE,KAKjC5W,EAAK,UACFA,EAAK,iBACL,aACA,UAAU,iBAAiB,KAC3B4W,EAAG,SAAS,WAAW,KACvBA,EAAG,SAAS,QAAQ;AAM3B;AC9CA,MAAMC,KAAc,CAACC,MAAmB,MAAM,KAAK,EAAE,QAAAA,EAAA,CAAQ,EAAE,IAAI,CAACtU,GAAGqE,MAAUA,IAAQ,CAAC;AAgB1F,SAASkQ,GAAmB/Y,GAAiC;;AAC3D,QAAM,CAACgZ,GAAeC,CAAgB,IAAI/R,EAAkB,EAAI,GAC1D,CAACgS,GAAeC,CAAgB,IAAIjS,EAAmB;AAAA,IAC3D,MAAMyR,OAAaS,KAAsBC;AAAA,IACzC,MAAMV,GAAS,IAAIS,KAAsBC;AAAA,EAAA,CAC1C,GAEK,CAACC,GAAuBC,CAAwB,IAAIrS,EAAmB;AAAA,IAC3E,MAAMsS;AAAA,IACN,MAAMA;AAAA,EAAA,CACP;AAEQ,WAAAC,EAAoBC,GAAcC,GAAoB;AACzD,IAAAD,MAASR,EAAc,QACzBC,EAAiB,CAACS,OACT;AAAA,MACL,GAAGA;AAAA,MACH,MAAM,KAAK,IAAIF,IAAO,GAAGN,EAAmB;AAAA,IAC9C,EACD,GAGCO,MAAST,EAAc,QACzBC,EAAiB,CAACS,OACT;AAAA,MACL,GAAGA;AAAA,MACH,MAAM,KAAK,IAAID,IAAO,GAAGP,EAAmB;AAAA,IAC9C,EACD,GAGsBG,EAAA;AAAA,MACvB,MAAAG;AAAA,MACA,MAAAC;AAAA,IAAA,CACD;AAAA,EAAA;AAGM,WAAAE,EAAYH,GAAcC,GAAc;AAC/C,IAAA3Z,KAAA,QAAAA,EAAO,YAAY,EAAE,MAAA0Z,GAAM,MAAAC,GAAM,eAAAX,MACdc,EAAA;AAAA,EAAA;AAGrB,WAASA,IAA2B;AAClC,IAAAb,EAAiB,EAAK,GAELE,EAAA;AAAA,MACf,MAAME;AAAA,MACN,MAAMA;AAAA,IAAA,CACP,GAEwBE,EAAA;AAAA,MACvB,MAAMC;AAAA,MACN,MAAMA;AAAA,IAAA,CACP;AAAA,EAAA;AAID,SAAA,gBAAA/Y,EAACoK,IAAQ,EAAA,OAAK,IACZ,UAAA;AAAA,IAAA,gBAAAxK,EAACyK,IAAe,EAAA,SAAO,IACpB,UAAA9K,KAAA,gBAAAA,EAAO,UACV;AAAA,IAEA,gBAAAK;AAAA,MAAC0K;AAAA,MAAA;AAAA,QAAe,OAAM;AAAA,QACpB,WAAU;AAAA,QACV,MAAK;AAAA,QAEL,UAAA,gBAAAtK,EAAC,OAAI,EAAA,WAAU,uCACb,UAAA;AAAA,UAAC,gBAAAJ,EAAA,OAAA,EAAI,WAAU,8FACZ,WAAAM,IAAAkY,GAAYK,KAAA,gBAAAA,EAAe,IAAI,MAA/B,gBAAAvY,EAAkC,IAAI,CAACoZ,MAAa;;AAEjD,mBAAA,gBAAA1Z;AAAA,cAAC;AAAA,cAAA;AAAA,gBAAI,WAAU;AAAA,gBAGZ,kBAAY6Y,KAAA,gBAAAA,EAAe,IAAI,wBAAG,IAAI,CAACc,MAEpC,gBAAA3Z;AAAA,kBAAC;AAAA,kBAAA;AAAA,oBAEC,aAAa,MAAMwZ,EAAYE,GAAKC,CAAG;AAAA,oBACvC,aAAa,MAAMP,EAAoBM,GAAKC,CAAG;AAAA,oBAC/C,WAAW,kDACTA,KAAOV,EAAsB,QAC1BS,KAAOT,EAAsB,QAC7B,yCACL;AAAA,oBAEA,UAAA,gBAAAjZ,EAAC,OAAI,EAAA,WAAU,yIAAyI,CAAA;AAAA,kBAAA;AAAA,kBATnJ,KAAK2Z,CAAG;AAAA,gBAUf;AAAA,cAEH;AAAA,cAjBI,KAAKD,CAAG;AAAA,YAkBf;AAAA,UAEH,IACH;AAAA,UAEA,gBAAAtZ,EAAC,OAAI,EAAA,WAAU,8EACZ,UAAA;AAAA,YAAsB6Y,EAAA;AAAA,YACtB;AAAA,YAAI;AAAA,YAEJA,EAAsB;AAAA,UAAA,EACzB,CAAA;AAAA,QAAA,EACF,CAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EACF,GACF;AAEJ;AClHA,SAASW,GAAkBja,GAAgC;AACzD,WAASka,EAAY9B,GAAc;AAC7B,IAACpY,EAAM,YACTA,EAAM,OACH,MACA,EAAA,MAAA,EACA,YAAY,EAAE,GAAGoY,GAAS,eAAe,GAAO,CAAA,EAChD,IAAI;AAAA,EACT;AAIA,SAAA,gBAAA/X,EAAC0Y,MAAmB,aAAAmB,GAClB,UAAA,gBAAA7Z;AAAA,IAACY;AAAA,IAAA;AAAA,MACC,MAAMjB,KAAA,gBAAAA,EAAO;AAAA,MACb,SAASA,KAAA,gBAAAA,EAAO;AAAA,MAChB,UAAUA,KAAA,gBAAAA,EAAO;AAAA,MACjB,OAAOA,KAAA,gBAAAA,EAAO;AAAA,MACd,QAAQA,KAAA,gBAAAA,EAAO;AAAA,MACf,UAAUA,KAAA,gBAAAA,EAAO;AAAA,IAAA;AAAA,EAAA,GAErB;AAEJ;ACVa,MAAAma,KAAQC,GAAY,OAAqB;AAAA,EACpD,aAAa;;AACJ,WAAA;AAAA,MACL,IAAGzZ,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,WAAW;AAAA,MACX,qBAAqB;AAAA,MACrB,yBAAyB;AAAA,MACzB,QAAQ,CAAC,EAAE,QAAAI,GAAQ,GAAAC,SAAc;AAAA,QAC/B,WAAWiZ;AAAA,QACX,gBAAgB;AAAA,UACd,UAAUlZ,EAAO,SAAS,OAAO,KAAK;AAAA,UACtC,MAAM;AAAA,UACN,SAASC,EAAE,sBAAsB;AAAA,UACjC,QAAAD;AAAA,QAAA;AAAA,MAEJ;AAAA,IACF;AAAA,EACF;AAAA,EAEA,gBAAgB;AACP,WAAA;AAAA,MACLsZ,GAAS,UAAU,KAAK,QAAQ,QAAQ;AAAA,MACxCC,GAAY,UAAU,KAAK,QAAQ,WAAW;AAAA,MAC9CC,GAAU,UAAU,KAAK,QAAQ,SAAS;AAAA,MAC1ChC,GAAoB,UAAU,KAAK,QAAQ,mBAAmB;AAAA,IAChE;AAAA,EAAA;AAEJ,CAAC,GC3BYiC,KAAgBhP,EAAU,OAA6B;AAAA,EAClE,MAAM;AAAA,EACN,aAAa;;AACJ,WAAA;AAAA,MACL,IAAG7K,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,QAAQ,CAAC,EAAE,QAAAI,GAAQ,GAAAC,SAAS;AAAA,QAC1B,WAAWC;AAAA,QACX,gBAAgB;AAAA,UACd,QAAQ,MAAM;AACZ,YAAAF,EAAO,SAAS,WAAWA,KAAA,gBAAAA,EAAQ,MAAM,UAAU,MAAM,OAAiB;AAAA,UAC5E;AAAA,UACA,MAAM;AAAA,UACN,SAASC,EAAE,eAAe;AAAA,QAAA;AAAA,MAE9B;AAAA,IACF;AAAA,EACF;AAAA,EACA,cAAc;AACL,WAAA;AAAA,MACL,YACE,CAACyZ,MACC,CAAC;AAAA,QACC,MAAM;AAAA,UACJ,UAAA3G;AAAA,UACA,OAAO,EAAE,IAAAvP,EAAG;AAAA,UACZ,KAAAmW;AAAA,QAAA;AAAA,MACF,MACI;AAIE,cAAAC,IAAY,gCADC,mBADjB,8OAC6C,CACa;AAE5D,eAAAD,EAAI,MAAM,SAASC,GACV7G,EAAAvP,EAAG,QAAQ,iBAAiB,EAAE,MAAM,SAAS,OAAAkW,EAAA,CAAO,CAAC,GACvD;AAAA,MAAA;AAAA,IAEf;AAAA,EACF;AAAA,EAEA,wBAAwB;AACf,WAAA;AAAA,MACL,IAAItW,GAAO;AAAA,QACT,KAAK,IAAIC,EAAU,gBAAgB;AAAA,QACnC,OAAO;AAAA,UACL,MAAM,MAAM,CAAC;AAAA,UACb,OAAO,CAACG,GAAIqW,MAAQ;AACZ,kBAAAvV,IAASd,EAAG,QAAQ,eAAe;AACrC,mBAAAc,KAAUA,EAAO,SAAS,UAC5BuV,IAAMvV,EAAO,QACJA,KAAUA,EAAO,SAAS,UACnCuV,IAAM,CAAC,IAEFA;AAAA,UAAA;AAAA,QAEX;AAAA,QACA,OAAO;AAAA,UACL,iBAAiB;AAAA,YACf,UAAUvW,GAAM;AACd,oBAAMoW,IAAQ,KAAK,SAASpW,EAAK,KAAK;AACtC,kBAAI,CAACoW,KAASA,EAAM,WAAW;AACxB,uBAAApW,EAAA,IAAI,MAAM,SAAS,IACjB;AAET,oBAAMwW,IAAU,MAAM;AACX,yBAAA,oBAAoB,WAAWA,CAAO;AAE3C,oBAAA;AAAA,kBACF,UAAA/G;AAAA,kBACA,OAAO,EAAE,IAAAvP,GAAI,WAAA+O,EAAU;AAAA,kBACvB,KAAAoH;AAAA,gBAAA,IACErW;AACJ,gBAAAqW,EAAI,MAAM,SAAS,IAEnBnW,IAAKA,EAAG,WAAW+O,EAAU,MAAMA,EAAU,EAAE;AAC/C,2BAAWwH,KAAQL;AACb,kBAAAK,EAAK,KAAK,SAAS,WACrBvW,IAAKA,EAAG,QAAQ+O,EAAU,MAAMA,EAAU,IAAIwH,CAAI;AAItD,gBAAAhH,EAASvP,EAAG,QAAQ,iBAAiB,EAAE,MAAM,MAAA,CAAO,CAAC;AAAA,cACvD;AACS,8BAAA,iBAAiB,WAAWsW,CAAO,GACrC;AAAA,YAAA;AAAA,UACT;AAAA,QACF;AAAA,MAEH,CAAA;AAAA,IACH;AAAA,EAAA;AAEJ,CAAC;AC9GD,SAASE,GAAuB,EAAE,QAAAha,GAAQ,GAAGf,KAAc;AACnD,QAAA,EAAE,GAAAgB,EAAE,IAAImI,EAAU,GAElB,CAAC6R,GAAcC,CAAe,IAAI/T,EAAS,EAAE,GAC7C,CAACgU,GAASC,CAAU,IAAIjU,EAAS,CAAA,CAAE,GACnC,CAACkU,GAAaC,CAAc,IAAInU,EAAS,EAAE,GAC3C,CAACoU,GAAcC,CAAe,IAAIrU,EAAS,EAAE,GAC7C,CAACsU,GAASC,CAAU,IAAIvU,EAAS,EAAK,GACtC,CAACwU,GAAeC,CAAgB,IAAIzU,EAAS,EAAK;AAExD,SAAAkO,EAAU,MAAM;AACd,IAAKoG,MACHH,EAAe,EAAE,GACjBE,EAAgB,EAAE,GAClBN,EAAgB,EAAE,GAClBE,EAAW,CAAA,CAAE,GAENpa,EAAA,SAAS,cAAc,EAAE,GACzBA,EAAA,SAAS,eAAe,EAAE;AAAA,EACnC,GACC,CAACA,GAAQya,CAAO,CAAC,GAEpBpG,EAAU,MAAM;AACd,IAAKoG,KAEDza,KAAUA,EAAO,YAAYA,EAAO,SAAS,iBACxCA,EAAA,SAAS,cAAcqa,CAAW;AAAA,EAE1C,GAAA,CAACI,GAASJ,GAAara,CAAM,CAAC,GAEjCqU,EAAU,MAAM;AACd,IAAKoG,KAEDza,KAAUA,EAAO,YAAYA,EAAO,SAAS,kBACxCA,EAAA,SAAS,eAAeua,CAAY;AAAA,EAE5C,GAAA,CAACE,GAASF,GAAcva,CAAM,CAAC,GAElCqU,EAAU,MAAM;AACd,QAAI,CAACrU;AACH;AAEI,UAAA6a,IAAkB7a,EAAO,iBAAiB,WAAW,KAAK,CAACiQ,MAAaA,EAAI,SAAS6K,GAAiB,IAAI;AAEhH,QAAI,CAACD;AACH;AAEF,UAAME,IAAW,MAAM;AACrB,UAAI,CAACN;AACH;AAEF,YAAMR,IAAeY,IAAkBA,EAAgB,QAAQ,eAAe,IACxEV,IAAUU,IAAkBA,EAAgB,QAAQ,UAAU,CAAC;AACrE,MAAAX,EAAgB,CAAac,MAAAA,MAAaf,IAAeA,IAAee,CAAS,GACjFZ,EAAW,OAAgBa,GAAUC,GAAaf,CAAO,IAAIe,IAAcf,CAAQ;AAAA,IACrF;AAEY,WAAAgB,GAAA7H,EAAO,eAAeyH,CAAQ,GAEnC,MAAM;AACX,MAAKF,KAEOM,GAAA7H,EAAO,eAAeyH,CAAQ;AAAA,IAC5C;AAAA,EAAA,GACC,CAACN,GAASza,CAAM,CAAC,GAGlB,gBAAAN;AAAA,IAACoK;AAAA,IAAA;AAAA,MACC,cAAc4Q;AAAA,MACd,MAAMD;AAAA,MAEN,UAAA;AAAA,QAAA,gBAAAnb;AAAA,UAACyK;AAAA,UAAA;AAAA,YACC,SAAO;AAAA,YACP,UAAU9K,KAAA,gBAAAA,EAAO;AAAA,YAEjB,UAAA,gBAAAK;AAAA,cAACY;AAAA,cAAA;AAAA,gBACC,UAAUjB,KAAA,gBAAAA,EAAO;AAAA,gBACjB,UAAUA,KAAA,gBAAAA,EAAO;AAAA,gBACjB,SAASA,KAAA,gBAAAA,EAAO;AAAA,gBAEhB,UAAC,gBAAAK,EAAAsI,GAAA,EAAc,MAAM3I,KAAA,gBAAAA,EAAO,KAAM,CAAA;AAAA,cAAA;AAAA,YAAA;AAAA,UACpC;AAAA,QACF;AAAA,QAEA,gBAAAS;AAAA,UAACsK;AAAA,UAAA;AAAA,YACC,OAAM;AAAA,YACN,WAAU;AAAA,YACV,kBAAgB;AAAA,YAChB,MAAK;AAAA,YAGL,UAAA;AAAA,cAAC,gBAAAtK,EAAA,OAAA,EAAI,WAAU,kFACb,UAAA;AAAA,gBAAC,gBAAAJ,EAAA8b,IAAA,EACE,UAAEnb,EAAA,2BAA2B,EAChC,CAAA;AAAA,gBAEC,gBAAAX,EAAA,QAAA,EAAK,WAAU,0BACb,YAAQ,SAAS,IAAI,GAAG2a,IAAe,CAAC,IAAIE,EAAQ,MAAM,KAAK,MAClE,CAAA;AAAA,cAAA,GACF;AAAA,cAEA,gBAAAza,EAAC,OAAI,EAAA,WAAU,6GACb,UAAA;AAAA,gBAAA,gBAAAJ;AAAA,kBAAC+b;AAAA,kBAAA;AAAA,oBACC,WAAS;AAAA,oBACT,WAAU;AAAA,oBACV,UAAU,CAAAlJ,MAAKmI,EAAenI,EAAE,OAAO,KAAK;AAAA,oBAC5C,aAAY;AAAA,oBACZ,UAAQ;AAAA,oBACR,MAAK;AAAA,oBACL,OAAOkI;AAAA,kBAAA;AAAA,gBACT;AAAA,gBAEA,gBAAA/a;AAAA,kBAACG;AAAA,kBAAA;AAAA,oBAAO,WAAU;AAAA,oBAChB,UAAU0a,EAAQ,WAAW;AAAA,oBAC7B,SAASna,EAAO,SAAS;AAAA,oBAEzB,UAAA,gBAAAV,EAACsI,GAAc,EAAA,MAAK,YAAY,CAAA;AAAA,kBAAA;AAAA,gBAClC;AAAA,gBAEA,gBAAAtI;AAAA,kBAACG;AAAA,kBAAA;AAAA,oBAAO,WAAU;AAAA,oBAChB,UAAU0a,EAAQ,WAAW;AAAA,oBAC7B,SAASna,EAAO,SAAS;AAAA,oBAEzB,UAAA,gBAAAV,EAACsI,GAAc,EAAA,MAAK,cAAc,CAAA;AAAA,kBAAA;AAAA,gBAAA;AAAA,cACpC,GAEF;AAAA,gCAECwT,IAAM,EAAA,WAAU,qBACd,UAAAnb,EAAE,4BAA4B,GACjC;AAAA,gCAEC,OAAI,EAAA,WAAU,4GACb,UAAC,gBAAAX,EAAA,OAAA,EAAI,WAAU,6EACb,UAAA,gBAAAA;AAAA,gBAAC+b;AAAA,gBAAA;AAAA,kBACC,WAAU;AAAA,kBACV,UAAU,CAAAlJ,MAAKqI,EAAgBrI,EAAE,OAAO,KAAK;AAAA,kBAC7C,aAAY;AAAA,kBACZ,UAAQ;AAAA,kBACR,MAAK;AAAA,kBACL,OAAOoI;AAAA,gBAAA;AAAA,iBAEX,EACF,CAAA;AAAA,cAEA,gBAAA7a,EAAC,OAAI,EAAA,WAAU,6EACb,UAAA;AAAA,gBAAA,gBAAAJ;AAAA,kBAACgc;AAAA,kBAAA;AAAA,oBACC,SAASX;AAAA,oBACT,iBAAiB,CAACxI,MAAW;AAC3B,sBAAAyI,EAAiBzI,CAAC,GACXnS,EAAA,SAAS,iBAAiBmS,CAAC;AAAA,oBAAA;AAAA,kBACpC;AAAA,gBACF;AAAA,gBAEC,gBAAA7S,EAAA8b,IAAA,EACE,UAAEnb,EAAA,8BAA8B,EACnC,CAAA;AAAA,cAAA,GACF;AAAA,cAEA,gBAAAP,EAAC,OAAI,EAAA,WAAU,2DACb,UAAA;AAAA,gBAAA,gBAAAJ;AAAA,kBAACG;AAAA,kBAAA;AAAA,oBAAO,WAAU;AAAA,oBAChB,UAAU0a,EAAQ,WAAW;AAAA,oBAC7B,SAASna,EAAO,SAAS;AAAA,oBAExB,YAAE,4BAA4B;AAAA,kBAAA;AAAA,gBACjC;AAAA,gBAEA,gBAAAV;AAAA,kBAACG;AAAA,kBAAA;AAAA,oBAAO,WAAU;AAAA,oBAChB,UAAU0a,EAAQ,WAAW;AAAA,oBAC7B,SAASna,EAAO,SAAS;AAAA,oBAExB,YAAE,+BAA+B;AAAA,kBAAA;AAAA,gBAAA;AAAA,cACpC,EACF,CAAA;AAAA,YAAA;AAAA,UAAA;AAAA,QAAA;AAAA,MACF;AAAA,IAAA;AAAA,EACF;AAEJ;ACtJA,MAAMub,KAAa,CAACnX,GAAoB2O,MAAkBA,EAAS3O,EAAM,EAAE;AAE3E,SAASoX,GAAMC,GAAWC,GAAuBf,GAAgC;AACxE,SAAA,OAAOe,IAAeD,EAAE,QAAQ,yBAAyB,OAAO,QAAQ,IAAIA,GAAGd,IAAgB,OAAO,KAAK;AACpH;AAEA,SAASgB,GACP7Z,GACA8Z,GACAC,GACmD;AACnD,QAAMrZ,IAA4B,CAAC;AACnC,MAAIsZ,IAAiD,CAAC;AACtD,QAAM3B,IAAoB,CAAC;AAE3B,MAAIrS,IAAQ;AAEZ,MAAI,CAAC8T;AACH,WAAO,EAAE,qBAAqB,IAAI,SAAS,CAAA,EAAG;AAE3C,EAAA9Z,KAAA,QAAAA,EAAA,YAAY,CAACM,GAAWoL,MAAa;AACxC,IAAIpL,EAAK,SACH0Z,EAAsBhU,CAAK,IAC7BgU,EAAsBhU,CAAK,IAAI;AAAA,MAC7B,MAAMgU,EAAsBhU,CAAK,EAAE,OAAO1F,EAAK;AAAA,MAC/C,KAAK0Z,EAAsBhU,CAAK,EAAE;AAAA,IACpC,IAEAgU,EAAsBhU,CAAK,IAAI;AAAA,MAC7B,MAAM,GAAG1F,EAAK,IAAI;AAAA,MAClB,KAAAoL;AAAA,IACF,IAGO1F,KAAA;AAAA,EACX,IAGsBgU,IAAAA,EAAsB,OAAO,OAAO;AAE5D,aAAW,EAAE,MAAA1V,GAAM,KAAAoH,EAAI,KAAKsO,GAAuB;AAEjD,UAAMC,IAAU,CAAC,GAAG3V,EAAK,SAASwV,CAAU,CAAC;AAE7C,eAAWI,KAAKD,GAAS;AAEnB,UAAAC,EAAE,CAAC,MAAM;AACX;AAEE,MAAAA,EAAE,UAAU,UACd7B,EAAQ,KAAK;AAAA,QACX,MAAM3M,IAAMwO,EAAE;AAAA,QACd,IAAIxO,IAAMwO,EAAE,QAAQA,EAAE,CAAC,EAAE;AAAA,MAAA,CAC1B;AAAA,IACH;AAAA,EACF;AAGF,aAAWC,KAAK9B;AACF,IAAA3X,EAAA,KAAKQ,GAAW,OAAOiZ,EAAE,MAAMA,EAAE,IAAI,EAAE,OAAOJ,EAAmB,CAAA,CAAC;AAGzE,SAAA;AAAA,IACL,qBAAqBrZ;AAAA,IACrB,SAAA2X;AAAA,EACF;AACF;AAEA,SAAS+B,GAAQC,GAAqBhC,GAAmB,EAAE,OAAA/V,GAAO,UAAA2O,KAAiB;AAGjF,MAAI,CAFgBoH,EAAQ,CAAC;AAG3B;AAEF,QAAM,EAAE,MAAA1X,GAAM,IAAAK,MAAOqX,EAAQ,CAAC;AAE1B,EAAApH,KACFA,EAAS3O,EAAM,GAAG,WAAW+X,GAAa1Z,GAAMK,CAAE,CAAC;AACvD;AAEA,SAASsZ,GAAiBD,GAAqBrU,GAAeuU,GAAoBlC,GAA8C;AAC9H,QAAMmC,IAAYxU,IAAQ;AAEtB,MAAA,CAACqS,EAAQmC,CAAS;AACb,WAAA;AAET,QAAM,EAAE,MAAMC,GAAa,IAAIC,EAAU,IAAIrC,EAAQrS,CAAK,GAEpD2U,IAASD,IAAYD,IAAcJ,EAAY,SAASE,GAExD,EAAE,MAAA5Z,GAAM,IAAAK,MAAOqX,EAAQmC,CAAS;AAEtC,SAAAnC,EAAQmC,CAAS,IAAI;AAAA,IACnB,IAAIxZ,IAAK2Z;AAAA,IACT,MAAMha,IAAOga;AAAA,EACf,GAEO,CAACA,GAAQtC,CAAO;AACzB;AAEA,SAASuC,GAAWP,GAAqBhC,GAAmB,EAAE,IAAA3W,GAAI,UAAAuP,KAAiB;AACjF,MAAI0J,IAAS,GAETE,IAAaxC,EAAQ,MAAM;AAE/B,MAAIwC,EAAW,WAAW;AACjB,WAAA;AAET,WAASC,IAAI,GAAGA,IAAID,EAAW,QAAQC,KAAK,GAAG;AAC7C,UAAM,EAAE,MAAAna,GAAM,IAAAK,MAAO6Z,EAAWC,CAAC;AAE9B,IAAApZ,EAAA,WAAW2Y,GAAa1Z,GAAMK,CAAE;AAEnC,UAAM+Z,IAA2BT,GAAiBD,GAAaS,GAAGH,GAAQE,CAAU;AAEpF,IAAIE,MACFJ,IAASI,EAAyB,CAAC,GACnCF,IAAaE,EAAyB,CAAC;AAAA,EACzC;AAGF,SAAA9J,EAASvP,CAAE,GAEJ;AACT;AAEA,SAASsZ,GAAiB,EAAE,MAAAxZ,GAAM,IAAAE,GAAI,eAAAuZ,GAAe,0BAAAC,GAA0B,WAAAC,KAAkB;AACzF,QAAAC,IAASH,EAAcE,CAAS;AAEtC,MAAIC,GAAQ;AACJ,UAAAxZ,IAAcF,EAAG,QAAQ,oBAAoB;AAAA,MACjD,SAAS0Z,EAAO;AAAA,MAChB,OAAOA,EAAO;AAAA,MACd,OAAO,EAAE,OAAOF,EAAyB;AAAA,IAAA,CAC1C;AACD,WAAA1Z,KAAA,QAAAA,EAAM,SAASI,IAEf,WAAW,MAAM;AACf,YAAMyR,IAAK,OAAO,SAAS,cAAc,IAAI6H,CAAwB,EAAE;AACvE,MAAI7H,KACFgI,GAAehI,GAAI,EAAE,UAAU,UAAU,YAAY,aAAa;AAAA,OAEnE,CAAC,GAEG;AAAA,EAAA;AAGF,SAAA;AACT;AAiBa,MAAA2F,KAAmBrQ,EAAU,OAAqC;AAAA,EAC7E,MAAM;AAAA,EAEN,aAAa;;AACJ,WAAA;AAAA,MACL,IAAG7K,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,YAAY;AAAA,MACZ,aAAa;AAAA,MACb,SAAS,CAAC;AAAA,MACV,cAAc;AAAA,MACd,mBAAmB;AAAA,MACnB,0BAA0B;AAAA,MAC1B,eAAe;AAAA,MACf,cAAc;AAAA,MACd,UAAU,MAAM;AAAA,MAEhB;AAAA,MACA,QAAQ,CAAC,EAAE,QAAAI,GAAQ,GAAAC,SAAc;AAAA,QAC/B,WAAW+Z;AAAA,QACX,gBAAgB;AAAA,UACd,QAAQ,MAAM;AAAA,UAEd;AAAA,UACA,MAAM;AAAA,UACN,SAAS/Z,EAAE,iCAAiC;AAAA,UAC5C,UAAU,MAAM;AAAA,UAChB,UAAU;AAAA,UACV,QAAAD;AAAA,QAAA;AAAA,MAEJ;AAAA,IACF;AAAA,EACF;AAAA,EAEA,aAAa;AACJ,WAAA;AAAA,MACL,SAAS,CAAC;AAAA,MACV,cAAc;AAAA,IAChB;AAAA,EACF;AAAA,EAEA,cAAc;AACL,WAAA;AAAA,MACL,eACE,CAAC4b,MACC,CAAC,EAAE,OAAAxX,GAAO,UAAA2O,SACR,KAAK,QAAQ,aAAa6I,GACrB,KAAA,QAAQ,UAAU,CAAC,GACxB,KAAK,QAAQ,eAAe,GAC5BvI,EAAcC,EAAO,aAAa,GAClCiI,GAAWnX,GAAO2O,CAAQ,GACnB;AAAA,MAEb,gBACE,CAACoJ,MACC,CAAC,EAAE,OAAA/X,GAAO,UAAA2O,SACR,KAAK,QAAQ,cAAcoJ,GAE3BZ,GAAWnX,GAAO2O,CAAQ,GAEnB;AAAA,MAEb,kBAAkB,CAAC4H,MAA2B,CAAC,EAAE,OAAAvW,GAAO,UAAA2O,SACtD,KAAK,QAAQ,gBAAgB4H,GAC7BY,GAAWnX,GAAO2O,CAAQ,GACnB;AAAA,MAET,SACE,MACE,CAAC,EAAE,OAAA3O,GAAO,UAAA2O,QAAe;AACjB,cAAA,EAAE,aAAAoJ,MAAgB,KAAK,SACvB,EAAE,cAAAlC,GAAc,SAAAE,EAAQ,IAAI,KAAK,SACjCiD,IAAgBjD,EAAQF,CAAY;AAE1C,eAAImD,KACFlB,GAAQC,GAAa,CAACiB,CAAa,GAAG,EAAE,OAAAhZ,GAAO,UAAA2O,GAAU,GACzD,KAAK,QAAQ,QAAQ,OAAOkH,GAAc,CAAC,MAE3CiC,GAAQC,GAAahC,GAAS,EAAE,OAAA/V,GAAO,UAAA2O,GAAU,GAC5C,KAAA,QAAQ,QAAQ,MAAM,IAG7BM,EAAcC,EAAO,aAAa,GAElCiI,GAAWnX,GAAO2O,CAAQ,GAEnB;AAAA,MACT;AAAA,MACJ,YACE,MACE,CAAC,EAAE,OAAA3O,GAAO,IAAAZ,GAAI,UAAAuP,QAAe;AACrB,cAAA,EAAE,aAAAoJ,MAAgB,KAAK,SACvB,EAAE,SAAAhC,MAAY,KAAK;AAEzB,eAAAuC,GAAWP,GAAahC,GAAS,EAAE,IAAA3W,GAAI,UAAAuP,GAAU,GAEjD,KAAK,QAAQ,eAAe,IACvB,KAAA,QAAQ,UAAU,CAAC,GACxBM,EAAcC,EAAO,aAAa,GAElCiI,GAAWnX,GAAO2O,CAAQ,GAEnB;AAAA,MACT;AAAA,MACJ,sBACE,MACE,CAAC,EAAE,MAAAzP,GAAM,IAAAE,QAAc;AACf,cAAA,EAAE,0BAAAwZ,MAA6B,KAAK,SACpC,EAAE,cAAA/C,GAAc,SAAAE,EAAQ,IAAI,KAAK,SACjCmC,KAAarC,IAAeE,EAAQ,SAAS,KAAKA,EAAQ;AAChE,oBAAK,QAAQ,eAAemC,GAC5BjJ,EAAcC,EAAO,aAAa,GAE3BwJ,GAAiB;AAAA,UACtB,MAAAxZ;AAAA,UACA,IAAAE;AAAA,UACA,eAAe2W;AAAA,UACf,0BAAA6C;AAAA,UACA,WAAWV;AAAA,QAAA,CACZ;AAAA,MACH;AAAA,MACJ,sBACE,MACE,CAAC,EAAE,MAAAhZ,GAAM,IAAAE,QAAc;AACf,cAAA,EAAE,0BAAAwZ,MAA6B,KAAK,SACpC,EAAE,cAAA/C,GAAc,SAAAE,EAAQ,IAAI,KAAK,SACjCmC,KAAarC,IAAe,KAAKE,EAAQ;AAC/C,oBAAK,QAAQ,eAAemC,GAC5B,KAAK,QAAQ,YAAY,KAAK,QAAQ,SAAS,GAC/CjJ,EAAcC,EAAO,aAAa,GAE3BwJ,GAAiB;AAAA,UACtB,MAAAxZ;AAAA,UACA,IAAAE;AAAA,UACA,eAAe2W;AAAA,UACf,0BAAA6C;AAAA,UACA,WAAWV;AAAA,QAAA,CACZ;AAAA,MAAA;AAAA,IAET;AAAA,EACF;AAAA,EAEA,wBAAwB;AACtB,UAAMe,IAAgB;AAEf,WAAA;AAAA,MACL,IAAIja,GAAO;AAAA,QACT,KAAK,IAAIC,EAAU,QAAQ;AAAA,QAC3B,OAAO;AAAA,UACL,OAAO;AACL,mBAAOJ,GAAc;AAAA,UACvB;AAAA,UACA,MAAMqa,GAAK;AACH,kBAAA,EAAE,KAAAxb,GAAK,YAAAyb,EAAA,IAAeD,GAEtB,EAAE,YAAA1B,GAAY,mBAAAC,GAAmB,0BAAAmB,GAA0B,cAAAtB,GAAc,eAAAf,EAAA,IAC3E0C,EAAc;AAElB,gBAAIE,KAAc3B,GAAY;AACtB,oBAAA,EAAE,qBAAA4B,GAAqB,SAAArD,EAAA,IAAYwB;AAAA,gBACvC7Z;AAAA,gBACA0Z,GAAMI,GAAYF,GAAcf,CAAa;AAAA,gBAC7CkB;AAAA,cACF;AAMI,kBALJwB,EAAc,QAAQ,UAAUlD,GAC5BkD,EAAc,QAAQ,eAAelD,EAAQ,SAAS,MACxDkD,EAAc,QAAQ,eAAe,IAEvChK,EAAcC,EAAO,aAAa,GAC9BgK,EAAI,QAAQ,kBAAkB,GAAG;AACnC,sBAAM,EAAE,SAAAG,GAAS,OAAAC,GAAO,OAAAnX,EAAU,IAAA+W,EAAI,QAAQ,kBAAkB;AAChE,gBAAAE,EAAoB,KAAKxa,GAAW,OAAOya,GAASC,GAAOnX,CAAK,CAAC;AAAA,cAAA;AAE7D,gBAAA4T,EAAQ,SAAS,MACCqD,EAAA,CAAC,IAAIxa,GAAW,OAAOmX,EAAQ,CAAC,EAAE,MAAMA,EAAQ,CAAC,EAAE,IAAI;AAAA,kBACzE,OAAO6C;AAAA,gBAAA,CACR;AAIE,qBAAA/Z,GAAc,OAAOnB,GAAK0b,CAAmB;AAAA,YAAA;AAEtD,mBAAOva,GAAc;AAAA,UAAA;AAAA,QAEzB;AAAA,QACA,OAAO;AAAA,UACL,YAAYmB,GAAO;AACV,mBAAA,KAAK,SAASA,CAAK;AAAA,UAAA;AAAA,QAC5B;AAAA,MAEH,CAAA;AAAA,IACH;AAAA,EAAA;AAEJ,CAAC;AC7XD,SAASuZ,GAAY;AAAA,EACnB,WAAAxY;AAAA,EACA,GAAGlG;AACL,GAA2D;AAEvD,SAAA,gBAAAK;AAAA,IAACse,EAAqB;AAAA,IAArB;AAAA,MACC,WAAWvY;AAAA,QACT;AAAA,QACAF;AAAA,MACF;AAAA,MACA,aAAU;AAAA,MACT,GAAGlG;AAAA,IAAA;AAAA,EACN;AAEJ;AAEA,SAAS4e,GAAkB;AAAA,EACzB,WAAA1Y;AAAA,EACA,GAAGlG;AACL,GAA6D;AAEzD,SAAA,gBAAAS;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAW2F,EAAG,mGAAmGF,CAAS;AAAA,MAC1H,aAAU;AAAA,MAEV,UAAA;AAAA,QAAC,gBAAA7F,EAAAwe,IAAA,EAAW,WAAU,wDAAwD,CAAA;AAAA,QAC9E,gBAAAxe;AAAA,UAACse,EAAqB;AAAA,UAArB;AAAA,YACC,WAAU;AAAA,YACV,aAAU;AAAA,YACT,GAAG3e;AAAA,UAAA;AAAA,QAAA;AAAA,MACN;AAAA,IAAA;AAAA,EACF;AAEJ;AAEA,SAAS8e,GAAe,EAAE,UAAA3Y,GAAU,GAAGnG,KAAkC;AAErE,SAAA,gBAAAK,EAAC,SAAK,GAAGL,GAAO,WAAU,sCAAqC,aAAU,oBACtE,UAAAmG,GACH;AAEJ;AAEA,SAAS4Y,GAAiB;AAAA,EACxB,OAAAC;AAAA,EACA,WAAA9Y;AAAA,EACA,GAAGlG;AACL,GAA8B;AAE1B,SAAA,gBAAAK;AAAA,IAAC;AAAA,IAAA;AAAA,MACE,GAAGL;AAAA,MACJ,WAAWoG;AAAA,QACT;AAAA,QACAF;AAAA,MACF;AAAA,MACA,aAAU;AAAA,MAET,UAAM8Y,EAAA;AAAA,IAAA;AAAA,EACT;AAEJ;AAEA,SAASC,GAA0B;AAAA,EACjC,UAAAC;AAAA,EACA,GAAGlf;AACL,GAAuC;AAEnC,SAAA,gBAAAK;AAAA,IAAC;AAAA,IAAA;AAAA,MACE,GAAGL;AAAA,MACJ,WAAU;AAAA,MACV,aAAU;AAAA,MAET,UAASkf,EAAA;AAAA,IAAA;AAAA,EACZ;AAEJ;AAEA,SAASC,GAAmB;AAAA,EAC1B,WAAAjZ;AAAA,EACA,GAAGlG;AACL,GAA+D;AAE3D,SAAA,gBAAAS;AAAA,IAACke,EAAqB;AAAA,IAArB;AAAA,MACC,WAAWvY,EAAG,6DAA6DF,CAAS;AAAA,MACpF,aAAU;AAAA,MACT,GAAGlG;AAAA,MAEJ,UAAA;AAAA,QAAA,gBAAAK;AAAA,UAACse,EAAqB;AAAA,UAArB;AAAA,YACC,WAAU;AAAA,YACV,aAAU;AAAA,YAEV,UAAA,gBAAAte,EAAC+e,IAAW,EAAA,WAAU,wCAAwC,CAAA;AAAA,UAAA;AAAA,QAChE;AAAA,QACA,gBAAA/e;AAAA,UAACse,EAAqB;AAAA,UAArB;AAAA,YACC,WAAU;AAAA,YACV,aAAU;AAAA,YACX,UAAA;AAAA,UAAA;AAAA,QAED;AAAA,QACA,gBAAAte;AAAA,UAACse,EAAqB;AAAA,UAArB;AAAA,YACC,WAAU;AAAA,YACV,YAAY;AAAA,cACV,KAAKG;AAAA,cACL,OAAOC;AAAA,cACP,gBAAgBE;AAAA,YAClB;AAAA,YACA,aAAU;AAAA,UAAA;AAAA,QAAA;AAAA,MACZ;AAAA,IAAA;AAAA,EACF;AAEJ;AAEA,SAASI,GAAkB;AAAA,EACzB,WAAAnZ;AAAA,EACA,GAAGlG;AACL,GAAgC;AAE5B,SAAA,gBAAAK;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAW+F;AAAA,QACT;AAAA,QACAF;AAAA,MACF;AAAA,MACA,aAAU;AAAA,MACT,GAAGlG;AAAA,MAEJ,UAAA,gBAAAK,EAACse,EAAqB,aAArB,EACE,WAAC,EAAE,OAAAK,EAAA,MACFA,IAEI,gBAAAve,EAAA+I,IAAA,EAAA,UAAA;AAAA,QAAA,gBAAAnJ,EAAC,OAAI,EAAA,WAAU,mHACZ,UAAA2e,EAAM,OACT;AAAA,QACC,gBAAA3e,EAAA,QAAA,EAAK,WAAU,yEACb,YAAM,MACT,CAAA;AAAA,MAAA,GACF,IAEC,gBAAAA,EAAA,QAAA,EAAK,WAAU,sIAAqI,8BAErJ,EAGN,CAAA;AAAA,IAAA;AAAA,EACF;AAEJ;AClJA,SAASif,GAAgB,EAAE,eAAAC,GAAe,UAAApZ,KAAoB;AAG1D,SAAA,gBAAA1F,EAACoK,IAAQ,EAAA,OAAK,IACZ,UAAA;AAAA,IAAC,gBAAAxK,EAAAyK,IAAA,EAAe,SAAO,IACpB,UAAA3E,EACH,CAAA;AAAA,IAEA,gBAAA9F;AAAA,MAAC0K;AAAA,MAAA;AAAA,QAAe,OAAM;AAAA,QACpB,WAAU;AAAA,QACV,kBAAgB;AAAA,QAChB,MAAK;AAAA,QAEL,UAAA,gBAAAtK;AAAA,UAACie;AAAA,UAAA;AAAA,YACC,WAAU;AAAA,YACV,eAAe,CAAC,EAAE,OAAAM,QAAY;AAC5B,cAAAO,EAAcP,CAAK;AAAA,YACrB;AAAA,YAEA,UAAA;AAAA,cAAA,gBAAA3e,EAACue,IAAkB,EAAA;AAAA,gCAClBO,IAAmB,EAAA;AAAA,gCACnBE,IAAkB,CAAA,CAAA;AAAA,YAAA;AAAA,UAAA;AAAA,QAAA;AAAA,MACrB;AAAA,IAAA;AAAA,EACF,GACF;AAEJ;AAEO,SAASG,GAAqB,EAAE,QAAAze,GAAQ,MAAAkO,GAAM,GAAGjP,KAAc;AACpE,QAAMyf,IAAWtX;AAAA,IACf,CAAC6W,MAAe;AACR,YAAA,EAAE,WAAA1L,MAAcvS,EAAO,OACvB,EAAE,SAAA2e,MAAYpM;AACb,aAAAvS,EAAO,QAAQ,gBAAgB2e,EAAQ,KAAKV,CAAK,EAAE,IAAI;AAAA,IAChE;AAAA,IACA,CAACje,CAAM;AAAA,EACT;AAGE,SAAA,gBAAAV,EAACif,IAAgB,EAAA,eAAeG,GAC9B,UAAA,gBAAApf;AAAA,IAACY;AAAA,IAAA;AAAA,MACC,MAAAgO;AAAA,MACA,SAASjP,KAAA,gBAAAA,EAAO;AAAA,IAAA;AAAA,EAAA,GAEpB;AAEJ;AC5CO,MAAM2f,KAA8BtJ,GAAW,CAACrW,GAAOC,MAAQ;AAC9D,QAAA+H,IAAkBC,EAAuB,IAAI,GAC7C,CAAC2X,GAAeC,CAAgB,IAAI3Y,EAAS,CAAC,GAC9C,EAAE,GAAAlG,EAAE,IAAImI,EAAU,GAElByM,IAAa,CAAC/M,MAAe;AAC3B,UAAAjD,IAAO5F,EAAM,MAAM6I,CAAK;AAE9B,IAAIjD,KACF5F,EAAM,QAAQ4F,CAAI;AAAA,EAEtB,GAEM2P,IAAY,MAAM;AACtB,IAAAsK,GAAkBD,IAAgB5f,EAAM,MAAM,SAAS,KAAKA,EAAM,MAAM,MAAM;AAAA,EAChF,GAEMwV,IAAc,MAAM;AACxB,IAAAqK,GAAkBD,IAAgB,KAAK5f,EAAM,MAAM,MAAM;AAAA,EAC3D,GAEMyV,IAAe,MAAM;AACzB,IAAAG,EAAWgK,CAAa;AAAA,EAC1B;AAEA,SAAAxK,EAAU,MAAMyK,EAAiB,CAAC,GAAG,CAAC7f,EAAM,KAAK,CAAC,GAElDoV,EAAU,MAAM;AACV,QAAA,OAAO,MAAMwK,IAAgB,CAAC;AAChC;AACF,UAAM1J,IAAKlO,EAAW,QAAQ,cAAc,oBAAoB4X,IAAgB,CAAC,GAAG;AACpF,IAAA1J,KAAMgI,GAAehI,GAAI,EAAE,UAAU,UAAU,YAAY,aAAa;AAAA,EAAA,GACvE,CAAC0J,CAAa,CAAC,GAElB1K,GAAoBjV,GAAK,OAAO;AAAA,IAC9B,WAAW,CAAC,EAAE,OAAAqV,QACRA,EAAM,QAAQ,aACNC,EAAA,GACH,MAGLD,EAAM,QAAQ,eACJE,EAAA,GACL,MAGLF,EAAM,QAAQ,WACHG,EAAA,GACN,MAGF;AAAA,EACT,EACA,qBAGC,OAAI,EAAA,WAAU,iPACb,UAAA,gBAAApV,EAAC,SAAI,KAAK2H,GACP,UAAMhI,EAAA,MAAM,SAAS,IAElBA,EAAM,MAAM,IAAI,CAAC4F,GAAMiD,MACrB,gBAAApI;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAW8H,EAAK,qTAAqTM,MAAU+W,IAAgB,cAAc,EAAE;AAAA,MAE/W,SAAS,MAAMhK,EAAW/M,CAAK;AAAA,MAE9B,UAAA;AAAA,QAAAjD,EAAK,gBAAgB,gBAAAvF;AAAA,UAAC;AAAA,UAAA;AAAA,YAAI,WAAU;AAAA,YACnC,KAAKuF,EAAK;AAAA,UAAA;AAAA,YACPA,EAAK;AAAA,QAAM;AAAA,QAGfA,EAAK;AAAA,QAAK;AAAA,MAAA;AAAA,IAAA;AAAA,IARN,mBAAmBiD,CAAK;AAAA,EAAA,CAWhC,IAGA,gBAAAxI,EAAA,OAAA,EAAI,WAAU,2NACb,UAAC,gBAAAA,EAAA,QAAA,EACE,UAAEW,EAAA,iBAAiB,EACtB,CAAA,EACF,CAAA,EAEN,CAAA,GACF;AAEJ,CAAC;AAED2e,GAAU,cAAc;ACtGjB,MAAMG,KAAe;AAAA,EAC1B,KAAO;AAAA,EACP,MAAQ;AAAA,EACR,UAAY;AAAA,EACZ,QAAU;AAAA,EACV,OAAS;AAAA,EACT,MAAQ;AAAA,EACR,UAAY;AAAA,EACZ,WAAa;AAAA,EACb,aAAe;AAAA,EACf,MAAQ;AAAA,EACR,KAAO;AAAA,EACP,uBAAyB;AAAA,EACzB,kBAAoB;AAAA,EACpB,MAAQ;AAAA,EACR,OAAS;AAAA,EACT,UAAY;AAAA,EACZ,gCAAkC;AAAA,EAClC,YAAc;AAAA,EACd,aAAe;AAAA,EACf,eAAiB;AAAA,EACjB,SAAW;AAAA,EACX,SAAW;AAAA,EACX,qBAAuB;AAAA,EACvB,sBAAwB;AAAA,EACxB,wBAA0B;AAAA,EAC1B,KAAO;AAAA,EACP,kBAAoB;AAAA,EACpB,8BAAgC;AAAA,EAChC,WAAa;AAAA,EACb,8BAAgC;AAAA,EAChC,kBAAoB;AAAA,EACpB,MAAQ;AAAA,EACR,iBAAmB;AAAA,EACnB,eAAiB;AAAA,EACjB,UAAY;AAAA,EACZ,mBAAqB;AAAA,EACrB,gBAAkB;AAAA,EAClB,cAAgB;AAAA,EAChB,gBAAkB;AAAA,EAClB,UAAY;AAAA,EACZ,OAAS;AAAA,EACT,UAAY;AAAA,EACZ,WAAa;AAAA,EACb,WAAa;AAAA,EACb,YAAc;AAAA,EACd,UAAY;AAAA,EACZ,SAAW;AAAA,EACX,QAAU;AAAA,EACV,eAAiB;AAAA,EACjB,UAAY;AAAA,EACZ,MAAQ;AAAA,EACR,uBAAyB;AAAA,EACzB,wBAA0B;AAAA,EAC1B,gBAAkB;AAAA,EAClB,eAAiB;AAAA,EACjB,eAAiB;AAAA,EACjB,UAAY;AAAA,EACZ,WAAa;AAAA,EACb,YAAc;AAAA,EACd,YAAc;AAAA,EACd,gBAAkB;AAAA,EAClB,iBAAmB;AAAA,EACnB,eAAiB;AAAA,EACjB,gBAAkB;AAAA,EAClB,YAAc;AAAA,EACd,WAAa;AAAA,EACb,cAAgB;AAAA,EAChB,UAAY;AAAA,EACZ,SAAW;AAAA,EACX,wBAA0B;AAAA,EAC1B,eAAiB;AAAA,EACjB,YAAc;AAAA,EACd,QAAU;AAAA,EACV,YAAc;AAAA,EACd,SAAW;AAAA,EACX,eAAiB;AAAA,EACjB,UAAY;AAAA,EACZ,WAAa;AAAA,EACb,SAAW;AAAA,EACX,YAAc;AAAA,EACd,uBAAyB;AAAA,EACzB,KAAO;AAAA,EACP,KAAO;AAAA,EACP,QAAU;AAAA,EACV,YAAc;AAAA,EACd,WAAa;AAAA,EACb,cAAgB;AAAA,EAChB,OAAS;AAAA,EACT,OAAS;AAAA,EACT,YAAc;AAAA,EACd,cAAgB;AAAA,EAChB,SAAW;AAAA,EACX,MAAQ;AAAA,EACR,MAAQ;AAAA,EACR,OAAS;AAAA,EACT,cAAgB;AAAA,EAChB,aAAe;AAAA,EACf,KAAO;AAAA,EACP,OAAS;AAAA,EACT,sBAAwB;AAAA,EACxB,QAAU;AAAA,EACV,MAAQ;AAAA,EACR,MAAQ;AAAA,EACR,YAAc;AAAA,EACd,eAAiB;AAAA,EACjB,iBAAmB;AAAA,EACnB,OAAS;AAAA,EACT,OAAS;AAAA,EACT,eAAiB;AAAA,EACjB,OAAS;AAAA,EACT,YAAc;AAAA,EACd,WAAa;AAAA,EACb,SAAW;AAAA,EACX,gBAAkB;AAAA,EAClB,WAAa;AAAA,EACb,aAAe;AAAA,EACf,YAAc;AAAA,EACd,iBAAmB;AAAA,EACnB,aAAe;AAAA,EACf,aAAe;AAAA,EACf,cAAgB;AAAA,EAChB,eAAiB;AAAA,EACjB,MAAQ;AAAA,EACR,aAAe;AAAA,EACf,OAAS;AAAA,EACT,YAAc;AAAA,EACd,iBAAmB;AAAA,EACnB,YAAc;AAAA,EACd,WAAa;AAAA,EACb,kBAAoB;AAAA,EACpB,YAAc;AAAA,EACd,kBAAoB;AAAA,EACpB,yBAA2B;AAAA,EAC3B,cAAgB;AAAA,EAChB,OAAS;AAAA,EACT,cAAgB;AAAA,EAChB,cAAgB;AAAA,EAChB,aAAe;AAAA,EACf,YAAc;AAAA,EACd,cAAgB;AAAA,EAChB,aAAe;AAAA,EACf,aAAe;AAAA,EACf,aAAe;AAAA,EACf,OAAS;AAAA,EACT,MAAQ;AAAA,EACR,WAAa;AAAA,EACb,OAAS;AAAA,EACT,aAAe;AAAA,EACf,MAAQ;AAAA,EACR,MAAQ;AAAA,EACR,MAAQ;AAAA,EACR,gBAAkB;AAAA,EAClB,mBAAqB;AAAA,EACrB,oBAAsB;AAAA,EACtB,oBAAsB;AAAA,EACtB,iBAAmB;AAAA,EACnB,KAAO;AAAA,EACP,MAAQ;AAAA,EACR,qBAAuB;AAAA,EACvB,kCAAoC;AAAA,EACpC,MAAQ;AAAA,EACR,aAAe;AAAA,EACf,eAAiB;AAAA,EACjB,SAAW;AAAA,EACX,iBAAmB;AAAA,EACnB,eAAiB;AAAA,EACjB,GAAK;AAAA,EACL,iBAAmB;AAAA,EACnB,kBAAoB;AAAA,EACpB,OAAS;AAAA,EACT,cAAgB;AAAA,EAChB,YAAc;AAAA,EACd,aAAe;AAAA,EACf,YAAc;AAAA,EACd,eAAiB;AAAA,EACjB,IAAM;AAAA,EACN,YAAc;AAAA,EACd,UAAY;AAAA,EACZ,MAAM;AAAA,EACN,UAAY;AAAA,EACZ,MAAM;AAAA,EACN,YAAc;AAAA,EACd,aAAe;AAAA,EACf,MAAQ;AAAA,EACR,eAAiB;AAAA,EACjB,WAAa;AAAA,EACb,OAAS;AAAA,EACT,WAAa;AAAA,EACb,YAAc;AAAA,EACd,MAAQ;AAAA,EACR,cAAgB;AAAA,EAChB,YAAc;AAAA,EACd,mBAAqB;AAAA,EACrB,WAAa;AAAA,EACb,MAAQ;AAAA,EACR,cAAgB;AAAA,EAChB,WAAa;AAAA,EACb,QAAU;AAAA,EACV,QAAU;AAAA,EACV,gBAAkB;AAAA,EAClB,gBAAkB;AAAA,EAClB,KAAO;AAAA,EACP,MAAQ;AAAA,EACR,KAAO;AAAA,EACP,sBAAwB;AAAA,EACxB,MAAQ;AAAA,EACR,OAAS;AAAA,EACT,kBAAoB;AAAA,EACpB,OAAS;AAAA,EACT,OAAS;AAAA,EACT,MAAQ;AAAA,EACR,MAAQ;AAAA,EACR,KAAO;AAAA,EACP,QAAU;AAAA,EACV,MAAQ;AAAA,EACR,MAAQ;AAAA,EACR,OAAS;AAAA,EACT,KAAO;AAAA,EACP,MAAQ;AAAA,EACR,OAAS;AAAA,EACT,qBAAuB;AAAA,EACvB,KAAO;AAAA,EACP,gBAAkB;AAAA,EAClB,gBAAkB;AAAA,EAClB,kBAAoB;AAAA,EACpB,kBAAoB;AAAA,EACpB,UAAY;AAAA,EACZ,OAAS;AAAA,EACT,kBAAoB;AAAA,EACpB,iBAAmB;AAAA,EACnB,oBAAsB;AAAA,EACtB,mBAAqB;AAAA,EACrB,oBAAsB;AAAA,EACtB,mBAAqB;AAAA,EACrB,YAAc;AAAA,EACd,aAAe;AAAA,EACf,oBAAsB;AAAA,EACtB,cAAgB;AAAA,EAChB,kBAAoB;AAAA,EACpB,aAAe;AAAA,EACf,WAAa;AAAA,EACb,aAAe;AAAA,EACf,iBAAmB;AAAA,EACnB,cAAgB;AAAA,EAChB,gBAAkB;AAAA,EAClB,cAAgB;AAAA,EAChB,aAAe;AAAA,EACf,eAAiB;AAAA,EACjB,SAAW;AAAA,EACX,aAAe;AAAA,EACf,QAAU;AAAA,EACV,eAAiB;AAAA,EACjB,UAAY;AAAA,EACZ,WAAa;AAAA,EACb,QAAU;AAAA,EACV,UAAY;AAAA,EACZ,qBAAuB;AAAA,EACvB,yBAA2B;AAAA,EAC3B,kBAAoB;AAAA,EACpB,WAAa;AAAA,EACb,oBAAsB;AAAA,EACtB,aAAe;AAAA,EACf,cAAgB;AAAA,EAChB,kBAAoB;AAAA,EACpB,oBAAsB;AAAA,EACtB,aAAe;AAAA,EACf,UAAY;AAAA,EACZ,YAAc;AAAA,EACd,KAAO;AAAA,EACP,YAAc;AAAA,EACd,cAAgB;AAAA,EAChB,UAAY;AAAA,EACZ,iBAAmB;AAAA,EACnB,mBAAqB;AAAA,EACrB,OAAS;AAAA,EACT,eAAiB;AAAA,EACjB,iBAAmB;AAAA,EACnB,eAAiB;AAAA,EACjB,mBAAqB;AAAA,EACrB,qBAAuB;AAAA,EACvB,SAAW;AAAA,EACX,aAAe;AAAA,EACf,eAAiB;AAAA,EACjB,SAAW;AAAA,EACX,aAAe;AAAA,EACf,eAAiB;AAAA,EACjB,OAAS;AAAA,EACT,WAAa;AAAA,EACb,aAAe;AAAA,EACf,QAAU;AAAA,EACV,YAAc;AAAA,EACd,cAAgB;AAAA,EAChB,MAAQ;AAAA,EACR,UAAY;AAAA,EACZ,YAAc;AAAA,EACd,UAAY;AAAA,EACZ,cAAgB;AAAA,EAChB,gBAAkB;AAAA,EAClB,gBAAkB;AAAA,EAClB,oBAAsB;AAAA,EACtB,sBAAwB;AAAA,EACxB,eAAiB;AAAA,EACjB,mBAAqB;AAAA,EACrB,qBAAuB;AAAA,EACvB,WAAa;AAAA,EACb,eAAiB;AAAA,EACjB,iBAAmB;AAAA,EACnB,cAAgB;AAAA,EAChB,kBAAoB;AAAA,EACpB,oBAAsB;AAAA,EACtB,QAAU;AAAA,EACV,YAAc;AAAA,EACd,cAAgB;AAAA,EAChB,QAAU;AAAA,EACV,YAAc;AAAA,EACd,cAAgB;AAAA,EAChB,OAAS;AAAA,EACT,WAAa;AAAA,EACb,aAAe;AAAA,EACf,WAAa;AAAA,EACb,eAAiB;AAAA,EACjB,iBAAmB;AAAA,EACnB,aAAe;AAAA,EACf,iBAAmB;AAAA,EACnB,mBAAqB;AAAA,EACrB,gBAAkB;AAAA,EAClB,KAAO;AAAA,EACP,WAAa;AAAA,EACb,aAAe;AAAA,EACf,WAAa;AAAA,EACb,gBAAkB;AAAA,EAClB,kBAAoB;AAAA,EACpB,OAAS;AAAA,EACT,WAAa;AAAA,EACb,aAAe;AAAA,EACf,OAAS;AAAA,EACT,qBAAuB;AAAA,EACvB,yBAA2B;AAAA,EAC3B,2BAA6B;AAAA,EAC7B,QAAU;AAAA,EACV,UAAY;AAAA,EACZ,oBAAsB;AAAA,EACtB,iBAAmB;AAAA,EACnB,mBAAqB;AAAA,EACrB,qBAAuB;AAAA,EACvB,sBAAwB;AAAA,EACxB,kBAAoB;AAAA,EACpB,eAAiB;AAAA,EACjB,iBAAmB;AAAA,EACnB,kBAAoB;AAAA,EACpB,eAAiB;AAAA,EACjB,iBAAmB;AAAA,EACnB,iBAAmB;AAAA,EACnB,gBAAkB;AAAA,EAClB,gBAAkB;AAAA,EAClB,oBAAsB;AAAA,EACtB,kBAAoB;AAAA,EACpB,qBAAuB;AAAA,EACvB,OAAS;AAAA,EACT,OAAS;AAAA,EACT,WAAa;AAAA,EACb,UAAY;AAAA,EACZ,WAAa;AAAA,EACb,eAAiB;AAAA,EACjB,iBAAmB;AAAA,EACnB,cAAgB;AAAA,EAChB,kBAAoB;AAAA,EACpB,oBAAsB;AAAA,EACtB,MAAQ;AAAA,EACR,UAAY;AAAA,EACZ,YAAc;AAAA,EACd,OAAS;AAAA,EACT,WAAa;AAAA,EACb,aAAe;AAAA,EACf,SAAW;AAAA,EACX,aAAe;AAAA,EACf,eAAiB;AAAA,EACjB,WAAa;AAAA,EACb,QAAU;AAAA,EACV,SAAW;AAAA,EACX,KAAO;AAAA,EACP,SAAW;AAAA,EACX,WAAa;AAAA,EACb,OAAS;AAAA,EACT,WAAa;AAAA,EACb,aAAe;AAAA,EACf,QAAU;AAAA,EACV,YAAc;AAAA,EACd,cAAgB;AAAA,EAChB,SAAW;AAAA,EACX,aAAe;AAAA,EACf,eAAiB;AAAA,EACjB,SAAW;AAAA,EACX,aAAe;AAAA,EACf,eAAiB;AAAA,EACjB,SAAW;AAAA,EACX,aAAe;AAAA,EACf,eAAiB;AAAA,EACjB,iBAAmB;AAAA,EACnB,cAAgB;AAAA,EAChB,gBAAkB;AAAA,EAClB,iBAAmB;AAAA,EACnB,cAAgB;AAAA,EAChB,gBAAkB;AAAA,EAClB,0BAA4B;AAAA,EAC5B,uBAAyB;AAAA,EACzB,yBAA2B;AAAA,EAC3B,gCAAkC;AAAA,EAClC,6BAA+B;AAAA,EAC/B,+BAAiC;AAAA,EACjC,6BAA+B;AAAA,EAC/B,0BAA4B;AAAA,EAC5B,4BAA8B;AAAA,EAC9B,QAAU;AAAA,EACV,SAAW;AAAA,EACX,aAAe;AAAA,EACf,eAAiB;AAAA,EACjB,eAAiB;AAAA,EACjB,QAAU;AAAA,EACV,aAAe;AAAA,EACf,0BAA4B;AAAA,EAC5B,SAAW;AAAA,EACX,aAAe;AAAA,EACf,eAAiB;AAAA,EACjB,cAAgB;AAAA,EAChB,WAAa;AAAA,EACb,aAAe;AAAA,EACf,UAAY;AAAA,EACZ,cAAgB;AAAA,EAChB,gBAAkB;AAAA,EAClB,gBAAkB;AAAA,EAClB,cAAgB;AAAA,EAChB,OAAS;AAAA,EACT,aAAe;AAAA,EACf,SAAW;AAAA,EACX,aAAe;AAAA,EACf,eAAiB;AAAA,EACjB,QAAU;AAAA,EACV,aAAe;AAAA,EACf,eAAiB;AAAA,EACjB,SAAW;AAAA,EACX,YAAc;AAAA,EACd,cAAgB;AAAA,EAChB,SAAW;AAAA,EACX,cAAgB;AAAA,EAChB,gBAAkB;AAAA,EAClB,sBAAwB;AAAA,EACxB,mBAAqB;AAAA,EACrB,gBAAkB;AAAA,EAClB,qBAAuB;AAAA,EACvB,kBAAoB;AAAA,EACpB,gBAAkB;AAAA,EAClB,oBAAsB;AAAA,EACtB,sBAAwB;AAAA,EACxB,WAAa;AAAA,EACb,YAAc;AAAA,EACd,cAAgB;AAAA,EAChB,oBAAsB;AAAA,EACtB,qBAAuB;AAAA,EACvB,uBAAyB;AAAA,EACzB,cAAgB;AAAA,EAChB,kBAAoB;AAAA,EACpB,oBAAsB;AAAA,EACtB,WAAa;AAAA,EACb,eAAiB;AAAA,EACjB,iBAAmB;AAAA,EACnB,YAAc;AAAA,EACd,wBAA0B;AAAA,EAC1B,0BAA4B;AAAA,EAC5B,iBAAmB;AAAA,EACnB,sBAAwB;AAAA,EACxB,wBAA0B;AAAA,EAC1B,iBAAmB;AAAA,EACnB,cAAgB;AAAA,EAChB,gBAAkB;AAAA,EAClB,gBAAkB;AAAA,EAClB,oBAAsB;AAAA,EACtB,sBAAwB;AAAA,EACxB,MAAQ;AAAA,EACR,cAAgB;AAAA,EAChB,sBAAwB;AAAA,EACxB,yBAA2B;AAAA,EAC3B,QAAU;AAAA,EACV,uBAAyB;AAAA,EACzB,YAAc;AAAA,EACd,sBAAwB;AAAA,EACxB,oBAAsB;AAAA,EACtB,wBAA0B;AAAA,EAC1B,mBAAqB;AAAA,EACrB,6BAA+B;AAAA,EAC/B,2BAA6B;AAAA,EAC7B,+BAAiC;AAAA,EACjC,QAAU;AAAA,EACV,sBAAwB;AAAA,EACxB,uBAAyB;AAAA,EACzB,2BAA6B;AAAA,EAC7B,0BAA4B;AAAA,EAC5B,4BAA8B;AAAA,EAC9B,oBAAsB;AAAA,EACtB,qBAAuB;AAAA,EACvB,yBAA2B;AAAA,EAC3B,wBAA0B;AAAA,EAC1B,0BAA4B;AAAA,EAC5B,wBAA0B;AAAA,EAC1B,yBAA2B;AAAA,EAC3B,6BAA+B;AAAA,EAC/B,4BAA8B;AAAA,EAC9B,8BAAgC;AAAA,EAChC,gBAAkB;AAAA,EAClB,oBAAsB;AAAA,EACtB,iBAAmB;AAAA,EACnB,qBAAuB;AAAA,EACvB,sBAAwB;AAAA,EACxB,kBAAoB;AAAA,EACpB,sBAAwB;AAAA,EACxB,mBAAqB;AAAA,EACrB,uBAAyB;AAAA,EACzB,wBAA0B;AAAA,EAC1B,eAAiB;AAAA,EACjB,oBAAsB;AAAA,EACtB,qBAAuB;AAAA,EACvB,gBAAkB;AAAA,EAClB,YAAc;AAAA,EACd,aAAe;AAAA,EACf,QAAU;AAAA,EACV,SAAW;AAAA,EACX,WAAa;AAAA,EACb,KAAO;AAAA,EACP,MAAQ;AAAA,EACR,WAAa;AAAA,EACb,aAAe;AAAA,EACf,QAAU;AAAA,EACV,MAAQ;AAAA,EACR,UAAY;AAAA,EACZ,SAAW;AAAA,EACX,KAAO;AAAA,EACP,MAAQ;AAAA,EACR,WAAa;AAAA,EACb,MAAQ;AAAA,EACR,OAAS;AAAA,EACT,QAAU;AAAA,EACV,SAAW;AAAA,EACX,OAAS;AAAA,EACT,WAAa;AAAA,EACb,SAAW;AAAA,EACX,OAAS;AAAA,EACT,MAAQ;AAAA,EACR,OAAS;AAAA,EACT,KAAO;AAAA,EACP,IAAM;AAAA,EACN,eAAiB;AAAA,EACjB,MAAQ;AAAA,EACR,KAAO;AAAA,EACP,MAAQ;AAAA,EACR,MAAQ;AAAA,EACR,UAAY;AAAA,EACZ,KAAO;AAAA,EACP,OAAS;AAAA,EACT,MAAQ;AAAA,EACR,iBAAmB;AAAA,EACnB,OAAS;AAAA,EACT,OAAS;AAAA,EACT,SAAW;AAAA,EACX,UAAY;AAAA,EACZ,SAAW;AAAA,EACX,YAAc;AAAA,EACd,cAAgB;AAAA,EAChB,OAAS;AAAA,EACT,QAAU;AAAA,EACV,KAAO;AAAA,EACP,SAAW;AAAA,EACX,QAAU;AAAA,EACV,SAAW;AAAA,EACX,UAAY;AAAA,EACZ,QAAU;AAAA,EACV,UAAY;AAAA,EACZ,KAAO;AAAA,EACP,MAAQ;AAAA,EACR,YAAc;AAAA,EACd,OAAS;AAAA,EACT,YAAc;AAAA,EACd,OAAS;AAAA,EACT,OAAS;AAAA,EACT,OAAS;AAAA,EACT,UAAY;AAAA,EACZ,QAAU;AAAA,EACV,MAAQ;AAAA,EACR,YAAc;AAAA,EACd,QAAU;AAAA,EACV,SAAW;AAAA,EACX,SAAW;AAAA,EACX,gBAAkB;AAAA,EAClB,YAAc;AAAA,EACd,eAAiB;AAAA,EACjB,MAAQ;AAAA,EACR,SAAW;AAAA,EACX,MAAQ;AAAA,EACR,OAAS;AAAA,EACT,MAAQ;AAAA,EACR,MAAQ;AAAA,EACR,KAAO;AAAA,EACP,MAAQ;AAAA,EACR,SAAW;AAAA,EACX,UAAY;AAAA,EACZ,SAAW;AAAA,EACX,QAAU;AAAA,EACV,MAAQ;AAAA,EACR,WAAa;AAAA,EACb,QAAU;AAAA,EACV,QAAU;AAAA,EACV,OAAS;AAAA,EACT,aAAe;AAAA,EACf,QAAU;AAAA,EACV,UAAY;AAAA,EACZ,SAAS;AAAA,EACT,OAAS;AAAA,EACT,QAAU;AAAA,EACV,SAAW;AAAA,EACX,SAAW;AAAA,EACX,MAAQ;AAAA,EACR,MAAQ;AAAA,EACR,eAAiB;AAAA,EACjB,UAAY;AAAA,EACZ,OAAS;AAAA,EACT,SAAW;AAAA,EACX,OAAS;AAAA,EACT,OAAS;AAAA,EACT,WAAa;AAAA,EACb,KAAO;AAAA,EACP,KAAO;AAAA,EACP,KAAO;AAAA,EACP,UAAY;AAAA,EACZ,QAAU;AAAA,EACV,aAAe;AAAA,EACf,SAAW;AAAA,EACX,WAAa;AAAA,EACb,QAAU;AAAA,EACV,YAAc;AAAA,EACd,UAAY;AAAA,EACZ,UAAY;AAAA,EACZ,KAAO;AAAA,EACP,MAAQ;AAAA,EACR,SAAW;AAAA,EACX,SAAW;AAAA,EACX,gBAAkB;AAAA,EAClB,cAAgB;AAAA,EAChB,SAAW;AAAA,EACX,MAAQ;AAAA,EACR,eAAiB;AAAA,EACjB,UAAY;AAAA,EACZ,WAAa;AAAA,EACb,SAAW;AAAA,EACX,OAAS;AAAA,EACT,UAAY;AAAA,EACZ,cAAgB;AAAA,EAChB,gBAAkB;AAAA,EAClB,gBAAkB;AAAA,EAClB,WAAa;AAAA,EACb,QAAU;AAAA,EACV,aAAe;AAAA,EACf,MAAQ;AAAA,EACR,UAAY;AAAA,EACZ,kBAAoB;AAAA,EACpB,YAAc;AAAA,EACd,aAAe;AAAA,EACf,QAAU;AAAA,EACV,QAAU;AAAA,EACV,OAAS;AAAA,EACT,YAAc;AAAA,EACd,WAAa;AAAA,EACb,QAAU;AAAA,EACV,UAAY;AAAA,EACZ,OAAS;AAAA,EACT,QAAU;AAAA,EACV,WAAa;AAAA,EACb,OAAS;AAAA,EACT,OAAS;AAAA,EACT,aAAe;AAAA,EACf,MAAQ;AAAA,EACR,OAAS;AAAA,EACT,UAAY;AAAA,EACZ,YAAc;AAAA,EACd,aAAe;AAAA,EACf,YAAc;AAAA,EACd,QAAU;AAAA,EACV,OAAS;AAAA,EACT,SAAW;AAAA,EACX,SAAW;AAAA,EACX,UAAY;AAAA,EACZ,QAAU;AAAA,EACV,QAAU;AAAA,EACV,MAAQ;AAAA,EACR,YAAc;AAAA,EACd,aAAe;AAAA,EACf,UAAY;AAAA,EACZ,aAAe;AAAA,EACf,UAAY;AAAA,EACZ,QAAU;AAAA,EACV,OAAS;AAAA,EACT,UAAY;AAAA,EACZ,SAAW;AAAA,EACX,UAAY;AAAA,EACZ,OAAS;AAAA,EACT,WAAa;AAAA,EACb,gBAAkB;AAAA,EAClB,WAAa;AAAA,EACb,SAAW;AAAA,EACX,OAAS;AAAA,EACT,UAAY;AAAA,EACZ,QAAU;AAAA,EACV,QAAU;AAAA,EACV,cAAgB;AAAA,EAChB,aAAe;AAAA,EACf,aAAe;AAAA,EACf,OAAS;AAAA,EACT,WAAa;AAAA,EACb,OAAS;AAAA,EACT,OAAS;AAAA,EACT,QAAU;AAAA,EACV,UAAY;AAAA,EACZ,MAAQ;AAAA,EACR,SAAW;AAAA,EACX,QAAU;AAAA,EACV,mBAAqB;AAAA,EACrB,SAAW;AAAA,EACX,KAAO;AAAA,EACP,WAAa;AAAA,EACb,qBAAuB;AAAA,EACvB,MAAQ;AAAA,EACR,QAAU;AAAA,EACV,iBAAmB;AAAA,EACnB,aAAe;AAAA,EACf,SAAW;AAAA,EACX,QAAU;AAAA,EACV,MAAQ;AAAA,EACR,aAAe;AAAA,EACf,OAAS;AAAA,EACT,cAAgB;AAAA,EAChB,WAAa;AAAA,EACb,MAAQ;AAAA,EACR,OAAS;AAAA,EACT,OAAS;AAAA,EACT,WAAa;AAAA,EACb,cAAgB;AAAA,EAChB,MAAQ;AAAA,EACR,OAAS;AAAA,EACT,cAAgB;AAAA,EAChB,WAAa;AAAA,EACb,WAAa;AAAA,EACb,OAAS;AAAA,EACT,UAAY;AAAA,EACZ,gBAAkB;AAAA,EAClB,aAAe;AAAA,EACf,MAAQ;AAAA,EACR,SAAW;AAAA,EACX,QAAU;AAAA,EACV,OAAS;AAAA,EACT,QAAU;AAAA,EACV,UAAY;AAAA,EACZ,YAAc;AAAA,EACd,WAAa;AAAA,EACb,UAAY;AAAA,EACZ,QAAU;AAAA,EACV,UAAY;AAAA,EACZ,MAAQ;AAAA,EACR,SAAW;AAAA,EACX,KAAO;AAAA,EACP,eAAiB;AAAA,EACjB,OAAS;AAAA,EACT,UAAY;AAAA,EACZ,SAAW;AAAA,EACX,WAAa;AAAA,EACb,aAAe;AAAA,EACf,YAAc;AAAA,EACd,QAAU;AAAA,EACV,QAAU;AAAA,EACV,KAAO;AAAA,EACP,MAAQ;AAAA,EACR,WAAa;AAAA,EACb,YAAc;AAAA,EACd,UAAY;AAAA,EACZ,gBAAkB;AAAA,EAClB,MAAQ;AAAA,EACR,OAAS;AAAA,EACT,kBAAoB;AAAA,EACpB,eAAiB;AAAA,EACjB,gBAAkB;AAAA,EAClB,YAAc;AAAA,EACd,cAAgB;AAAA,EAChB,MAAQ;AAAA,EACR,UAAY;AAAA,EACZ,YAAc;AAAA,EACd,oBAAsB;AAAA,EACtB,gBAAkB;AAAA,EAClB,OAAS;AAAA,EACT,OAAS;AAAA,EACT,OAAS;AAAA,EACT,SAAW;AAAA,EACX,cAAgB;AAAA,EAChB,gBAAkB;AAAA,EAClB,YAAc;AAAA,EACd,sBAAwB;AAAA,EACxB,WAAa;AAAA,EACb,OAAS;AAAA,EACT,SAAW;AAAA,EACX,eAAiB;AAAA,EACjB,UAAY;AAAA,EACZ,SAAW;AAAA,EACX,YAAc;AAAA,EACd,SAAW;AAAA,EACX,gBAAkB;AAAA,EAClB,QAAU;AAAA,EACV,eAAiB;AAAA,EACjB,eAAiB;AAAA,EACjB,SAAW;AAAA,EACX,oBAAsB;AAAA,EACtB,uBAAyB;AAAA,EACzB,QAAU;AAAA,EACV,MAAQ;AAAA,EACR,MAAQ;AAAA,EACR,KAAO;AAAA,EACP,QAAU;AAAA,EACV,gBAAkB;AAAA,EAClB,OAAS;AAAA,EACT,mBAAqB;AAAA,EACrB,QAAU;AAAA,EACV,aAAe;AAAA,EACf,sBAAwB;AAAA,EACxB,UAAY;AAAA,EACZ,MAAQ;AAAA,EACR,OAAS;AAAA,EACT,YAAc;AAAA,EACd,mBAAqB;AAAA,EACrB,QAAU;AAAA,EACV,kBAAoB;AAAA,EACpB,SAAW;AAAA,EACX,iBAAmB;AAAA,EACnB,iBAAmB;AAAA,EACnB,SAAW;AAAA,EACX,aAAe;AAAA,EACf,mBAAqB;AAAA,EACrB,QAAU;AAAA,EACV,QAAU;AAAA,EACV,cAAgB;AAAA,EAChB,WAAa;AAAA,EACb,eAAiB;AAAA,EACjB,OAAS;AAAA,EACT,UAAY;AAAA,EACZ,MAAQ;AAAA,EACR,OAAS;AAAA,EACT,kBAAoB;AAAA,EACpB,WAAa;AAAA,EACb,wBAA0B;AAAA,EAC1B,SAAW;AAAA,EACX,aAAe;AAAA,EACf,cAAgB;AAAA,EAChB,iBAAmB;AAAA,EACnB,YAAc;AAAA,EACd,gBAAkB;AAAA,EAClB,cAAgB;AAAA,EAChB,gBAAkB;AAAA,EAClB,QAAU;AAAA,EACV,aAAe;AAAA,EACf,kBAAoB;AAAA,EACpB,aAAe;AAAA,EACf,kBAAoB;AAAA,EACpB,mBAAqB;AAAA,EACrB,QAAU;AAAA,EACV,OAAS;AAAA,EACT,YAAc;AAAA,EACd,SAAW;AAAA,EACX,MAAQ;AAAA,EACR,UAAY;AAAA,EACZ,kBAAoB;AAAA,EACpB,OAAS;AAAA,EACT,KAAO;AAAA,EACP,cAAgB;AAAA,EAChB,YAAc;AAAA,EACd,SAAW;AAAA,EACX,WAAa;AAAA,EACb,aAAe;AAAA,EACf,YAAc;AAAA,EACd,qBAAuB;AAAA,EACvB,MAAQ;AAAA,EACR,eAAiB;AAAA,EACjB,KAAO;AAAA,EACP,SAAW;AAAA,EACX,qBAAuB;AAAA,EACvB,UAAY;AAAA,EACZ,cAAgB;AAAA,EAChB,OAAS;AAAA,EACT,mBAAqB;AAAA,EACrB,SAAW;AAAA,EACX,YAAc;AAAA,EACd,YAAc;AAAA,EACd,eAAiB;AAAA,EACjB,mBAAqB;AAAA,EACrB,sBAAwB;AAAA,EACxB,eAAiB;AAAA,EACjB,MAAQ;AAAA,EACR,cAAgB;AAAA,EAChB,YAAc;AAAA,EACd,cAAgB;AAAA,EAChB,SAAW;AAAA,EACX,UAAY;AAAA,EACZ,eAAiB;AAAA,EACjB,UAAY;AAAA,EACZ,UAAY;AAAA,EACZ,gBAAkB;AAAA,EAClB,eAAiB;AAAA,EACjB,wBAA0B;AAAA,EAC1B,WAAa;AAAA,EACb,cAAgB;AAAA,EAChB,QAAU;AAAA,EACV,MAAQ;AAAA,EACR,UAAY;AAAA,EACZ,OAAS;AAAA,EACT,WAAa;AAAA,EACb,gBAAkB;AAAA,EAClB,OAAS;AAAA,EACT,YAAc;AAAA,EACd,MAAQ;AAAA,EACR,UAAY;AAAA,EACZ,gBAAkB;AAAA,EAClB,kBAAoB;AAAA,EACpB,gBAAkB;AAAA,EAClB,WAAa;AAAA,EACb,MAAQ;AAAA,EACR,YAAc;AAAA,EACd,oBAAsB;AAAA,EACtB,mBAAqB;AAAA,EACrB,gBAAkB;AAAA,EAClB,sBAAwB;AAAA,EACxB,QAAU;AAAA,EACV,eAAiB;AAAA,EACjB,cAAgB;AAAA,EAChB,SAAW;AAAA,EACX,WAAa;AAAA,EACb,wBAA0B;AAAA,EAC1B,OAAS;AAAA,EACT,aAAe;AAAA,EACf,WAAa;AAAA,EACb,aAAe;AAAA,EACf,mBAAqB;AAAA,EACrB,SAAW;AAAA,EACX,WAAa;AAAA,EACb,QAAU;AAAA,EACV,UAAY;AAAA,EACZ,QAAU;AAAA,EACV,UAAY;AAAA,EACZ,QAAU;AAAA,EACV,UAAY;AAAA,EACZ,QAAU;AAAA,EACV,UAAY;AAAA,EACZ,QAAU;AAAA,EACV,UAAY;AAAA,EACZ,QAAU;AAAA,EACV,UAAY;AAAA,EACZ,QAAU;AAAA,EACV,UAAY;AAAA,EACZ,QAAU;AAAA,EACV,UAAY;AAAA,EACZ,QAAU;AAAA,EACV,UAAY;AAAA,EACZ,SAAW;AAAA,EACX,WAAa;AAAA,EACb,SAAW;AAAA,EACX,WAAa;AAAA,EACb,UAAY;AAAA,EACZ,sBAAwB;AAAA,EACxB,oBAAsB;AAAA,EACtB,MAAQ;AAAA,EACR,qBAAuB;AAAA,EACvB,WAAa;AAAA,EACb,qBAAuB;AAAA,EACvB,mBAAqB;AAAA,EACrB,sBAAwB;AAAA,EACxB,eAAiB;AAAA,EACjB,oBAAsB;AAAA,EACtB,8BAAgC;AAAA,EAChC,6BAA+B;AAAA,EAC/B,aAAe;AAAA,EACf,OAAS;AAAA,EACT,qBAAuB;AAAA,EACvB,eAAiB;AAAA,EACjB,eAAiB;AAAA,EACjB,MAAQ;AAAA,EACR,OAAS;AAAA,EACT,OAAS;AAAA,EACT,WAAa;AAAA,EACb,OAAS;AAAA,EACT,cAAgB;AAAA,EAChB,+BAAiC;AAAA,EACjC,wBAA0B;AAAA,EAC1B,wBAA0B;AAAA,EAC1B,uBAAyB;AAAA,EACzB,iBAAmB;AAAA,EACnB,iBAAmB;AAAA,EACnB,sBAAwB;AAAA,EACxB,SAAW;AAAA,EACX,KAAO;AAAA,EACP,WAAa;AAAA,EACb,SAAW;AAAA,EACX,SAAW;AAAA,EACX,iBAAmB;AAAA,EACnB,eAAiB;AAAA,EACjB,UAAY;AAAA,EACZ,mBAAqB;AAAA,EACrB,KAAO;AAAA,EACP,WAAa;AAAA,EACb,mBAAqB;AAAA,EACrB,SAAW;AAAA,EACX,OAAS;AAAA,EACT,MAAQ;AAAA,EACR,SAAW;AAAA,EACX,OAAS;AAAA,EACT,gBAAkB;AAAA,EAClB,gBAAkB;AAAA,EAClB,WAAa;AAAA,EACb,UAAY;AAAA,EACZ,aAAe;AAAA,EACf,UAAY;AAAA,EACZ,SAAW;AAAA,EACX,MAAQ;AAAA,EACR,eAAiB;AAAA,EACjB,eAAiB;AAAA,EACjB,QAAU;AAAA,EACV,OAAS;AAAA,EACT,OAAS;AAAA,EACT,YAAc;AAAA,EACd,YAAc;AAAA,EACd,cAAgB;AAAA,EAChB,QAAU;AAAA,EACV,MAAQ;AAAA,EACR,iBAAmB;AAAA,EACnB,SAAW;AAAA,EACX,QAAU;AAAA,EACV,gBAAkB;AAAA,EAClB,QAAU;AAAA,EACV,cAAgB;AAAA,EAChB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,QAAU;AAAA,EACV,UAAY;AAAA,EACZ,UAAY;AAAA,EACZ,YAAc;AAAA,EACd,YAAc;AAAA,EACd,UAAY;AAAA,EACZ,gBAAkB;AAAA,EAClB,QAAU;AAAA,EACV,aAAe;AAAA,EACf,SAAW;AAAA,EACX,cAAgB;AAAA,EAChB,cAAgB;AAAA,EAChB,YAAc;AAAA,EACd,UAAY;AAAA,EACZ,WAAa;AAAA,EACb,WAAa;AAAA,EACb,cAAgB;AAAA,EAChB,sBAAwB;AAAA,EACxB,UAAY;AAAA,EACZ,MAAQ;AAAA,EACR,WAAa;AAAA,EACb,uBAAyB;AAAA,EACzB,aAAe;AAAA,EACf,yBAA2B;AAAA,EAC3B,KAAO;AAAA,EACP,MAAQ;AAAA,EACR,eAAiB;AAAA,EACjB,MAAQ;AAAA,EACR,OAAS;AAAA,EACT,MAAQ;AAAA,EACR,SAAS;AAAA,EACT,cAAgB;AAAA,EAChB,YAAc;AAAA,EACd,cAAgB;AAAA,EAChB,YAAc;AAAA,EACd,UAAY;AAAA,EACZ,cAAgB;AAAA,EAChB,UAAY;AAAA,EACZ,QAAU;AAAA,EACV,YAAc;AAAA,EACd,QAAU;AAAA,EACV,eAAiB;AAAA,EACjB,QAAU;AAAA,EACV,QAAU;AAAA,EACV,UAAY;AAAA,EACZ,OAAS;AAAA,EACT,YAAc;AAAA,EACd,aAAe;AAAA,EACf,SAAW;AAAA,EACX,sBAAwB;AAAA,EACxB,iBAAmB;AAAA,EACnB,gBAAkB;AAAA,EAClB,KAAO;AAAA,EACP,QAAU;AAAA,EACV,eAAiB;AAAA,EACjB,MAAQ;AAAA,EACR,MAAQ;AAAA,EACR,YAAc;AAAA,EACd,iBAAmB;AAAA,EACnB,SAAW;AAAA,EACX,UAAY;AAAA,EACZ,aAAe;AAAA,EACf,SAAW;AAAA,EACX,OAAS;AAAA,EACT,QAAU;AAAA,EACV,OAAS;AAAA,EACT,OAAS;AAAA,EACT,QAAU;AAAA,EACV,MAAQ;AAAA,EACR,OAAS;AAAA,EACT,OAAS;AAAA,EACT,QAAU;AAAA,EACV,MAAQ;AAAA,EACR,oBAAsB;AAAA,EACtB,YAAc;AAAA,EACd,QAAU;AAAA,EACV,QAAU;AAAA,EACV,gBAAkB;AAAA,EAClB,OAAS;AAAA,EACT,SAAW;AAAA,EACX,OAAS;AAAA,EACT,UAAY;AAAA,EACZ,gBAAkB;AAAA,EAClB,cAAgB;AAAA,EAChB,WAAa;AAAA,EACb,MAAQ;AAAA,EACR,eAAiB;AAAA,EACjB,aAAe;AAAA,EACf,WAAa;AAAA,EACb,WAAa;AAAA,EACb,QAAU;AAAA,EACV,cAAgB;AAAA,EAChB,MAAQ;AAAA,EACR,OAAS;AAAA,EACT,YAAc;AAAA,EACd,QAAU;AAAA,EACV,cAAgB;AAAA,EAChB,YAAc;AAAA,EACd,iBAAmB;AAAA,EACnB,sBAAwB;AAAA,EACxB,cAAgB;AAAA,EAChB,UAAY;AAAA,EACZ,MAAQ;AAAA,EACR,KAAO;AAAA,EACP,MAAQ;AAAA,EACR,SAAW;AAAA,EACX,OAAS;AAAA,EACT,YAAc;AAAA,EACd,aAAe;AAAA,EACf,MAAQ;AAAA,EACR,aAAe;AAAA,EACf,MAAQ;AAAA,EACR,SAAW;AAAA,EACX,eAAiB;AAAA,EACjB,cAAgB;AAAA,EAChB,OAAS;AAAA,EACT,mBAAqB;AAAA,EACrB,cAAgB;AAAA,EAChB,eAAiB;AAAA,EACjB,YAAc;AAAA,EACd,YAAc;AAAA,EACd,OAAS;AAAA,EACT,WAAa;AAAA,EACb,WAAa;AAAA,EACb,QAAU;AAAA,EACV,kBAAoB;AAAA,EACpB,SAAW;AAAA,EACX,QAAU;AAAA,EACV,OAAS;AAAA,EACT,MAAQ;AAAA,EACR,WAAa;AAAA,EACb,QAAU;AAAA,EACV,SAAW;AAAA,EACX,OAAS;AAAA,EACT,WAAa;AAAA,EACb,oBAAsB;AAAA,EACtB,OAAS;AAAA,EACT,KAAO;AAAA,EACP,SAAW;AAAA,EACX,eAAiB;AAAA,EACjB,UAAY;AAAA,EACZ,kBAAoB;AAAA,EACpB,SAAW;AAAA,EACX,UAAY;AAAA,EACZ,gBAAkB;AAAA,EAClB,WAAa;AAAA,EACb,UAAY;AAAA,EACZ,aAAe;AAAA,EACf,IAAM;AAAA,EACN,KAAO;AAAA,EACP,QAAU;AAAA,EACV,cAAgB;AAAA,EAChB,YAAc;AAAA,EACd,gBAAkB;AAAA,EAClB,SAAW;AAAA,EACX,IAAM;AAAA,EACN,QAAU;AAAA,EACV,cAAgB;AAAA,EAChB,cAAgB;AAAA,EAChB,KAAO;AAAA,EACP,KAAO;AAAA,EACP,WAAa;AAAA,EACb,QAAU;AAAA,EACV,MAAQ;AAAA,EACR,YAAc;AAAA,EACd,iBAAmB;AAAA,EACnB,SAAW;AAAA,EACX,WAAa;AAAA,EACb,gCAAkC;AAAA,EAClC,aAAe;AAAA,EACf,MAAQ;AAAA,EACR,WAAa;AAAA,EACb,YAAc;AAAA,EACd,WAAa;AAAA,EACb,aAAe;AAAA,EACf,OAAS;AAAA,EACT,UAAY;AAAA,EACZ,QAAU;AAAA,EACV,gBAAkB;AAAA,EAClB,QAAU;AAAA,EACV,gBAAkB;AAAA,EAClB,WAAa;AAAA,EACb,gBAAkB;AAAA,EAClB,eAAiB;AAAA,EACjB,UAAY;AAAA,EACZ,OAAS;AAAA,EACT,UAAY;AAAA,EACZ,MAAQ;AAAA,EACR,KAAO;AAAA,EACP,QAAU;AAAA,EACV,MAAQ;AAAA,EACR,OAAS;AAAA,EACT,kBAAoB;AAAA,EACpB,aAAe;AAAA,EACf,SAAW;AAAA,EACX,OAAS;AAAA,EACT,UAAY;AAAA,EACZ,OAAS;AAAA,EACT,UAAU;AAAA,EACV,mBAAqB;AAAA,EACrB,qBAAuB;AAAA,EACvB,aAAe;AAAA,EACf,YAAc;AAAA,EACd,SAAW;AAAA,EACX,SAAW;AAAA,EACX,gBAAkB;AAAA,EAClB,mBAAqB;AAAA,EACrB,sBAAwB;AAAA,EACxB,SAAW;AAAA,EACX,YAAc;AAAA,EACd,SAAW;AAAA,EACX,WAAa;AAAA,EACb,cAAgB;AAAA,EAChB,KAAO;AAAA,EACP,YAAc;AAAA,EACd,QAAU;AAAA,EACV,MAAQ;AAAA,EACR,QAAU;AAAA,EACV,WAAa;AAAA,EACb,aAAe;AAAA,EACf,kBAAoB;AAAA,EACpB,qBAAuB;AAAA,EACvB,MAAQ;AAAA,EACR,UAAY;AAAA,EACZ,gBAAkB;AAAA,EAClB,iBAAmB;AAAA,EACnB,YAAc;AAAA,EACd,0BAA4B;AAAA,EAC5B,4BAA8B;AAAA,EAC9B,WAAa;AAAA,EACb,WAAa;AAAA,EACb,SAAW;AAAA,EACX,eAAiB;AAAA,EACjB,WAAa;AAAA,EACb,YAAc;AAAA,EACd,gBAAkB;AAAA,EAClB,kBAAoB;AAAA,EACpB,UAAY;AAAA,EACZ,eAAiB;AAAA,EACjB,cAAgB;AAAA,EAChB,aAAe;AAAA,EACf,MAAQ;AAAA,EACR,QAAU;AAAA,EACV,mBAAqB;AAAA,EACrB,sBAAwB;AAAA,EACxB,KAAO;AAAA,EACP,SAAW;AAAA,EACX,QAAU;AAAA,EACV,KAAO;AAAA,EACP,MAAQ;AAAA,EACR,iBAAmB;AAAA,EACnB,mBAAqB;AAAA,EACrB,QAAU;AAAA,EACV,gBAAkB;AAAA,EAClB,KAAO;AAAA,EACP,WAAa;AAAA,EACb,eAAiB;AAAA,EACjB,QAAU;AAAA,EACV,eAAiB;AAAA,EACjB,QAAU;AAAA,EACV,aAAe;AAAA,EACf,cAAgB;AAAA,EAChB,MAAQ;AAAA,EACR,OAAS;AAAA,EACT,eAAiB;AAAA,EACjB,cAAgB;AAAA,EAChB,MAAQ;AAAA,EACR,QAAU;AAAA,EACV,MAAQ;AAAA,EACR,SAAW;AAAA,EACX,QAAU;AAAA,EACV,QAAU;AAAA,EACV,SAAW;AAAA,EACX,WAAa;AAAA,EACb,YAAc;AAAA,EACd,KAAO;AAAA,EACP,YAAc;AAAA,EACd,WAAa;AAAA,EACb,WAAa;AAAA,EACb,SAAW;AAAA,EACX,eAAiB;AAAA,EACjB,MAAQ;AAAA,EACR,kBAAoB;AAAA,EACpB,aAAe;AAAA,EACf,MAAQ;AAAA,EACR,UAAY;AAAA,EACZ,QAAU;AAAA,EACV,QAAU;AAAA,EACV,KAAO;AAAA,EACP,gBAAkB;AAAA,EAClB,OAAS;AAAA,EACT,QAAU;AAAA,EACV,SAAW;AAAA,EACX,QAAU;AAAA,EACV,SAAW;AAAA,EACX,YAAc;AAAA,EACd,OAAS;AAAA,EACT,eAAiB;AAAA,EACjB,YAAc;AAAA,EACd,OAAS;AAAA,EACT,QAAU;AAAA,EACV,eAAiB;AAAA,EACjB,QAAU;AAAA,EACV,MAAQ;AAAA,EACR,YAAc;AAAA,EACd,QAAU;AAAA,EACV,mBAAqB;AAAA,EACrB,eAAiB;AAAA,EACjB,SAAW;AAAA,EACX,QAAU;AAAA,EACV,WAAa;AAAA,EACb,aAAe;AAAA,EACf,OAAS;AAAA,EACT,SAAW;AAAA,EACX,KAAO;AAAA,EACP,yBAA2B;AAAA,EAC3B,eAAiB;AAAA,EACjB,YAAc;AAAA,EACd,MAAQ;AAAA,EACR,QAAU;AAAA,EACV,UAAY;AAAA,EACZ,aAAe;AAAA,EACf,IAAM;AAAA,EACN,kBAAoB;AAAA,EACpB,SAAW;AAAA,EACX,eAAiB;AAAA,EACjB,cAAgB;AAAA,EAChB,SAAW;AAAA,EACX,mBAAqB;AAAA,EACrB,UAAY;AAAA,EACZ,eAAiB;AAAA,EACjB,aAAe;AAAA,EACf,YAAc;AAAA,EACd,eAAiB;AAAA,EACjB,qBAAqB;AAAA,EACrB,gBAAkB;AAAA,EAClB,kBAAoB;AAAA,EACpB,UAAY;AAAA,EACZ,aAAe;AAAA,EACf,WAAa;AAAA,EACb,UAAY;AAAA,EACZ,mBAAqB;AAAA,EACrB,aAAe;AAAA,EACf,mBAAqB;AAAA,EACrB,YAAc;AAAA,EACd,kBAAoB;AAAA,EACpB,YAAc;AAAA,EACd,kBAAoB;AAAA,EACpB,eAAiB;AAAA,EACjB,kBAAoB;AAAA,EACpB,2BAA6B;AAAA,EAC7B,kBAAoB;AAAA,EACpB,kBAAoB;AAAA,EACpB,oBAAsB;AAAA,EACtB,kBAAoB;AAAA,EACpB,yBAA2B;AAAA,EAC3B,MAAQ;AAAA,EACR,KAAO;AAAA,EACP,IAAM;AAAA,EACN,MAAQ;AAAA,EACR,KAAO;AAAA,EACP,kBAAoB;AAAA,EACpB,aAAe;AAAA,EACf,IAAM;AAAA,EACN,eAAiB;AAAA,EACjB,iBAAmB;AAAA,EACnB,UAAY;AAAA,EACZ,aAAe;AAAA,EACf,gBAAkB;AAAA,EAClB,mBAAqB;AAAA,EACrB,cAAgB;AAAA,EAChB,SAAW;AAAA,EACX,kBAAoB;AAAA,EACpB,OAAS;AAAA,EACT,QAAU;AAAA,EACV,QAAU;AAAA,EACV,QAAU;AAAA,EACV,KAAO;AAAA,EACP,OAAS;AAAA,EACT,OAAS;AAAA,EACT,UAAY;AAAA,EACZ,aAAe;AAAA,EACf,WAAa;AAAA,EACb,UAAY;AAAA,EACZ,QAAU;AAAA,EACV,WAAa;AAAA,EACb,2BAA6B;AAAA,EAC7B,QAAU;AAAA,EACV,YAAc;AAAA,EACd,eAAiB;AAAA,EACjB,cAAgB;AAAA,EAChB,mBAAqB;AAAA,EACrB,sBAAwB;AAAA,EACxB,gBAAkB;AAAA,EAClB,QAAU;AAAA,EACV,uBAAyB;AAAA,EACzB,gBAAkB;AAAA,EAClB,iBAAmB;AAAA,EACnB,kBAAoB;AAAA,EACpB,mBAAqB;AAAA,EACrB,cAAgB;AAAA,EAChB,aAAe;AAAA,EACf,eAAiB;AAAA,EACjB,cAAgB;AAAA,EAChB,QAAU;AAAA,EACV,gBAAkB;AAAA,EAClB,iBAAmB;AAAA,EACnB,iBAAmB;AAAA,EACnB,gBAAkB;AAAA,EAClB,kBAAoB;AAAA,EACpB,aAAe;AAAA,EACf,WAAa;AAAA,EACb,oBAAsB;AAAA,EACtB,wBAA0B;AAAA,EAC1B,iBAAmB;AAAA,EACnB,kBAAoB;AAAA,EACpB,qBAAuB;AAAA,EACvB,UAAY;AAAA,EACZ,UAAY;AAAA,EACZ,aAAe;AAAA,EACf,UAAY;AAAA,EACZ,eAAiB;AAAA,EACjB,kBAAoB;AAAA,EACpB,aAAe;AAAA,EACf,wBAA0B;AAAA,EAC1B,WAAa;AAAA,EACb,mBAAqB;AAAA,EACrB,mBAAqB;AAAA,EACrB,gBAAkB;AAAA,EAClB,SAAW;AAAA,EACX,cAAgB;AAAA,EAChB,SAAW;AAAA,EACX,YAAc;AAAA,EACd,UAAY;AAAA,EACZ,GAAK;AAAA,EACL,kBAAoB;AAAA,EACpB,uBAAyB;AAAA,EACzB,kBAAoB;AAAA,EACpB,GAAK;AAAA,EACL,6BAA+B;AAAA,EAC/B,YAAc;AAAA,EACd,MAAQ;AAAA,EACR,uBAAyB;AAAA,EACzB,uBAAyB;AAAA,EACzB,0BAA4B;AAAA,EAC5B,SAAW;AAAA,EACX,WAAa;AAAA,EACb,YAAc;AAAA,EACd,IAAM;AAAA,EACN,MAAQ;AAAA,EACR,UAAY;AAAA,EACZ,MAAQ;AAAA,EACR,KAAO;AAAA,EACP,KAAO;AAAA,EACP,OAAS;AAAA,EACT,MAAQ;AAAA,EACR,MAAQ;AAAA,EACR,KAAO;AAAA,EACP,OAAS;AAAA,EACT,OAAS;AAAA,EACT,MAAQ;AAAA,EACR,YAAc;AAAA,EACd,cAAgB;AAAA,EAChB,MAAQ;AAAA,EACR,SAAW;AAAA,EACX,KAAO;AAAA,EACP,GAAK;AAAA,EACL,IAAM;AAAA,EACN,GAAK;AAAA,EACL,IAAM;AAAA,EACN,MAAQ;AAAA,EACR,MAAQ;AAAA,EACR,oBAAsB;AAAA,EACtB,IAAM;AAAA,EACN,GAAK;AAAA,EACL,KAAO;AAAA,EACP,IAAM;AAAA,EACN,IAAM;AAAA,EACN,IAAM;AAAA,EACN,SAAW;AAAA,EACX,KAAO;AAAA,EACP,IAAM;AAAA,EACN,IAAM;AAAA,EACN,MAAQ;AAAA,EACR,IAAM;AAAA,EACN,qBAAuB;AAAA,EACvB,QAAU;AAAA,EACV,iBAAmB;AAAA,EACnB,QAAU;AAAA,EACV,OAAS;AAAA,EACT,YAAc;AAAA,EACd,eAAiB;AAAA,EACjB,eAAiB;AAAA,EACjB,cAAgB;AAAA,EAChB,mBAAqB;AAAA,EACrB,eAAiB;AAAA,EACjB,cAAgB;AAAA,EAChB,cAAgB;AAAA,EAChB,cAAgB;AAAA,EAChB,YAAc;AAAA,EACd,eAAiB;AAAA,EACjB,eAAiB;AAAA,EACjB,cAAgB;AAAA,EAChB,aAAe;AAAA,EACf,eAAiB;AAAA,EACjB,cAAgB;AAAA,EAChB,oBAAsB;AAAA,EACtB,oBAAsB;AAAA,EACtB,qBAAuB;AAAA,EACvB,qBAAuB;AAAA,EACvB,2BAA6B;AAAA,EAC7B,2BAA6B;AAAA,EAC7B,oBAAsB;AAAA,EACtB,oBAAsB;AAAA,EACtB,sBAAwB;AAAA,EACxB,oBAAsB;AAAA,EACtB,sBAAwB;AAAA,EACxB,oBAAsB;AAAA,EACtB,oBAAsB;AAAA,EACtB,yBAA2B;AAAA,EAC3B,iCAAmC;AAAA,EACnC,cAAgB;AAAA,EAChB,qBAAuB;AAAA,EACvB,qBAAuB;AAAA,EACvB,gBAAkB;AAAA,EAClB,yBAA2B;AAAA,EAC3B,eAAiB;AAAA,EACjB,YAAc;AAAA,EACd,YAAc;AAAA,EACd,cAAgB;AAAA,EAChB,kBAAoB;AAAA,EACpB,aAAe;AAAA,EACf,kBAAoB;AAAA,EACpB,SAAW;AAAA,EACX,sBAAwB;AAAA,EACxB,aAAe;AAAA,EACf,iBAAmB;AAAA,EACnB,UAAY;AAAA,EACZ,SAAW;AAAA,EACX,SAAW;AAAA,EACX,QAAU;AAAA,EACV,YAAc;AAAA,EACd,WAAa;AAAA,EACb,gBAAkB;AAAA,EAClB,SAAW;AAAA,EACX,WAAa;AAAA,EACb,OAAS;AAAA,EACT,eAAiB;AAAA,EACjB,YAAc;AAAA,EACd,oBAAsB;AAAA,EACtB,UAAY;AAAA,EACZ,YAAc;AAAA,EACd,SAAW;AAAA,EACX,cAAgB;AAAA,EAChB,UAAY;AAAA,EACZ,SAAW;AAAA,EACX,SAAW;AAAA,EACX,OAAS;AAAA,EACT,eAAiB;AAAA,EACjB,SAAW;AAAA,EACX,QAAU;AAAA,EACV,SAAW;AAAA,EACX,uBAAyB;AAAA,EACzB,QAAU;AAAA,EACV,SAAW;AAAA,EACX,QAAU;AAAA,EACV,eAAiB;AAAA,EACjB,UAAY;AAAA,EACZ,SAAW;AAAA,EACX,QAAU;AAAA,EACV,QAAU;AAAA,EACV,eAAiB;AAAA,EACjB,gBAAkB;AAAA,EAClB,0BAA4B;AAAA,EAC5B,mBAAqB;AAAA,EACrB,aAAe;AAAA,EACf,cAAgB;AAAA,EAChB,cAAgB;AAAA,EAChB,OAAS;AAAA,EACT,UAAY;AAAA,EACZ,IAAM;AAAA,EACN,UAAY;AAAA,EACZ,mBAAqB;AAAA,EACrB,YAAc;AAAA,EACd,MAAQ;AAAA,EACR,YAAc;AAAA,EACd,SAAW;AAAA,EACX,kBAAoB;AAAA,EACpB,QAAU;AAAA,EACV,gBAAkB;AAAA,EAClB,IAAM;AAAA,EACN,cAAgB;AAAA,EAChB,UAAY;AAAA,EACZ,SAAW;AAAA,EACX,UAAY;AAAA,EACZ,oBAAsB;AAAA,EACtB,SAAW;AAAA,EACX,eAAiB;AAAA,EACjB,SAAW;AAAA,EACX,SAAW;AAAA,EACX,OAAS;AAAA,EACT,gBAAkB;AAAA,EAClB,SAAW;AAAA,EACX,IAAM;AAAA,EACN,UAAY;AAAA,EACZ,IAAM;AAAA,EACN,gBAAkB;AAAA,EAClB,SAAW;AAAA,EACX,MAAQ;AAAA,EACR,kBAAoB;AAAA,EACpB,YAAc;AAAA,EACd,eAAiB;AAAA,EACjB,IAAM;AAAA,EACN,OAAS;AAAA,EACT,IAAM;AAAA,EACN,IAAM;AAAA,EACN,SAAW;AAAA,EACX,SAAW;AAAA,EACX,eAAiB;AAAA,EACjB,UAAY;AAAA,EACZ,OAAS;AAAA,EACT,WAAa;AAAA,EACb,WAAa;AAAA,EACb,QAAU;AAAA,EACV,QAAU;AAAA,EACV,YAAc;AAAA,EACd,mBAAqB;AAAA,EACrB,QAAU;AAAA,EACV,sCAAwC;AAAA,EACxC,WAAa;AAAA,EACb,MAAQ;AAAA,EACR,eAAiB;AAAA,EACjB,QAAU;AAAA,EACV,WAAa;AAAA,EACb,wBAA0B;AAAA,EAC1B,UAAY;AAAA,EACZ,SAAW;AAAA,EACX,OAAS;AAAA,EACT,SAAW;AAAA,EACX,gBAAkB;AAAA,EAClB,WAAa;AAAA,EACb,SAAW;AAAA,EACX,QAAU;AAAA,EACV,aAAe;AAAA,EACf,OAAS;AAAA,EACT,gCAAkC;AAAA,EAClC,MAAQ;AAAA,EACR,MAAQ;AAAA,EACR,SAAW;AAAA,EACX,IAAM;AAAA,EACN,QAAU;AAAA,EACV,SAAW;AAAA,EACX,QAAU;AAAA,EACV,IAAM;AAAA,EACN,OAAS;AAAA,EACT,YAAc;AAAA,EACd,UAAY;AAAA,EACZ,UAAY;AAAA,EACZ,SAAW;AAAA,EACX,gBAAkB;AAAA,EAClB,aAAe;AAAA,EACf,IAAM;AAAA,EACN,QAAU;AAAA,EACV,gBAAkB;AAAA,EAClB,YAAc;AAAA,EACd,MAAQ;AAAA,EACR,SAAW;AAAA,EACX,UAAY;AAAA,EACZ,eAAiB;AAAA,EACjB,WAAa;AAAA,EACb,SAAW;AAAA,EACX,SAAW;AAAA,EACX,WAAa;AAAA,EACb,YAAc;AAAA,EACd,QAAU;AAAA,EACV,OAAS;AAAA,EACT,SAAW;AAAA,EACX,QAAU;AAAA,EACV,SAAW;AAAA,EACX,YAAc;AAAA,EACd,WAAa;AAAA,EACb,YAAc;AAAA,EACd,kBAAoB;AAAA,EACpB,WAAa;AAAA,EACb,MAAQ;AAAA,EACR,SAAW;AAAA,EACX,UAAY;AAAA,EACZ,OAAS;AAAA,EACT,0BAA4B;AAAA,EAC5B,YAAc;AAAA,EACd,YAAc;AAAA,EACd,YAAc;AAAA,EACd,OAAS;AAAA,EACT,WAAa;AAAA,EACb,UAAY;AAAA,EACZ,QAAU;AAAA,EACV,QAAU;AAAA,EACV,UAAY;AAAA,EACZ,YAAc;AAAA,EACd,SAAW;AAAA,EACX,eAAiB;AAAA,EACjB,OAAS;AAAA,EACT,gBAAkB;AAAA,EAClB,SAAW;AAAA,EACX,WAAa;AAAA,EACb,aAAe;AAAA,EACf,QAAU;AAAA,EACV,OAAS;AAAA,EACT,OAAS;AAAA,EACT,MAAQ;AAAA,EACR,aAAe;AAAA,EACf,MAAQ;AAAA,EACR,QAAU;AAAA,EACV,MAAQ;AAAA,EACR,kBAAoB;AAAA,EACpB,kBAAoB;AAAA,EACpB,aAAe;AAAA,EACf,UAAY;AAAA,EACZ,QAAU;AAAA,EACV,oBAAsB;AAAA,EACtB,kBAAoB;AAAA,EACpB,aAAe;AAAA,EACf,yBAA2B;AAAA,EAC3B,UAAY;AAAA,EACZ,OAAS;AAAA,EACT,UAAY;AAAA,EACZ,OAAS;AAAA,EACT,SAAW;AAAA,EACX,SAAW;AAAA,EACX,QAAU;AAAA,EACV,IAAM;AAAA,EACN,QAAU;AAAA,EACV,cAAgB;AAAA,EAChB,iBAAmB;AAAA,EACnB,YAAc;AAAA,EACd,OAAS;AAAA,EACT,QAAU;AAAA,EACV,WAAa;AAAA,EACb,WAAa;AAAA,EACb,UAAY;AAAA,EACZ,oBAAsB;AAAA,EACtB,UAAY;AAAA,EACZ,cAAgB;AAAA,EAChB,YAAc;AAAA,EACd,SAAW;AAAA,EACX,SAAW;AAAA,EACX,UAAY;AAAA,EACZ,aAAe;AAAA,EACf,mBAAqB;AAAA,EACrB,aAAe;AAAA,EACf,cAAgB;AAAA,EAChB,OAAS;AAAA,EACT,WAAa;AAAA,EACb,kBAAoB;AAAA,EACpB,sBAAwB;AAAA,EACxB,MAAQ;AAAA,EACR,6BAA+B;AAAA,EAC/B,MAAQ;AAAA,EACR,UAAY;AAAA,EACZ,YAAc;AAAA,EACd,SAAW;AAAA,EACX,aAAe;AAAA,EACf,cAAgB;AAAA,EAChB,SAAW;AAAA,EACX,OAAS;AAAA,EACT,IAAM;AAAA,EACN,iBAAmB;AAAA,EACnB,QAAU;AAAA,EACV,QAAU;AAAA,EACV,UAAY;AAAA,EACZ,SAAW;AAAA,EACX,QAAU;AAAA,EACV,qBAAuB;AAAA,EACvB,gBAAkB;AAAA,EAClB,IAAM;AAAA,EACN,SAAW;AAAA,EACX,YAAc;AAAA,EACd,cAAgB;AAAA,EAChB,uBAAyB;AAAA,EACzB,WAAa;AAAA,EACb,wBAA0B;AAAA,EAC1B,mBAAqB;AAAA,EACrB,SAAW;AAAA,EACX,SAAW;AAAA,EACX,eAAiB;AAAA,EACjB,OAAS;AAAA,EACT,QAAU;AAAA,EACV,OAAS;AAAA,EACT,SAAW;AAAA,EACX,cAAgB;AAAA,EAChB,QAAU;AAAA,EACV,UAAY;AAAA,EACZ,SAAW;AAAA,EACX,UAAY;AAAA,EACZ,OAAS;AACX;AAE4B,OAAO,KAAKA,EAAY,EAAE,OAAO,CAACC,GAAWjd,MAAc;AAC/E,QAAAkc,IAAQc,GAAahd,CAAI;AAC/B,SAAAid,EAAKf,CAAK,IAAIlc,GACPid;AACT,GAAG,CAAE,CAAA;AAEE,MAAMC,KAAQ,OAAO,KAAKF,EAAY,EAAE,IAAI,OAAO/M,CAAG;AACvC,OAAO,KAAK+M,EAAY,EAAE,IAAI,CAAA/M,MAAO+M,GAAa/M,CAAG,CAAC;AAErE,SAASkN,GAAY/I,GAAY;AAC/B,SAAA8I,GACJ,OAAO,CAAQld,MAAAA,EAAK,WAAWoU,CAAK,CAAC,EACrC,IAAI,CAASpU,OAAA;AAAA,IACZ,MAAAA;AAAA,IACA,OAAOgd,GAAahd,CAAI;AAAA,EAAA,EACxB;AACN;ACtzDO,MAAMod,KAA6B,KAU7BC,KAAiB,IAAI/b,EAAU,OAAO,GAItCgc,KAAQhT,GAAK,OAAO;AAAA,EAC/B,MAAM;AAAA,EACN,SAAS;AAAA,EAET,UAAU8S;AAAA,EAEV,aAAa;;AACJ,WAAA;AAAA,MACL,IAAGvf,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,gBAAgB,CAAC;AAAA,MACjB,YAAY;AAAA,QACV,MAAM;AAAA,QACN,WAAWwf;AAAA,QACX,SAAS,CAAC,EAAE,QAAApf,GAAQ,OAAA0N,GAAO,OAAAzO,QAAiB;AAEvC,UAAAe,EAAA,MAAA,EACA,MAAA,EACA,gBAAgB0N,GAAO,GAAGzO,EAAM,KAAK,GAAG,EACxC,IAAI;AAAA,QAAA;AAAA,MAEX;AAAA,MACA,QAAQ,CAAC,EAAE,QAAAe,GAAQ,GAAAC,SACV;AAAA,QACL,WAAW0d;AAAAA,QACX,gBAAgB;AAAA,UACd,QAAA3d;AAAA,UACA,QAAQ,MAAM;AAAA,UAEd;AAAA,UACA,UAAU,MAAM;AAAA,UAChB,UAAU;AAAA,UACV,MAAM;AAAA,UACN,SAASC,EAAE,sBAAsB;AAAA,QAAA;AAAA,MAErC;AAAA,IAEJ;AAAA,EACF;AAAA,EAEA,cAAc;AACL,WAAA;AAAA,MACL,UACE,CAAAqf,MACE,CAAC,EAAE,UAAApM,QACMA,EAAS,cAAc,GAAGoM,EAAY,KAAK,GAAG;AAAA,IAE7D;AAAA,EACF;AAAA,EAEA,wBAAwB;AACf,WAAA;AAAA,MACL3J,GAAW;AAAA,QACT,QAAQ,KAAK;AAAA,QACb,GAAG,KAAK,QAAQ;AAAA,MACjB,CAAA;AAAA,IACH;AAAA,EAAA;AAEJ,CAAC,EAAE,UAAU;AAAA,EACX,YAAY;AAAA,IACV,OAAO,CAAC,EAAE,OAAAQ,QACD+I,GAAY/I,CAAK;AAAA,IAE1B,QAAQ,MAAM;AACR,UAAAO,GACAlB,GACA3O;AAEG,aAAA;AAAA,QACL,SAAS,CAAC5H,MAAe;AAEvB,UADA4H,IAAa5H,EAAM,OAAO,YACrB4H,MAGO6P,IAAA,IAAIE,GAAcgI,IAAW;AAAA,YACvC,OAAA3f;AAAA,YACA,QAAQA,EAAM;AAAA,UAAA,CACf,GAEDuW,IAAQE,GAAM,QAAQ;AAAA,YACpB,wBAAwBzW,EAAM;AAAA,YAC9B,UAAU,MAAM,SAAS;AAAA,YACzB,SAASyX,EAAU;AAAA,YACnB,cAAc;AAAA,YACd,aAAa;AAAA,YACb,SAAS;AAAA,YACT,WAAW;AAAA,UAAA,CACZ;AAAA,QACH;AAAA,QAEA,SAASzX,GAAY;AACnB,UAAK4H,MAGL6P,EAAU,YAAYzX,CAAK,GACrBuW,EAAA,CAAC,EAAE,SAAS;AAAA,YAChB,wBAAwBvW,EAAM;AAAA,UAAA,CAC/B;AAAA,QACH;AAAA,QAEA,UAAUA,GAAY;;AACpB,cAAK4H;AAGD,mBAAA5H,EAAM,MAAM,QAAQ,YAChBuW,EAAA,CAAC,EAAE,KAAK,GACP,OAEF5V,IAAA8W,EAAU,QAAV,gBAAA9W,EAAe,UAAUX;AAAA,QAClC;AAAA,QAEA,SAAS;AACP,UAAK4H,MAGC2O,EAAA,CAAC,EAAE,QAAQ,GACjBkB,EAAU,QAAQ;AAAA,QAAA;AAAA,MAEtB;AAAA,IAAA;AAAA,EACF;AAEJ,CAAC;AC/ID,SAAS6I,GAAUC,GAAiB;AAC5B,QAAAC,IAA4B,SAAS,cAAc,QAAQ;AAC1D,EAAAA,EAAA,aAAa,SAAS,2DAA2D,GAC/E,SAAA,KAAK,YAAYA,CAAM,GAEhCA,EAAO,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAUXD,CAAO;AAAA;AAAA;AAAA;AAAA;AAMjB,QAAME,IAAcD,EAAO,eACrB3d,IAAW2d,EAAO,mBAAoBA,EAAO,iBAAiBA,EAAO,cAAc,UAGnFxS,IAAO,SAAS,cAAc,MAAM;AAC1C,EAAAA,EAAK,MAAM,cACXA,EAAK,OAAO,2EACRnL,EAAA,KAAK,YAAYmL,CAAI,GAErBnL,MACFA,EAAI,KAAK,GACTA,EAAI,MAAM0d,CAAO,GACjB1d,EAAI,MAAM,IAGR4d,KACKD,EAAA,iBAAiB,QAAQ,WAAY;AACtC,QAAA;AACF,iBAAW,MAAM;AACf,QAAAC,EAAY,MAAM;AACd,YAAA;AACF,UAAKA,EAAY,SAAS,YAAY,SAAS,EAAK,KAClDA,EAAY,MAAM;AAAA,QACpB,QACM;AACN,UAAAA,EAAY,MAAM;AAAA,QAAA;AAEpB,QAAAA,EAAY,MAAM;AAAA,SACjB,EAAE;AAAA,aACEC,GAAK;AACZ,cAAQ,MAAMA,CAAG;AAAA,IAAA;AAGnB,eAAW,MAAM;AACN,eAAA,KAAK,YAAYF,CAAM;AAAA,OAC/B,GAAG;AAAA,EAAA,CACP;AAEL;AAEO,SAASG,GAAmB5f,GAAgB;AAC3C,QAAAwf,IAAUxf,EAAO,QAAQ;AAE/B,SAAIwf,KACFD,GAAUC,CAAO,GACV,MAEF;AACT;AClEa,MAAAK,KAAYpV,EAAU,OAAY;AAAA,EAC7C,MAAM;AAAA,EACN,aAAa;;AACJ,WAAA;AAAA,MACL,IAAG7K,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,QAAQ,CAAC,EAAE,QAAAI,GAAQ,GAAAC,SAAc;AAAA,QAC/B,WAAWC;AAAA,QACX,gBAAgB;AAAA,UACd,QAAQ,MAAM;AACZ,YAAA0f,GAAmB5f,CAAM;AAAA,UAC3B;AAAA,UACA,MAAM;AAAA,UACN,SAASC,EAAE,0BAA0B;AAAA,UACrC,UAAU,MAAM;AAAA,UAChB,UAAU;AAAA,QAAA;AAAA,MAEd;AAAA,IACF;AAAA,EAAA;AAEJ,CAAC;ACfD,SAAS6f,GAAaC,GAAaC,GAAe;AAChD,QAAMC,IAAiB,KAAKF,EAAO,MAAM,GAAG,EAAE,CAAC,CAAC,GAC1CG,IAAc,MAAM,KAAK,EAAE,QAAQD,EAAe,QAAQ;AAChE,WAASrD,IAAI,GAAGA,IAAIqD,EAAe,QAAQrD;AACzC,IAAAsD,EAAYtD,CAAC,IAAIqD,EAAe,WAAWrD,CAAC;AAExC,QAAAuD,IAAY,IAAI,WAAWD,CAAkB;AAC5C,SAAA,IAAI,KAAK,CAACC,CAAS,GAAG,EAAE,MAAMH,GAAU;AACjD;AAEA,SAASI,GAAWC,GAAWC,GAAe;AACrC,SAAA,IAAI,KAAK,CAACD,CAAI,GAAGC,GAAU,EAAE,MAAMD,EAAK,MAAM;AACvD;AAcA,SAASE,GAAiBthB,GAA8B;AAChD,QAAA,EAAE,OAAAuhB,EAAM,IAAIC,GAAS,GACrB,EAAE,GAAAxgB,EAAE,IAAImI,EAAU,GAClB,CAACsY,GAASC,CAAU,IAAIxa,EAAS,EAAK,GACtCya,IAAY1Z,EAAyB,IAAI;AAE/C,WAAS2Z,IAAmB;;AAC1B,KAAAjhB,IAAAghB,EAAU,YAAV,QAAAhhB,EAAmB;AAAA,EAAM;AAG3B,WAASkhB,EAAiBvM,GAAY;AACpC,UAAMwM,IAAOxM,EAAM,OAAO,MAAM,CAAC;AACjC,QAAKwM,GAGD;AAAA,UAAAA,EAAK,OAAO9hB,EAAM,OAAQ;AACtB,QAAAuhB,EAAA;AAAA,UACJ,SAAS;AAAA,UACT,OAAOvgB,EAAE,6BAA6B;AAAA,QAAA,CACvC;AACD;AAAA,MAAA;AAEF,MAAA+gB,EAAWD,CAAI;AAAA;AAAA,EAAA;AAGjB,iBAAeE,EAAWC,GAAc;;AAEtC,UAAMpf,IADS,IAAI,UAAU,EACV,gBAAgBof,GAAM,WAAW,GAC9CC,IAASrf,EAAI,iBAAiB,KAAK;AACrC,QAAAqf,EAAO,WAAW;AACpB,aAAOrf,EAAI,KAAK;AAGlB,QADiBsf,GAAaniB,EAAM,QAAQ,OAAO,GACrC;AACZ,YAAMoiB,KAAgBzhB,IAAAX,EAAM,OAAO,iBAAiB,WAAW;AAAA,QAC7D,CAAAwH,MAAaA,EAAU,SAAS;AAAA,MAAA,MADZ,gBAAA7G,EAEnB;AACH,UAAIyhB,KAAiB,OAAOA,EAAc,UAAW,YAAY;AAC/D,cAAMC,IAAgB,CAAC;AAEvB,mBAAWC,KAAOJ,GAAQ;AAClB,gBAAAK,IAAcD,EAAI,aAAa,KAAK,GACpClB,IAAOP,GAAa0B,GAAa,YAAY,GAC7CT,IAAOX,GAAWC,GAAM,YAAY;AAC1C,UAAAiB,EAAM,KAAKP,CAAI;AAAA,QAAA;AAEjB,cAAMU,IAAY,MAAMJ,EAAc,OAAOC,CAAK;AAElD,mBAAW,CAAC1E,GAAG2E,CAAG,KAAKJ,EAAO,WAAW;AACvC,UAAAI,EAAI,aAAa,OAAOE,EAAU7E,CAAC,EAAE,GAAG;AACxC,gBAAM8E,IAASH,EAAI;AACf,WAAAG,KAAA,gBAAAA,EAAQ,aAAY,QACfA,EAAA,sBAAsB,eAAeH,CAAG,GAC3C,CAACG,EAAO,cAAA,KAAmBA,EAAO,gBAAgB,MACpDA,EAAO,OAAO;AAAA,QAElB;AAEF,eAAO5f,EAAI,KAAK;AAAA,MAAA;AAEhB,uBAAQ,KAAK,kDAAkD,GACxDA,EAAI,KAAK;AAAA,IAClB;AAEA,qBAAQ,MAAM,oDAAoD,GAC3DA,EAAI,KAAK;AAAA,EAClB;AAGF,iBAAekf,EAAWW,GAAkB;AAC1C,IAAAhB,EAAW,EAAI;AACX,QAAA;AACF,UAAI1hB,EAAM,SAAS;AACjB,cAAMie,IAAS,MAAMje,EAAM,QAAQ0iB,CAAU;AAC7C,QAAAC,EAAa1E,CAAM;AAAA,MAAA,OACd;AACC,cAAA2E,IAAc,MAAMF,EAAW,YAAY,GAE3C,EAAE,OAAA9Z,EAAA,IAAU,MAAMia,GAAQ;AAAA,UAC9B,EAAE,aAAAD,EAAY;AAAA,UACd5iB,KAAA,gBAAAA,EAAO;AAAA,QACT;AACA,QAAA2iB,EAAa/Z,CAAK;AAAA,MAAA;AAAA,IACpB,UACA;AACA,MAAA8Y,EAAW,EAAK;AAAA,IAAA;AAAA,EAClB;AAEF,iBAAeiB,EAAaG,GAAoB;AACxC,UAAAb,IAAO,MAAMD,EAAWc,CAAU;AACxC,IAAA9iB,EAAM,OAAO,MAAM,EAAE,WAAWiiB,GAAM,EAAI,EAAE,IAAI;AAAA,EAAA;AAGlD,2BACG,OACC,EAAA,UAAA;AAAA,IAAA,gBAAA5hB;AAAA,MAACY;AAAA,MAAA;AAAA,QAAa,QAAQ2gB;AAAA,QACpB,UAAU5hB,KAAA,gBAAAA,EAAO;AAAA,QACjB,MAAMA,KAAA,gBAAAA,EAAO;AAAA,QACb,SAAAyhB;AAAA,QACA,SAASzhB,KAAA,gBAAAA,EAAO;AAAA,MAAA;AAAA,IAClB;AAAA,IAEA,gBAAAK;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,QAAO;AAAA,QACP,UAAUwhB;AAAA,QACV,KAAKF;AAAA,QACL,MAAK;AAAA,QACL,OAAO;AAAA,UACL,SAAS;AAAA,QAAA;AAAA,MACX;AAAA,IAAA;AAAA,EACF,GACF;AAEJ;AC5Ha,MAAAoB,KAAavX,EAAU,OAA0B;AAAA,EAC5D,MAAM;AAAA,EACN,aAAa;;AACJ,WAAA;AAAA,MACL,IAAG7K,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,OAAO,OAAO,OAAO;AAAA;AAAA,MACrB,QAAQ,CAAC,EAAE,QAAAI,GAAQ,WAAAyG,GAAW,GAAAxG,QAAQ;AACpC,cAAM,EAAE,SAAAgiB,GAAS,OAAAC,GAAO,gBAAAC,MAAmB1b,EAAU;AAC9C,eAAA;AAAA,UACL,WAAW8Z;AAAA,UACX,gBAAgB;AAAA,YACd,QAAAvgB;AAAA,YACA,SAAAiiB;AAAA,YACA,OAAAC;AAAA,YACA,gBAAAC;AAAA,YACA,QAAQ,MAAMniB,EAAO,SAAS,kBAAkB;AAAA,YAChD,UAAU,CAACA,EAAO,IAAA,EAAM,kBAAkB;AAAA,YAC1C,MAAM;AAAA,YACN,cAAc,CAAC,OAAO,OAAO,GAAG;AAAA,YAChC,SAASC,EAAE,2BAA2B;AAAA,UAAA;AAAA,QAE1C;AAAA,MAAA;AAAA,IAEJ;AAAA,EAAA;AAEJ,CAAC,GCnDKmiB,KAAY,OAAO,SAAW;AAEpB,SAAAC,GAAiBhC,GAAYiC,GAAkB;AAC7D,MAAIF,IAAW;AACb,UAAMG,IAAM,OAAO,IAAI,gBAAgBlC,CAAI,GACrCmC,IAAI,SAAS,cAAc,GAAG;AACpC,WAAAA,EAAE,OAAOD,GACTC,EAAE,WAAWF,GACbE,EAAE,MAAM,GACD,OAAA,IAAI,gBAAgBD,CAAG,GACvB,QAAQ,QAAQ;AAAA,EAAA;AAGzB,iBAAQ,MAAM,sCAAsC,GAE7C,QAAQ,QAAQ;AACzB;ACEA,MAAME,KAAiB;AAAA,EACrB,GAAGC;AAAA,EACH,WAAWA,EAAa;AAAA,EACxB,WAAWA,EAAa;AAAA,EACxB,aAAaA,EAAa;AAAA,EAC1B,UAAUA,EAAa;AAAA,EACvB,YAAYA,EAAa;AAAA,EACzB,gBAAgBA,EAAa;AAAA;AAAA,EAE7B,MAAMte,GAAYhC,GAAW;AAE3B,IAAAgC,EAAM,aAAahC,CAAI,GACvBgC,EAAM,WAAWhC,CAAI;AAAA,EACvB;AAAA,EACA,MAAMgC,GAAYhC,GAAW;AAC3B,IAAAgC,EAAM,MAAMhC,GAAM;AAAA,MAChB,cAAc;AAAA,QACZ,OAAO;AAAA,UACL,MAAM;AAAA,UACN,MAAMugB,GAAU;AAAA,QAAA;AAAA,MAClB;AAAA,IACF,CACD;AAAA,EAAA;AAEL,GACMC,KAAiB,IAAIC,GAAeJ,IAAgBK,EAAY,GAEzDC,KAAatY,EAAU,OAA0B;AAAA,EAC5D,MAAM;AAAA,EACN,aAAa;;AACJ,WAAA;AAAA,MACL,IAAG7K,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,QAAQ,CAAC,EAAE,QAAAI,GAAQ,GAAAC,SAAc;AAAA,QAC/B,WAAWC;AAAA,QACX,gBAAgB;AAAA,UACd,MAAM;AAAA,UACN,QAAQ,MAAM;AACZ,YAAAF,KAAA,QAAAA,EAAQ,SAAS;AAAA,UACnB;AAAA,UACA,SAASC,EAAE,2BAA2B;AAAA,UACtC,UAAU,MAAM;AAAA,UAChB,UAAU;AAAA,QAAA;AAAA,MAEd;AAAA,IACF;AAAA,EACF;AAAA;AAAA,EAEA,cAAc;AACL,WAAA;AAAA,MACL,cACE,MACE,OAAO,EAAE,QAAAD,QAAa;AACpB,cAAMiB,IAAY;AAAA,UAChB,gBAAgB,OAAO+hB,MAAgB;AAE/B,kBAAAnB,IAAc,OADH,MAAM,MAAMmB,CAAG,GACG,YAAY;AACxC,mBAAA,IAAI,WAAWnB,CAAW;AAAA,UAAA;AAAA,QAErC,GAEMoB,IAAeL,GAAe,UAAU5iB,EAAO,MAAM,KAAYiB,CAAI;AAE3E,eAAAiiB,GAAO,OAAOD,CAAY,EAAE,KAAK,CAAQ5C,MAAAgC,GAAiB,IAAI,KAAK,CAAChC,CAAI,CAAC,GAAG,sBAAsB,CAAC,GAE5F;AAAA,MAAA;AAAA,IAEf;AAAA,EAAA;AAEJ,CAAC;;;;;;AC1ED,SAAS8C,GAAUC,GAAW;AAC5B,QAAMlG,IAAS,CAAC,GACVvT,IAAS,CAACuT,CAAM;AAEjB,SAAAkG,EAAA,QAAQ,CAACC,MAAW;AACvB,QAAI5G,IAAS,IACTiF,IAAS/X,EAAO0Z,EAAE,QAAQ5G,CAAM;AAEpC,WAAO,CAACiF;AACI,MAAAjF,KAAA,GACDiF,IAAA/X,EAAO0Z,EAAE,QAAQ5G,CAAM;AAG3B,IAAAiF,EAAA,KAAK,EAAE,GAAG2B,GAAG,UAAW1Z,EAAO0Z,EAAE,KAAK,IAAI,CAAA,GAAK;AAAA,EAAA,CACvD,GAEMnG;AACT;AAEgB,SAAAoG,GAAuB,EAAE,QAAAtjB,KAAe;AACtD,QAAM6G,IAAaC,GAAkB,GAC/B,CAACqC,GAAOoa,CAAQ,IAAIpd,EAAS,CAAA,CAAE,GAC/B,EAAE,GAAAlG,EAAE,IAAImI,EAAU,GAElBob,IAAepc,EAAY,MAAM;AACrC,UAAMqc,IAAW,CAAC,GACZ/f,IAAc1D,EAAO,MAAM;AAEjC,IAAAA,EAAO,MAAM,IAAI,YAAY,CAACoC,GAAWoL,MAAa;AAChD,UAAApL,EAAK,KAAK,SAAS,WAAW;AAChC,cAAMgR,IAAK,WAAWqQ,EAAS,SAAS,CAAC;AAErC,QAAArhB,EAAK,MAAM,OAAOgR,KACR1P,EAAA,cAAc8J,GAAK,QAAW;AAAA,UACxC,GAAGpL,EAAK;AAAA,UACR,IAAAgR;AAAA,QAAA,CACD,GAGHqQ,EAAS,KAAK;AAAA,UACZ,OAAOrhB,EAAK,MAAM;AAAA,UAClB,MAAMA,EAAK;AAAA,UACX,IAAAgR;AAAA,QAAA,CACD;AAAA,MAAA;AAAA,IACH,CACD,GAEW1P,EAAA,QAAQ,gBAAgB,EAAK,GAC7BA,EAAA,QAAQ,iBAAiB,EAAI,GAClC1D,EAAA,KAAK,SAAS0D,CAAW,GAEhC6f,EAASE,CAAQ,GACjBzjB,EAAO,gBAAgBA,EAAO,aAAa,KAAK,mBAAmBmjB,GAAUM,CAAQ,CAAC;AAAA,EAAA,GACrF,CAACzjB,CAAM,CAAC;AAEX,SAAAqU,EAAU,MAAM;AACd,QAAKrU,GAID;AAAA,UAAA,CAACA,EAAO,QAAQ,UAAU;AACf,QAAAwjB,EAAA;AACb;AAAA,MAAA;AAGK,aAAAxjB,EAAA,GAAG,UAAUwjB,CAAY,GAEzB,MAAM;AACJ,QAAAxjB,EAAA,IAAI,UAAUwjB,CAAY;AAAA,MACnC;AAAA;AAAA,EAAA,GACC,CAACxjB,GAAQwjB,CAAY,CAAC,GAEzBnP,EAAU,MAAM;AACD,IAAAmP,EAAA;AAAA,EAEf,GAAG,EAAE,qBAGFjc,IAAgB,EAAA,WAAWmc,EAAI,kBAAkBjc,GAAO,KAAKZ,KAAcY,GAAO,OAAO,GACvF,cAEI,gBAAA/H,EAAA,OAAA,EAAI,OAAO,EAAE,UAAU,WACtB,GAAA,UAAA;AAAA,IAAA,gBAAAJ,EAAC,KAAE,EAAA,WAAU,wDACV,UAAAW,EAAE,yBAAyB,GAC9B;AAAA,IAEA,gBAAAX,EAAC,QAAG,WAAWmI,GAAO,MACnB,UAAM0B,EAAA,IAAI,CAACtE,GAAWiD,MACrB,gBAAAxI;AAAA,MAAC;AAAA,MAAA;AAAA,QAAG,WAAWmI,GAAO;AAAA,QAEpB,OAAO,EAAE,aAAa,GAAG5C,EAAK,QAAQ,CAAC,MAAM;AAAA,QAE7C,UAAA,gBAAAvF,EAAC,OAAE,MAAM,IAAIuF,EAAK,EAAE,IACjB,YAAK,KACR,CAAA;AAAA,MAAA;AAAA,MALK,oBAAoBiD,CAAK;AAAA,IAAA,CAOjC,EACH,CAAA;AAAA,EAAA,EACF,CAAA,IAEA,MACN;AAEJ;AC9GgB,SAAA6b,GAAU3jB,MAAmB4jB,GAAa;AACxD,QAAM,CAACvb,GAAQwb,CAAY,IAAI1d,EAAS,EAAK;AAE7C,SAAAkO,EAAU,MAAM;AACd,UAAM0G,IAAW,MAAM;AACrB,MAAA8I,EAAa7jB,EAAO,SAAS,MAAMA,GAAQ4jB,CAAW,CAAC;AAAA,IACzD;AAEO,WAAA5jB,EAAA,GAAG,mBAAmB+a,CAAQ,GAC9B/a,EAAA,GAAG,eAAe+a,CAAQ,GAE1B,MAAM;AACJ,MAAA/a,EAAA,IAAI,mBAAmB+a,CAAQ,GAC/B/a,EAAA,IAAI,eAAe+a,CAAQ;AAAA,IACpC;AAAA,EACC,GAAA,CAAC/a,GAAQ4jB,GAAMC,CAAY,CAAC,GAExBxb;AACT;AChBO,SAASyb,GAA2B,EAAE,QAAA9jB,GAAQ,MAAAkO,GAAM,SAAAC,KAA8D;AACvH,QAAM4V,IAAmBJ,GAAU3jB,GAAQgkB,GAAgB,IAAI,GAEzDC,IAAiB7c,EAAY,MAAM;AACvC,QAAI2c,GAAkB;AACpB,MAAA/jB,EAAO,QAAQ,MAAQ,EAAA,sBAAA,EAAwB,IAAI;AACnD;AAAA,IAAA;AAEF,IAAAA,EAAO,QAAQ,MAAQ,EAAA,mBAAA,EAAqB,IAAI;AAAA,EAAA,GAC/C,CAACA,GAAQ+jB,CAAgB,CAAC;AAG3B,SAAA,gBAAAzkB;AAAA,IAACY;AAAA,IAAA;AAAA,MACC,QAAQ+jB;AAAA,MACR,UAAU,MAAMF,KAAoB;AAAA,MACpC,MAAA7V;AAAA,MACA,SAAAC;AAAA,IAAA;AAAA,EACF;AAEJ;ACtBO,SAAS+V,GAAY9hB,GAAqB;AACxC,SAAAA,KAAQA,EAAK,KAAK,SAAS;AACpC;AAmEgB,SAAA+hB,GAASnkB,GAAgB+B,GAAc;AAE/C,QAAAqiB,IAAQ,CADEpkB,EAAO,QAAQ,CACT,GAChBqkB,IAAM,CAAC;AAEN,SAAAD,EAAM,SAAS,KAAG;AACjB,UAAAhiB,IAAOgiB,EAAM,MAAM;AAErB,IAAAhiB,EAAK,SAASL,KAChBsiB,EAAI,KAAKjiB,CAAI,GAGXA,EAAK,WAAWA,EAAK,QAAQ,SAAS,KAClCgiB,EAAA,KAAK,GAAGhiB,EAAK,OAAO;AAAA,EAC5B;AAGK,SAAAiiB;AACT;ACtEa,MAAAL,KAAkB3X,GAAK,OAAgB;AAAA,EAClD,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM;AAAA,EAEN,aAAa;;AACJ,WAAA;AAAA,MACL,IAAGzM,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,sBAAsB,MAAM;AAAA,MAE5B;AAAA,MACA,WAAW;AAAA,MACX,qBAAqB;AAAA,MACrB,yBAAyB;AAAA,MACzB,QAAQ,CAAC,EAAE,QAAAI,GAAQ,GAAAC,SAAc;AAAA,QAC/B,WAAW6jB;AAAA,QACX,gBAAgB;AAAA,UACd,UAAU;AAAA,UACV,MAAM;AAAA,UACN,SAAS7jB,EAAE,sBAAsB;AAAA,UACjC,QAAAD;AAAA,QAAA;AAAA,MAEJ;AAAA,IACF;AAAA,EACF;AAAA,EAEA,YAAY;AACH,WAAA;AAAA,MACL;AAAA,QACE,KAAK;AAAA,MAAA;AAAA,IAET;AAAA,EACF;AAAA,EAEA,WAAW,EAAE,gBAAAsN,KAAkB;AAC7B,WAAO,CAAC,OAAOC,GAAgBD,CAAc,CAAC;AAAA,EAChD;AAAA,EAEA,cAAc;AACZ,WAAOpF,GAAsBob,EAAsB;AAAA,EACrD;AAAA;AAAA,EAGA,cAAc;AACL,WAAA;AAAA,MACL,oBACE,MACE,CAAC,EAAE,UAAApQ,GAAU,QAAAlT,GAAQ,MAAAsD,QAAW;AAG1B,YAFU6gB,GAASnkB,GAAQ,KAAK,IAAI,EAE9B,SAAS,GAAG;AAEpB,eAAK,QAAQ,qBAAqB;AAClC;AAAA,QAAA;AAGF,cAAMskB,IAAYhhB,EAAK,MAAM,MAAM,IAAI,QAAQ;AAE3C,YAAA4gB,GAAYI,CAAS,GAAG;AAC1B,gBAAM9W,KAAQ8W,EAAU,cAAcA,EAAU,WAAW,YAAa,KAAK;AAC7E,iBAAOpR,EAAS,gBAAgB1F,GAAK,EAAE,MAAM,KAAK,MAAM;AAAA,QAAA;AAG1D,eAAO0F,EAAS,cAAc;AAAA,UAC5B,MAAM,KAAK;AAAA,QAAA,CACZ;AAAA,MACH;AAAA,MACJ,uBAAuB,MACrB,CAAC,EAAE,OAAA9O,GAAO,UAAA2O,QAAoB;AACtB,cAAA,EAAE,IAAAvP,MAAOY,GACTwO,IAAWxO,EAAM,OAAO,MAAM;AAUpC,eARAA,EAAM,IAAI,YAAY,CAAChC,GAAWoL,MAAa;AACzC,cAAApL,EAAK,SAASwQ,GAAU;AAC1B,kBAAMnQ,IAAO+K,GACP1K,IAAK0K,IAAMpL,EAAK;AACnB,YAAAoB,EAAA,OAAOf,GAAMK,CAAE;AAAA,UAAA;AAAA,QACpB,CACD,GAEGU,EAAG,cACLuP,EAASvP,CAAE,GACJ,MAGF;AAAA,MAAA;AAAA,IAEb;AAAA,EACF;AAAA,EAEA,sBAAsB;AACb,WAAA;AAAA,MACL;AAAA,QACE,OAAO,CAAC,SAAS;AAAA,QACjB,YAAY;AAAA,UACV,IAAI;AAAA,YACF,SAAS;AAAA,UAAA;AAAA,QACX;AAAA,MACF;AAAA,IAEJ;AAAA,EAAA;AAEJ,CAAC;AC/FD,SAAS+gB,GAAoBtlB,GAAkC;;AACvD,QAAAoJ,IAAS7D,EAAQ,MAAM;;AACrB,UAAA8D,KAAY1I,IAAAX,KAAA,gBAAAA,EAAO,UAAP,gBAAAW,EAAc,KAAK,CAAC2I,MAAWA,EAAE;AAC/C,WAAAD,KAAQ,CAACA,EAAK,UACT;AAAA,MACL,GAAGA;AAAA,MACH,MAAMA,EAAK,OAAOA,EAAK,OAAOrJ,EAAM;AAAA,IACtC,IAEiB;AAAA,MACjB,OAAOA,KAAA,gBAAAA,EAAO;AAAA,MACd,MAAMA,EAAM;AAAA,MACZ,UAAU,MAAM;AAAA,IAClB;AAAA,EAEO,GACN,CAACA,CAAK,CAAC;AAGR,SAAA,gBAAAS,EAACoK,IAAQ,EAAA,OAAK,IACZ,UAAA;AAAA,IAAA,gBAAAxK;AAAA,MAACyK;AAAA,MAAA;AAAA,QAAe,SAAO;AAAA,QACrB,UAAU9K,KAAA,gBAAAA,EAAO;AAAA,QAEjB,UAAA,gBAAAK;AAAA,UAACY;AAAA,UAAA;AAAA,YACC,aAAY;AAAA,YACZ,UAAUjB,KAAA,gBAAAA,EAAO;AAAA,YACjB,MAAMA,KAAA,gBAAAA,EAAO;AAAA,YACb,SAASA,KAAA,gBAAAA,EAAO;AAAA,YAEhB,UAAA,gBAAAK;AAAA,cAACsI;AAAA,cAAA;AAAA,gBAAc,WAAU;AAAA,gBACvB,MAAK;AAAA,cAAA;AAAA,YAAA;AAAA,UACP;AAAA,QAAA;AAAA,MACF;AAAA,IACF;AAAA,IAEA,gBAAAtI;AAAA,MAAC0K;AAAA,MAAA;AAAA,QACC,OAAM;AAAA,QACN,WAAU;AAAA,QACV,MAAK;AAAA,QAEJ,WAAOpK,IAAAX,KAAA,gBAAAA,EAAA,UAAA,gBAAAW,EAAO,IAAI,CAACiF,GAAMiD,MAAU;;AAClC,mCACGzI,IACC,EAAA,UAAA;AAAA,YAAC,gBAAAC,EAAAC,IAAA,EAAe,SAAO,IACrB,UAAA,gBAAAD;AAAA,cAAC2K;AAAA,cAAA;AAAA,gBACC,WAAU;AAAA,gBACV,cAAY5B,EAAO,UAAUxD,EAAK,QAAQ,OAAO;AAAA,gBACjD,SAASA,KAAA,gBAAAA,EAAM;AAAA,gBACf,SAASwD,EAAO,UAAUxD,EAAK;AAAA,gBAC/B,MAAK;AAAA,gBAEJ,kCAAM,SAAQ,gBAAAvF,EAACsI,GAAc,EAAA,MAAM/C,EAAK,KAAM,CAAA;AAAA,cAAA;AAAA,YAAA,GAEnD;AAAA,YAEA,gBAAAnF,EAACC,IAAe,EAAA,WAAU,yDACxB,UAAA;AAAA,cAAC,gBAAAL,EAAA,QAAA,EACE,YAAK,MACR,CAAA;AAAA,cAEC,CAAC,GAACM,IAAAiF,EAAK,iBAAL,QAAAjF,EAAmB,WACpB,gBAAAN,EAAC,UACE,WAAK0H,IAAAnC,EAAA,iBAAA,gBAAAmC,EAAc,IAAI,CAAAnC,MAAQ2E,GAAe3E,CAAI,GAAG,KAAK,KAC7D,CAAA;AAAA,YAAA,EAEJ,CAAA;AAAA,UAvBY,EAAA,GAAA,cAAciD,CAAK,EAwBjC;AAAA,QAEH;AAAA,MAAA;AAAA,IAAA;AAAA,EACH,GACF;AAEJ;AC/FM,MAAA0c,KAAgB/Z,EAAU,OAAO;AAAA,EACrC,MAAM;AAAA,EACN,aAAa;;AACJ,WAAA;AAAA,MACL,IAAG7K,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,OAAO,CAAC,WAAW,WAAW;AAAA,MAC9B,YAAY,CAAC,QAAQ,OAAO,KAAK;AAAA,MACjC,kBAAkB;AAAA,MAClB,OAAO;AAAA,QACL,QAAAI;AAAA,QACA,WAAAyG;AAAA,QACA,GAAAxG;AAAA,MAAA,GAKC;;AACD,cAAMwkB,MAAc7kB,IAAA6G,EAAU,YAAV,gBAAA7G,EAAmB,eAAwB,CAAC,GAE1D0K,IAAU;AAAA,UACd,MAAM;AAAA,UACN,KAAK;AAAA,UACL,KAAK;AAAA,QACP,GAEMnB,IAAQsb,EAAW,IAAI,CAAMlc,OAAA;AAAA,UACjC,OAAOtI,EAAE,wBAAwBsI,CAAC,UAAU;AAAA,UAC5C,MAAM+B,EAAQ/B,CAAC;AAAA,UACf,UAAU,MAAM;AAAA,UAChB,QAAQ,MAAM;;AACZ,gBAAIA,MAAM,QAAQ;AAChB,eAAAvB,KAAApH,IAAAI,EAAO,aAAP,gBAAAJ,EAAiB,uBAAjB,QAAAoH,EAAA,KAAApH;AACA;AAAA,YAAA;AAGK,aAAAmQ,KAAA9H,IAAAjI,EAAA,aAAA,gBAAAiI,EAAU,qBAAV,QAAA8H,EAAA,KAAA9H,GAA6BM;AAAA,UACtC;AAAA,UACA,UAAU;AAAA,QAAA,EACV,GACIc,IAAWF,EAAM,OAAO,CAAAZ,MAAKA,EAAE,QAAQ,EAAE,WAAWY,EAAM;AAEzD,eAAA;AAAA,UACL,WAAWob;AAAA,UACX,gBAAgB;AAAA,YACd,MAAM;AAAA,YACN,SAAStkB,EAAE,8BAA8B;AAAA,YACzC,UAAAoJ;AAAA,YACA,OAAAF;AAAA,UAAA;AAAA,QAEJ;AAAA,MAAA;AAAA,IAEJ;AAAA,EACF;AAAA,EACA,sBAAsB;AACb,WAAA;AAAA,MACL;AAAA,QACE,OAAO,KAAK,QAAQ;AAAA,QACpB,YAAY;AAAA,UACV,KAAK;AAAA,YACH,SAAS,KAAK,QAAQ;AAAA,YACtB,WAAW,CAAC4B,MACNA,EAAQ,WAAW,OAAO,KAAK,QAAQ,WAAW,SAASA,EAAQ,WAAW,GAAG,IAC5EA,EAAQ,WAAW,IAAI,QAEvB,KAAK,QAAQ;AAAA,YAGxB,YAAY,CAACC,OACJ,EAAE,KAAKA,EAAW,IAAI;AAAA,UAC/B;AAAA,QACF;AAAA,MACF;AAAA,IAEJ;AAAA,EACF;AAAA;AAAA,EAEA,cAAc;AACL,WAAA;AAAA,MACL,kBAAkB,CAAC0Z,MAAmB,CAAC,EAAE,UAAAxR,QAClC,KAAK,QAAQ,WAAW,SAASwR,CAAS,IAGxC,KAAK,QAAQ,MAAM,MAAM,CAAChV,MAAcwD,EAAS,iBAAiBxD,GAAM,EAAE,KAAKgV,EAAW,CAAA,CAAC,IAFzF;AAAA,MAIX,oBAAoB,MAAM,CAAC,EAAE,UAAAxR,QACpB,KAAK,QAAQ,MAAM,MAAM,CAACxD,MAAcwD,EAAS,gBAAgBxD,GAAM,KAAK,CAAC;AAAA,IAExF;AAAA,EAAA;AAEJ,CAAC;;;;GC7EYiV,KAAwCrP,GAAW,CAACrW,GAAOC,MAAQ;AACxE,QAAA+H,IAAkBC,EAAuB,IAAI,GAC7C,CAAC2X,GAAeC,CAAgB,IAAI3Y,EAAS,CAAC,GAE9C0O,IAAa,CAAC/M,MAAe;AAC3B,UAAA8c,IAAW3lB,EAAM,MAAM6I,CAAK;AAClC,IAAK8c,KAEL3lB,EAAM,QAAQ,EAAE,IAAI2lB,GAAU,OAAOA,GAAU;AAAA,EACjD,GAEMpQ,IAAY,MAAM;AACtB,IAAAsK,GAAkBD,IAAgB5f,EAAM,MAAM,SAAS,KAAKA,EAAM,MAAM,MAAM;AAAA,EAChF,GAEMwV,IAAc,MAAM;AACxB,IAAAqK,GAAkBD,IAAgB,KAAK5f,EAAM,MAAM,MAAM;AAAA,EAC3D,GAEMyV,IAAe,MAAM;AACzB,IAAAG,EAAWgK,CAAa;AAAA,EAC1B;AAEA,SAAAxK,EAAU,MAAMyK,EAAiB,CAAC,GAAG,CAAC7f,EAAM,KAAK,CAAC,GAElDoV,EAAU,MAAM;AACV,QAAA,OAAO,MAAMwK,IAAgB,CAAC;AAChC;AACF,UAAM1J,IAAKlO,EAAW,QAAQ,cAAc,oBAAoB4X,IAAgB,CAAC,GAAG;AACpF,IAAA1J,KAAMgI,GAAehI,GAAI,EAAE,UAAU,UAAU,YAAY,aAAa;AAAA,EAAA,GACvE,CAAC0J,CAAa,CAAC,GAElB1K,GAAoBjV,GAAK,OAAO;AAAA,IAC9B,WAAW,CAAC,EAAE,OAAAqV,QACRA,EAAM,QAAQ,aACNC,EAAA,GACH,MAGLD,EAAM,QAAQ,eACJE,EAAA,GACL,MAGLF,EAAM,QAAQ,WACHG,EAAA,GACN,MAGF;AAAA,EACT,EACA,GAGA,gBAAApV,EAAC,SAAI,WAAWkI,EAAK,aAAaC,GAAO,SAAS,GAChD,UAAC,gBAAAnI,EAAA,OAAA,EAAI,KAAK2H,GACP,UAAAhI,EAAM,MAAM,SAAS,IAElBA,EAAM,MAAM,IAAI,CAAC4F,GAAMiD,MACrB,gBAAAxI;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAWkI,EAAK,YAAYC,GAAO,UAAUK,MAAU+W,IAAgBpX,GAAO,eAAe,EAAE;AAAA,MAE/F,SAAS,MAAMoN,EAAW/M,CAAK;AAAA,MAE9B,UAAAjD;AAAA,IAAA;AAAA,IAHIiD;AAAA,EAKR,CAAA,IAGA,gBAAAxI,EAAA,OAAA,EAAI,WAAWkI,EAAK,iBAAiBC,GAAO,QAAQ,GAAG,UAExD,QAAA,CAAA,EAAA,CAEN,EACF,CAAA;AAEJ,CAAC,GCrFKod,KAAa;AAAA,EACjB;AAAA,IACE,IAAI;AAAA,IACJ,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,IAAI;AAAA,IACJ,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,IAAI;AAAA,IACJ,MAAM;AAAA,EACR;AAAA,EACA;AAAA,IACE,IAAI;AAAA,IACJ,MAAM;AAAA,EAAA;AAEV,GAEMC,KAAa;AAAA,EACjB,OAAO,OAAO,EAAE,OAAA3O,QACD0O,GAAW,IAAI,CAAAhgB,MAAQA,EAAK,IAAI,EACjC,OAAO,CAAAA,MAAQA,EAAK,cAAc,WAAWsR,EAAM,YAAY,CAAC,CAAC;AAAA,EAG/E,QAAQ,MAAM;AACR,QAAAO,GACAlB;AAEG,WAAA;AAAA,MACL,SAAS,CAACvW,MAAe;AACX,QAAAyX,IAAA,IAAIE,GAAc+N,IAAqB;AAAA,UACjD,OAAA1lB;AAAA,UACA,QAAQA,EAAM;AAAA,QAAA,CACf,GAEDuW,IAAQE,GAAM,QAAQ;AAAA,UACpB,wBAAwBzW,EAAM;AAAA,UAC9B,UAAU,MAAM,SAAS;AAAA,UACzB,SAASyX,EAAU;AAAA,UACnB,cAAc;AAAA,UACd,aAAa;AAAA,UACb,SAAS;AAAA,UACT,WAAW;AAAA,QAAA,CACZ;AAAA,MACH;AAAA,MAEA,SAASzX,GAAY;AACnB,QAAAyX,EAAU,YAAYzX,CAAK,GAErBuW,EAAA,CAAC,EAAE,SAAS;AAAA,UAChB,wBAAwBvW,EAAM;AAAA,QAAA,CAC/B;AAAA,MACH;AAAA,MAEA,UAAUA,GAAY;;AAChB,eAAAA,EAAM,MAAM,QAAQ,YAChBuW,EAAA,CAAC,EAAE,KAAK,GAEP,OAGF5V,IAAA8W,EAAU,QAAV,gBAAA9W,EAAe,UAAUX;AAAA,MAClC;AAAA,MAEA,SAAS;AACD,QAAAuW,EAAA,CAAC,EAAE,QAAQ,GACjBkB,EAAU,QAAQ;AAAA,MAAA;AAAA,IAEtB;AAAA,EAAA;AAEJ,GAEaqO,KAAUC,GAAe,OAAO;AAAA,EAC3C,gBAAgB;AACP,WAAA;AAAA,MACL,IAAI;AAAA,QACF,SAAS;AAAA,QACT,WAAWC,EAAoB,IAAI;AAAA,MACrC;AAAA,MACA,OAAO;AAAA,QACL,SAAS;AAAA,QACT,WAAWA,EAAoB,OAAO;AAAA,MAAA;AAAA,IAE1C;AAAA,EAAA;AAEJ,CAAC,EAAE,UAAU;AAAA,EACX,gBAAgB;AAAA,IACd,OAAO;AAAA,EACT;AAAA,EACA,YAAAH;AACF,CAAC,GCnGYI,KAAiB;AAAA,EAC5B,OAAO;AAAA,EACP,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,KAAK;AAAA;AAAA;AAAA;AAAA,EAIL,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAgBN,OAAO;AAAA,EACP,KAAK;AACP;ACnBA,SAASC,GAAkBC,GAAe;AAElC,QAAAC,IAAYH,GAAeE,CAAQ,GAKnCE,IAFS,IAAI,UAAU,EACF,gBAAgBD,GAAW,eAAe,EACtC,iBAEzBE,IAAe;AAAA,IACnB;AAAA,IACA;AAAA,MACE,GAAG,MAAM,KAAKD,EAAW,UAAU,EAAE,OAAO,CAACE,GAAUC,OACjDD,EAAAC,EAAK,IAAI,IAAIA,EAAK,OACfD,IACN,CAAE,CAAA;AAAA,IAAA;AAAA,EAET;AAEA,eAAM,KAAKF,EAAW,UAAU,EAAE,QAAQ,CAACI,MAAe;AACpD,QAAAA,EAAM,aAAa,GAAG;AAExB,YAAMC,IAAe;AAAA,QACnBD,EAAM,QAAQ,YAAY;AAAA,QAC1B,MAAM,KAAKA,EAAM,UAAU,EAAE,OAAO,CAACF,GAAUC,OACzCD,EAAAC,EAAK,IAAI,IAAIA,EAAK,OACfD,IACN,CAAE,CAAA;AAAA,MACP;AAEA,MAAIE,EAAM,eACKC,EAAA,KAAKD,EAAM,WAAW,GAGrCH,EAAa,KAAKI,CAAY;AAAA,IAAA;AAAA,EAChC,CACD,GAEMJ;AACT;AAGA,MAAMnmB,KAAQ;AAAA,EACZ,yBAAQwmB,IAAiB,EAAA;AAAA,EACzB,yBAAQC,IAAY,EAAA;AAAA,EACpB,wBAAOC,IAAW,EAAA;AAAA,EAClB,yBAAQC,IAAY,EAAA;AAAA,EACpB,uBAAMlG,IAAU,EAAA;AAAA,EAChB,wBAAOkD,IAAW,EAAA;AAAA,EAClB,yBAAQiD,IAAY,EAAA;AAAA,EACpB,uBAAMC,IAAsB,CAAA,CAAA;AAC9B;AAEgB,SAAAC,GAAgBC,GAAkBC,IAAiB,IAAO;AAClE,QAAA1W,IAAO2W,GAAkBF,CAAQ,GAEjCjY,IAAO9O,GAAMsQ,CAAI,KAAO,gBAAApQ,EAAAmJ,IAAA,EAAA;AAGvB,SAAA2d,IAAiBjB,GAAkBzV,CAAI,IAAIxB;AACpD;;;;ACnDO,SAASoY,GAAmB,EAAE,QAAAtmB,GAAQ,MAAAoC,GAAM,kBAAAoE,GAAkB,YAAAa,GAAY,WAAAZ,KAAkB;;AAC3F,QAAA8f,IAAerf,EAAyB,IAAI,GAE5CL,IAAaC,GAAkB,GAE/B,EAAE,YAAA0f,GAAY,UAAAlG,GAAU,UAAAmG,GAAU,SAAAC,GAAS,UAAAP,GAAU,KAAA5D,GAAK,OAAAlc,MAAUjE,EAAK,OACzE,CAACse,GAASC,CAAU,IAAIxa,EAAS,EAAK,GACtC,EAAE,GAAAlG,EAAE,IAAImI,EAAU,GAElBue,KAAS/mB,IAAA6G,KAAA,gBAAAA,EAAW,YAAX,gBAAA7G,EAAoB,QAE7BgnB,IAAaxf,EAAY,MAAM;AACnC,IAAI,CAACP,KAAc0b,KAEL1b,KAAA0f,EAAQ,QAAQ,MAAM;AAAA,EAAA,GACnC,CAAC1f,GAAY0b,CAAG,CAAC,GAEdsE,IAAazf;AAAA,IACjB,OAAO+K,MAAW;AAChB,YAAM4O,IAAO5O,EAAE,OAAO,SAASA,EAAE,OAAO,MAAM,CAAC;AAC/C,UAAI,CAAC4O;AACH;AAEF,YAAM+F,KAAW;AAAA,QACf,UAAUC,GAAgBhG,EAAK,IAAI;AAAA,QACnC,UAAUA,EAAK;AAAA,QACf,UAAUA,EAAK;AAAA,QACf,SAASiG,GAAqBjG,EAAK,IAAI;AAAA,MACzC;AACA,MAAAJ,EAAW,EAAI;AAMX,UAAA;AACI4B,cAAAA,KAAM,MAAMoE,EAAO5F,CAAI;AAC7B,QAAAva,EAAiB,EAAE,GAAGsgB,IAAU,KAAAvE,IAAK,GACrC5B,EAAW,EAAK;AAAA,eACTta,IAAY;AACF,QAAAG,EAAA,EAAE,OAAO,qBAAqBH,MAASA,GAAM,OAAO,MAAM,iBAAiB,GAC5Fsa,EAAW,EAAK,GAEhB4F,EAAQ,QAAQ,QAAQ;AAAA,MAAA;AAAA,IAE5B;AAAA,IACA,CAAC5F,GAAYna,CAAgB;AAAA,EAC/B;AAEA,EAAA6N,EAAU,MAAM;AACV,IAAA,CAACkO,KAAO,CAACiE,MACAI,EAAA,GACMpgB,EAAA,EAAE,YAAY,IAAM;AAAA,KAEtC,CAAC+b,GAAKiE,GAAYI,GAAYpgB,CAAgB,CAAC;AAElD,QAAMygB,IAAqB7f,EAAY,MAAMC,KAAc,CAACrH,CAAM,CAAC;AAE/D,SAAA6G,KAAc,CAAC0b,IAEf,gBAAAjjB,EAACiI,MACC,UAAC,gBAAA7H,EAAA,OAAA,EAAI,WAAW8H,EAAKC,GAAO,MAAM,gBAAgB,GAChD,UAAA;AAAA,IAAA,gBAAAnI;AAAA,MAAC;AAAA,MAAA;AAAA,QAAE,SAASsnB;AAAA,QACV,OAAO,EAAE,QAAQ,UAAU;AAAA,QAE1B,UAAAlG,IAEI,gBAAAphB,EAAA,QAAA,EACE,UAAEW,EAAA,6BAA6B,EAClC,CAAA,IAGC,gBAAAX,EAAA,QAAA,EACE,UAAEW,EAAA,iCAAiC,EACtC,CAAA;AAAA,MAAA;AAAA,IAEN;AAAA,IAEA,gBAAAX;AAAA,MAAC;AAAA,MAAA;AAAA,QAAM,QAAM;AAAA,QACX,UAAUunB;AAAA,QACV,KAAKN;AAAA,QACL,MAAK;AAAA,MAAA;AAAA,IAAA;AAAA,EACP,EAAA,CACF,EACF,CAAA,IAIAhE,sBAEChb,IACC,EAAA,UAAA,gBAAA7H;AAAA,IAAC;AAAA,IAAA;AAAA,MAAI,WAAW8H,EAAKC,GAAO,MAAM,gBAAgB;AAAA,MAChD,SAASmf;AAAA,MAET,UAAA;AAAA,QAAC,gBAAAlnB,EAAA,OAAA,EAAI,WAAU,0DACb,UAAA;AAAA,UAAC,gBAAAJ,EAAA,QAAA,EACE,UAAgB4mB,GAAAC,CAAQ,EAC3B,CAAA;AAAA,4BAEC,QACE,EAAA,UAAA;AAAA,YAAA7F;AAAA,YAAS;AAAA,YAEToG;AAAA,UAAA,GACH;AAAA,4BAEC,QAAK,EAAA,UAAA;AAAA,YAAA;AAAA,YAEHQ,GAAkBT,CAAQ;AAAA,YAAE;AAAA,UAAA,EAE/B,CAAA;AAAA,QAAA,GACF;AAAA,QAEA,gBAAAnnB;AAAA,UAACY;AAAA,UAAA;AAAA,YACC,QAAQ+mB;AAAA,YACR,MAAK;AAAA,YACL,SAAShnB,EAAE,eAAe;AAAA,UAAA;AAAA,QAAA;AAAA,MAC5B;AAAA,IAAA;AAAA,EAAA,GAEJ,IAIAoG,MAAU,2BAETkB,IACC,EAAA,UAAA,gBAAAjI;AAAA,IAAC;AAAA,IAAA;AAAA,MAAI,WAAWkI,EAAKC,GAAO,MAAM,gBAAgB;AAAA,MAChD,SAASmf;AAAA,MAET,UAAA,gBAAAtnB,EAAC,OACE,UACH+G,EAAA,CAAA;AAAA,IAAA;AAAA,EAAA,GAEJ,IAIK,gBAAA/G,EAAAmJ,IAAA,EAAA;AACX;AClIa,MAAA0e,KAAa9a,GAAK,OAA0B;AAAA,EACvD,MAAM;AAAA,EACN,SAAS;AAAA,EACT,OAAO;AAAA,EACP,OAAO;AAAA,EACP,YAAY;AAAA,EACZ,MAAM;AAAA,EACN,WAAW;AAAA,EAEX,aAAa;;AACJ,WAAA;AAAA,MACL,IAAGzM,IAAA,KAAK,WAAL,gBAAAA,EAAA;AAAA,MACH,gBAAgB;AAAA,QACd,OAAO;AAAA,MACT;AAAA,MACA,QAAQ,CAAC,EAAE,QAAAI,GAAQ,GAAAC,SAAc;AAAA,QAC/B,WAAWC;AAAA,QACX,gBAAgB;AAAA,UACd,QAAQ,MAAMF,EAAO,MAAA,EAAQ,QAAQ,cAAc,EAAE,IAAI;AAAA,UACzD,UAAU,MAAM;AAAA,UAChB,UAAU;AAAA,UACV,MAAM;AAAA,UACN,SAASC,EAAE,2BAA2B;AAAA,QAAA;AAAA,MAE1C;AAAA,IACF;AAAA,EACF;AAAA,EAEA,YAAY;AACV,WAAO,CAAC,EAAE,KAAK,yBAAyB;AAAA,EAC1C;AAAA,EAEA,WAAW,EAAE,gBAAAqN,KAAkB;AAEvB,UAAA;AAAA,MACJ,KAAAiV,IAAM;AAAA,MACN,UAAAjC,IAAW;AAAA,MACX,UAAAmG,IAAW;AAAA,MACX,UAAAN,IAAW;AAAA,MACX,SAAAO,IAAU;AAAA,IACZ,IAAIpZ,KAAkB,CAAC;AAUhB,WAAA;AAAA,MACL;AAAA,MARuBC;AAAA;AAAA,QAEvB,KAAK,QAAQ,kBAAkB,CAAC;AAAA,QAChCD,KAAkB,CAAA;AAAA,MACpB;AAAA,MAMEiV,IACI;AAAA,QACA;AAAA,QACA,EAAE,MAAMA,KAAO,IAAI;AAAA,QACnB;AAAA,UACE;AAAA,UACA,EAAE,OAAO,mBAAmB;AAAA,UAC5B2D,GAAgBC,GAAU,EAAI;AAAA,QAChC;AAAA,QACA;AAAA,UACE;AAAA,UACA,EAAE,OAAO,mBAAmB;AAAA,UAC5B,GAAG7F,CAAQ,IAAIoG,CAAO,KAAKQ,GAAkBT,CAAQ,CAAC;AAAA,QAAA;AAAA,UAGxD,CAAC,OAAO,EAAE,OAAO,0BAA2B,CAAA;AAAA,IAClD;AAAA,EACF;AAAA,EAEA,gBAAgB;AACP,WAAA;AAAA,MACL,UAAU;AAAA,QACR,SAAS;AAAA,QACT,WAAWxB,EAAoB,UAAU;AAAA,MAC3C;AAAA,MACA,UAAU;AAAA,QACR,SAAS;AAAA,QACT,WAAWA,EAAoB,UAAU;AAAA,MAC3C;AAAA,MACA,UAAU;AAAA,QACR,SAAS;AAAA,QACT,WAAWA,EAAoB,UAAU;AAAA,MAC3C;AAAA,MACA,SAAS;AAAA,QACP,SAAS;AAAA,QACT,WAAWA,EAAoB,SAAS;AAAA,MAC1C;AAAA,MACA,KAAK;AAAA,QACH,SAAS;AAAA,QACT,WAAWA,EAAoB,KAAK;AAAA,MACtC;AAAA,MACA,YAAY;AAAA,QACV,SAAS;AAAA,QACT,WAAW,CAAWla,MAAAka,EAAoB,YAAY,EAAEla,CAAO,MAAM;AAAA,MACvE;AAAA,MACA,OAAO;AAAA,QACL,SAAS;AAAA,QACT,WAAWka,EAAoB,OAAO;AAAA,MAAA;AAAA,IAE1C;AAAA,EACF;AAAA,EAEA,cAAc;AACL,WAAA;AAAA,MACL,eACE,CAAC1e,IAAQ,OACP,CAAC,EAAE,OAAA0E,QAEMA,EAAA,EAAQ,cAAc,EAAE,MAAM,KAAK,MAAM,OAAA1E,GAAO,EAAE,IAAI;AAAA,IAErE;AAAA,EACF;AAAA,EAEA,cAAc;AACZ,WAAO2B,GAAsBoe,EAAkB;AAAA,EAAA;AAEnD,CAAC;"}