#!/usr/bin/env node
import p from"node:fs";import l from"node:path";import S from"tty";function u(r){return r&&r.__esModule&&Object.prototype.hasOwnProperty.call(r,"default")?r.default:r}var g={exports:{}};let a=S,f=!("NO_COLOR"in process.env||process.argv.includes("--no-color"))&&("FORCE_COLOR"in process.env||process.argv.includes("--color")||process.platform==="win32"||a.isatty(1)&&process.env.TERM!=="dumb"||"CI"in process.env),t=(r,e,x=r)=>s=>{let m=""+s,o=m.indexOf(e,r.length);return~o?r+b(m,e,x,o)+e:r+m+e},b=(r,e,x,s)=>{let m=r.substring(0,s)+x,o=r.substring(s+e.length),n=o.indexOf(e);return~n?m+b(o,e,x,n):m+o},c=(r=f)=>({isColorSupported:r,reset:r?e=>`\x1B[0m${e}\x1B[0m`:String,bold:r?t("\x1B[1m","\x1B[22m","\x1B[22m\x1B[1m"):String,dim:r?t("\x1B[2m","\x1B[22m","\x1B[22m\x1B[2m"):String,italic:r?t("\x1B[3m","\x1B[23m"):String,underline:r?t("\x1B[4m","\x1B[24m"):String,inverse:r?t("\x1B[7m","\x1B[27m"):String,hidden:r?t("\x1B[8m","\x1B[28m"):String,strikethrough:r?t("\x1B[9m","\x1B[29m"):String,black:r?t("\x1B[30m","\x1B[39m"):String,red:r?t("\x1B[31m","\x1B[39m"):String,green:r?t("\x1B[32m","\x1B[39m"):String,yellow:r?t("\x1B[33m","\x1B[39m"):String,blue:r?t("\x1B[34m","\x1B[39m"):String,magenta:r?t("\x1B[35m","\x1B[39m"):String,cyan:r?t("\x1B[36m","\x1B[39m"):String,white:r?t("\x1B[37m","\x1B[39m"):String,gray:r?t("\x1B[90m","\x1B[39m"):String,bgBlack:r?t("\x1B[40m","\x1B[49m"):String,bgRed:r?t("\x1B[41m","\x1B[49m"):String,bgGreen:r?t("\x1B[42m","\x1B[49m"):String,bgYellow:r?t("\x1B[43m","\x1B[49m"):String,bgBlue:r?t("\x1B[44m","\x1B[49m"):String,bgMagenta:r?t("\x1B[45m","\x1B[49m"):String,bgCyan:r?t("\x1B[46m","\x1B[49m"):String,bgWhite:r?t("\x1B[47m","\x1B[49m"):String});g.exports=c(),g.exports.createColors=c;var v=g.exports;const i=u(v),y=l.resolve(".git/COMMIT_EDITMSG"),d=p.readFileSync(y,"utf-8").trim(),h=/^((feat|fix|docs|style|core|i18n|a11y|report|misc|cli|audits|improve|security|deprecated|refactor|perf|test|workflow|build|ci|chore|types|wip|release|deps?|merge|examples?|revert)(\(.+\))?(\:|\!\:)|(Merge|Revert|Version)) .{1,200}$/;h.test(d)||(console.error(`${i.red("ERROR: invalid commit message format.")}

`+i.yellow(`  Proper commit message format is required for automated changelog generation. Examples:

`)+`    ${i.green("feat(compiler): add 'comments' option")}
    ${i.green("fix(modal): handle events on blur (close #28)")}

`+i.yellow(`  See .github/commit-convention.md for more details.
`)),process.exit(1));
