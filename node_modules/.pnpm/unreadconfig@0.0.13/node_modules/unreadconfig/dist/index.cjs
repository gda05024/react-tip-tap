"use strict";const s$1=require("node:fs"),c=require("node:path"),d=require("lodash.merge"),s=require("jiti"),jsoncEslintParser=require("jsonc-eslint-parser"),yamlEslintParser=require("yaml-eslint-parser"),tomlEslintParser=require("toml-eslint-parser"),i=require("ini"),f=require("path"),t=require("fs");function _interopDefaultCompat(n){return n&&typeof n=="object"&&"default"in n?n.default:n}const s__default$1=_interopDefaultCompat(s$1),c__default=_interopDefaultCompat(c),d__default=_interopDefaultCompat(d),s__default=_interopDefaultCompat(s),i__default=_interopDefaultCompat(i),f__default=_interopDefaultCompat(f),t__default=_interopDefaultCompat(t),u=()=>{switch(process.platform){case"win32":return"Windows";case"linux":return"Linux";case"darwin":return"Mac";default:return"UNKNOWN"}};function o$1(n=process.cwd(),r={}){const e=n.split("/"),a=s__default(n,{interopDefault:!0,esmResolve:!0,...r});return u()==="Windows"?a(`${e[e.length-1]}`):a(`./${e[e.length-1]}`)}function loadConf(n,r={}){const{jiti:e=!0,jitiOptions:a}=r;let $=function(){try{return e?n?o$1(n,a):{}:n?require(n):{}}catch{return o$1(n,a)}}();return $.default??$}const jsLoader=(n,r,e={})=>loadConf(n,e);function jsonLoader(n,r){const e=jsoncEslintParser.parseJSON(r);return jsoncEslintParser.getStaticJSONValue(e)}function yamlLoader(n,r){const e=yamlEslintParser.parseYAML(r);return yamlEslintParser.getStaticYAMLValue(e)}function tomlLoader(n,r){const e=tomlEslintParser.parseTOML(r);return tomlEslintParser.getStaticTOMLValue(e)}function iniLoader(n,r){return i__default.parse(r)}function findConfigFile(n,r,e=[]){const a=[...e,`.${n}rc`,`.${n}rc.json`,`.${n}rc.json5`,`.${n}rc.jsonc`,`.${n}rc.yaml`,`.${n}rc.yml`,`.${n}rc.toml`,`.${n}rc.ini`,`.${n}rc.js`,`.${n}rc.ts`,`.${n}rc.cjs`,`.${n}rc.mjs`,`.config/${n}rc`,`.config/${n}rc.json`,`.config/${n}rc.json5`,`.config/${n}rc.jsonc`,`.config/${n}rc.yaml`,`.config/${n}rc.yml`,`.config/${n}rc.toml`,`.config/${n}rc.ini`,`.config/${n}rc.js`,`.config/${n}rc.ts`,`.config/${n}rc.cjs`,`.config/${n}rc.mjs`,`${n}.config.js`,`${n}.config.ts`,`${n}.config.cjs`,`${n}.config.mjs`];for(const $ of a){const g=f__default.resolve(r,$);if(t__default.existsSync(g))return g}return null}let o="";const h=()=>o;function E(n="autoconf",r={}){const{searchPlaces:e=[],default:a={},cwd:$=process.cwd(),ignoreLog:g=!1,mustExist:L=g||!1,jsOption:_}=r,m={".yml":yamlLoader,".yaml":yamlLoader,".ini":iniLoader,".toml":tomlLoader,".json":jsonLoader,".json5":jsonLoader,".jsonc":jsonLoader,".js":jsLoader,".ts":jsLoader,".cjs":jsLoader,".mjs":jsLoader,...r.loaders||{}},y=c__default.resolve($,"package.json");o=findConfigFile(n,$,e);let j="",l,p;try{if(o){const x=c__default.extname(o),C=c__default.basename(o);new RegExp(`^(.?${n}rc)$`).test(C)?(j=s__default$1.readFileSync(o,"utf-8"),p=m[".json"]):m[x]&&(j=s__default$1.readFileSync(o,"utf-8"),p=m[x])}else s__default$1.existsSync(y)&&(j=s__default$1.readFileSync(y,"utf-8"),l=m[".json"](o,j)[n]);if(j&&p&&(l=p(o,j,_),typeof l=="function"))return d__default(a,l,{default:l});if(L&&!o&&!l)return null;if(l)return d__default(a,l);console.log("READ_CONF:ERROR: \x1B[31;1mCan't find config file\x1B[0m")}catch(x){console.log(`READ_CONF:CATCH:ERROR: \x1B[31;1m${x}\x1B[0m`)}}exports.merge=d__default,exports.getConfigPath=h,exports.iniLoader=iniLoader,exports.jsLoader=jsLoader,exports.jsonLoader=jsonLoader,exports.loadConf=loadConf,exports.readConfig=E,exports.tomlLoader=tomlLoader,exports.yamlLoader=yamlLoader;
